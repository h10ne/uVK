<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VkNet</name>
    </assembly>
    <members>
        <member name="T:VkNet.Abstractions.Authorization.IAuthorizationFlow">
            <summary>
            Поток авторизации
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Authorization.IAuthorizationFlow.AuthorizeAsync">
            <summary>
            Авторизация
            </summary>
            <returns> Access token. </returns>
        </member>
        <member name="M:VkNet.Abstractions.Authorization.IAuthorizationFlow.SetAuthorizationParams(VkNet.Model.IApiAuthParams)">
            <summary>
            Задать параметры авторизации
            </summary>
            <param name="authorizationParams">Параметры авторизации</param>
        </member>
        <member name="T:VkNet.Abstractions.Authorization.IImplicitFlow">
            <inheritdoc />
            <summary>
            Implicit flow — самый короткий и простой вариант.
            Ключ возвращается на устройство пользователя, где был открыт диалог авторизации
            (в виде дополнительного параметра URL).
            Такой ключ может быть использован только для запросов непосредственно с
            устройства пользователя
            (например, для выполнения вызовов из Javascript на веб-сайте или из мобильного
            приложения).
            </summary>
            <remarks>
            https://vk.com/dev/implicit_flow_user
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Authorization.IImplicitFlow.CreateAuthorizeUrl(System.UInt64,System.UInt64,VkNet.Enums.SafetyEnums.Display,System.String)">
            <summary>
            Построить URL для авторизации.
            </summary>
            <param name="clientId"> Идентификатор Вашего приложения. </param>
            <param name="scope">
            Битовая маска настроек доступа приложения, которые необходимо проверить при
            авторизации
            пользователя и запросить отсутствующие.
            </param>
            <param name="display"> Указывает тип отображения страницы авторизации. </param>
            <param name="state">
            Произвольная строка, которая будет возвращена вместе с
            результатом авторизации.
            </param>
            <returns> Возвращает Uri для авторизации </returns>
        </member>
        <member name="M:VkNet.Abstractions.Authorization.IImplicitFlow.CreateAuthorizeUrl">
            <summary>
            Построить URL для авторизации.
            </summary>
            <returns> Возвращает Uri для авторизации </returns>
        </member>
        <member name="T:VkNet.Abstractions.IAccountCategoryAsync">
            <summary>
            Методы этого класса позволяют асинхронно производить действия с аккаунтом
            пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetCountersAsync(VkNet.Enums.Filters.CountersFilter)">
            <summary>
            Возвращает ненулевые значения счетчиков пользователя.
            </summary>
            <param name="filter">
            Счетчики, информацию о которых нужно вернуть Async(friends, messages, photos,
            videos, notes, gifts, events, groups,
            notifications, sdk, app_requests).
            sdk - возвращает количество запросов в приложениях.
            app_requests - возвращает количество непрочитанных запросов в приложениях.
            список слов, разделенных через запятую
            Async(Список слов, разделенных через запятую).
            </param>
            <returns>
            Возвращает объект, который может содержать поля friends, messages, photos,
            videos, notes, gifts, events, groups,
            notifications, sdk, app_requests.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getCounters
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SetNameInMenuAsync(System.String,System.Nullable{System.Int64})">
            <summary>
            Устанавливает короткое название приложения Async(до 17 символов), которое
            выводится пользователю в левом меню.
            </summary>
            <param name="userId">
            Идентификатор пользователя. положительное число, по умолчанию идентификатор
            текущего пользователя,
            обязательный параметр Async(Положительное число, по умолчанию идентификатор
            текущего пользователя, обязательный
            параметр).
            </param>
            <param name="name"> Короткое название приложения. строка Async(Строка). </param>
            <returns>
            Возвращает 1 в случае успешной установки короткого названия.
            Если пользователь не установил приложение в левое меню, метод вернет ошибку 148
            Async(Access to the menu of the
            user denied). Избежать этой ошибки можно с помощью метода
            account.getAppPermissions.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setNameInMenu
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SetOnlineAsync(System.Nullable{System.Boolean})">
            <summary>
            Помечает текущего пользователя как online на 15 минут.
            </summary>
            <param name="voip">
            Возможны ли видеозвонки для данного устройства флаг, может принимать значения 1
            или 0 Async(Флаг,
            может принимать значения 1 или 0).
            </param>
            <returns>
            В случае успешного выполнения метода будет возвращён код 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SetOfflineAsync">
            <summary>
            Помечает текущего пользователя как offline.
            </summary>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setOffline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.RegisterDeviceAsync(VkNet.Model.RequestParams.AccountRegisterDeviceParams)">
            <summary>
            Подписывает устройство на базе iOS, Android или Windows Phone на получение
            Push-уведомлений.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает 1 в случае успешного выполнения метода.
            На iOS и Windows Phone push-уведомления будут отображены без какой либо
            обработки.
            На Android будут приходить события в следующем формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.registerDevice
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.UnregisterDeviceAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Отписывает устройство от Push уведомлений.
            </summary>
            <param name="deviceId">
            Уникальный идентификатор устройства. строка, доступен начиная с версии 5.31
            Async(Строка,
            доступен начиная с версии 5.31).
            </param>
            <param name="sandbox">
            Флаг предназначен для iOS устройств. 1 — отписать устройство, использующего
            sandbox сервер для
            отправки push-уведомлений, 0 — отписать устройство, не использующее sandbox
            сервер флаг, может принимать значения 1
            или 0, по умолчанию 0 Async(Флаг, может принимать значения 1 или 0, по
            умолчанию 0).
            </param>
            <returns>
            Возвращает <c> true </c> в случае успешного выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.unregisterDevice
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SetSilenceModeAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Отключает push-уведомления на заданный промежуток времени.
            </summary>
            <param name="deviceId"> Идентификатор устройства для сервиса push уведомлений. </param>
            <param name="time">
            Время в секундах на которое требуется отключить уведомления. Async(-1 -
            отключить навсегда)
            </param>
            <param name="peerId">
            Идентификатор чата, для которого следует отключить
            уведомления.
            </param>
            <param name="sound">
            1 - включить звук в данном диалоге, 0 - отключить звук Async(параметр работает
            только если указан в
            peer_id передан идентификатор групповой беседы или пользователя)
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setSilenceMode
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetPushSettingsAsync(System.String)">
            <summary>
            Позволяет получать настройки Push уведомлений.
            </summary>
            <param name="deviceId">
            Уникальный идентификатор устройства. строка, доступен начиная с версии 5.31
            Async(Строка,
            доступен начиная с версии 5.31).
            </param>
            <returns>
            Возвращает объект, содержащий поля:
            disabled — отключены ли уведомления.
            disabled_until — unixtime-значение времени, до которого временно отключены
            уведомления.
            conversations — список, содержащий настройки конкретных диалогов, и их
            количество первым элементом.
            settings — объект с настройками Push-уведомлений в специальном формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getPushSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SetPushSettingsAsync(System.String,VkNet.Model.PushSettings,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Изменяет настройку Push-уведомлений.
            </summary>
            <param name="deviceId">
            Уникальный идентификатор устройства. строка, обязательный параметр
            Async(Строка, обязательный
            параметр).
            </param>
            <param name="settings">
            Сериализованный JSON-объект, описывающий настройки уведомлений в специальном
            формате данные в
            формате JSON Async(Данные в формате JSON).
            </param>
            <param name="key"> Ключ уведомления. строка Async(Строка). </param>
            <param name="value">
            Новое значение уведомления в специальном формате. список слов, разделенных
            через запятую
            Async(Список слов, разделенных через запятую).
            </param>
            <returns>
            Возвращает 1 в случае успешного выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setPushSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetAppPermissionsAsync(System.Int64)">
            <summary>
            Получает настройки текущего пользователя в данном приложении.
            </summary>
            <param name="userId">
            Идентификатор пользователя, информацию о настройках которого необходимо
            получить. По умолчанию —
            текущий пользователь. положительное число, по умолчанию идентификатор текущего
            пользователя, обязательный параметр
            Async(Положительное число, по умолчанию идентификатор текущего пользователя,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает битовую маску настроек текущего
            пользователя в данном приложении.
            Пример Если Вы хотите получить права на Доступ к друзьям и Доступ к статусам
            пользователя, то Ваша битовая маска
            будет равна: 2   1024 = 1026.
            Если, имея битовую маску 1026, Вы хотите проверить, имеет ли она доступ к
            друзьям — Вы можете сделать 1026 &amp; 2.
            Например alertAsync(1026 &amp; 2);
            см. Список возможных настроек прав доступа.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getAppPermissions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetActiveOffersAsync(System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает список активных рекламных предложений Async(офферов), выполнив
            которые пользователь сможет получить
            соответствующее количество голосов на свой счёт внутри приложения.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества офферов.
            положительное число, по
            умолчанию 0 Async(Положительное число, по умолчанию 0).
            </param>
            <param name="count">
            Количество офферов, которое необходимо получить положительное число, по
            умолчанию 100, максимальное
            значение 100 Async(Положительное число, по умолчанию 100, максимальное значение
            100).
            </param>
            <returns>
            Возвращает массив, состоящий из общего количества старгетированных на текущего
            пользователя специальных предложений
            Async(первый элемент), и списка объектов с информацией о предложениях.
            В случае, если на пользователя не старгетировано ни одного специального
            предложения, массив будет содержать элемент
            0 Async(количество специальных предложений).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getActiveOffers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.BanUserAsync(System.Int64)">
            <summary>
            Добавляет пользователя в черный список.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно добавить в черный список.
            положительное число,
            обязательный параметр Async(Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успеха метод вернет <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.banUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.UnbanUserAsync(System.Int64)">
            <summary>
            Убирает пользователя из черного списка.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно убрать из черного списка.
            положительное число,
            обязательный параметр Async(Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успеха метод вернет <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.unbanUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetBannedAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список пользователей, находящихся в черном списке.
            </summary>
            <param name="offset">
            Смещение необходимое для выборки определенного подмножества черного списка.
            положительное число
            Async(Положительное число).
            </param>
            <param name="count">
            Количество записей, которое необходимо вернуть. положительное число, по
            умолчанию 20, максимальное
            значение 200 Async(Положительное число, по умолчанию 20, максимальное значение
            200).
            </param>
            <returns>
            Возвращает набор объектов пользователей, находящихся в черном списке.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetInfoAsync(VkNet.Enums.Filters.AccountFields)">
            <summary>
            Возвращает информацию о текущем аккаунте.
            </summary>
            <param name="fields">
            Список полей, которые необходимо вернуть. Возможные значения: Async(country,
            http_required,
            own_posts_default, no_wall_replies, intro, lang, По умолчанию будут возвращены
            все поля. список слов, разделенных
            через запятую Async(Список слов, разделенных через запятую).
            </param>
            <returns>
            Метод возвращает объект, содержащий следующие поля:
            country – строковой код страны, определенный по IP адресу, с которого сделан
            запрос;
            https_required – 1 - пользователь установил на сайте настройку "Всегда
            использовать безопасное соединение"; 0 -
            безопасное соединение не требуется;
            own_posts_default – 1 - на стене пользователя по-умолчанию должны отображаться
            только собственные записи.
            Соответствует настройке на сайте "Показывать только мои записи", 0 - на стене
            пользователя должны отображаться все
            записи;
            no_wall_replies – 1 - пользователь отключил комментирование записей на стене, 0
            - комментирование записей
            разрешено;
            intro – битовая маска отвечающая за прохождение обучения использованию
            приложения;
            lang – числовой идентификатор текущего языка пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SetInfoAsync(System.String,System.String)">
            <summary>
            Позволяет редактировать информацию о текущем аккаунте.
            </summary>
            <param name="name"> Имя настройки. </param>
            <param name="value"> Значение настройки. </param>
            <returns>
            В результате успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.ChangePasswordAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Позволяет сменить пароль пользователя после успешного восстановления доступа к
            аккаунту через СМС, используя метод
            auth.restore.
            </summary>
            <param name="restoreSid">
            Идентификатор сессии, полученный при восстановлении доступа используя метод
            auth.restore.
            Async(В случае если пароль меняется сразу после восстановления доступа) строка
            Async(Строка).
            </param>
            <param name="changePasswordHash">
            Хэш, полученный при успешной OAuth авторизации по коду полученному по СМС
            Async(В
            случае если пароль меняется сразу после восстановления доступа) строка
            Async(Строка).
            </param>
            <param name="oldPassword"> Текущий пароль пользователя. строка Async(Строка). </param>
            <param name="newPassword">
            Новый пароль, который будет установлен в качестве текущего. строка, минимальная
            длина 6,
            обязательный параметр Async(Строка, минимальная длина 6, обязательный
            параметр).
            </param>
            <returns>
            В результате выполнения этого метода будет возвращен объект с полем token,
            содержащим новый токен, и полем secret в
            случае, если токен был nohttps.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.changePassword
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.GetProfileInfoAsync">
            <summary>
            Возвращает информацию о текущем профиле.
            </summary>
            <returns> Информация о текущем профиле в виде Model.User </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getProfileInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SaveProfileInfoAsync(System.Int32)">
            <summary>
            Редактирует информацию текущего профиля.
            </summary>
            <param name="cancelRequestId">
            Идентификатор заявки на смену имени, которую
            необходимо отменить.
            </param>
            <returns> Результат отмены заявки. </returns>
            <remarks>
            Метод вынесен как отдельный, потому что если в запросе передан параметр
            <paramref name="cancelRequestId" />,
            все остальные параметры игнорируются.
            </remarks>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.saveProfileInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategoryAsync.SaveProfileInfoAsync(VkNet.Model.RequestParams.AccountSaveProfileInfoParams)">
            <summary>
            Редактирует информацию текущего профиля.
            </summary>
            <param name="params"> The parameters. </param>
            <returns>
            Результат отмены заявки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.saveProfileInfo
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAdsCategoryAsync">
            <summary>
            Асинхронные методы для работы со стеной пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.AddOfficeUsersAsync(System.Int64,System.String)">
            <summary>
            Добавляет администраторов и/или наблюдателей в рекламный кабинет.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих добавляемых администраторов. Описание объектов user_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив значений - ответов на каждый запрос в массиве data. Соответствующее значение в выходном массиве равно true, если администратор успешно добавлен, и false в другом случае.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.addOfficeUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CheckLinkAsync(System.Int64,VkNet.Enums.SafetyEnums.AdsLinkType,System.String,System.Nullable{System.Int64})">
            <summary>
            Проверяет ссылку на рекламируемый объект.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "linkType">
            Вид рекламируемого объекта:
            community — сообщество;
            post — запись в сообществе;
            application — приложение ВКонтакте;
            video — видеозапись;
            site — внешний сайт.
            обязательный параметр, строка
            </param>
            <param name = "linkUrl">
            Ссылка на рекламируемый объект. обязательный параметр, строка
            </param>
            <param name = "campaignId">
            Id кампании, в которой будет создаваться объявление. целое число
            </param>
            <returns>
            Возвращается структура со следующими полями:
            status — статус ссылки:
            allowed — ссылку допустимо использовать в рекламных объявлениях;
            disallowed — ссылку недопустимо использовать для указанного вида рекламируемого объекта;
            in_progress — ссылка проверяется, необходимо немного подождать.
            description (если status равен disallowed, необязательное поле) — описание причины недопустимости использования ссылки.
            redirect_url (если конечная ссылка отличается от исходной и если status равен allowed) — конечная ссылка.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.checkLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CreateAdsAsync(System.Int64,System.String)">
            <summary>
            Создает рекламные объявления.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих создаваемые объявления. Описание объектов ad_specification см. ниже.
            Пример значения data: [{
            "campaign_id": 123456,
            "ad_format": 1,
            "cost_type": 0,
            "cpc": 2.00,
            "category1_id" : 5,
            "title": "Test Title",
            "link_url" : "https://mysite.com",
            "name": "My ad"
            }] обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив объектов - ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве имеет свойство id, соответствующее id созданного объявления (или 0 в случае неудачи), а также, возможно, поля error_code и error_desc, описывающие ошибку, при ее возникновении. Наличие одновременно ненулевого id и error_code говорит о том, что объявление было создано, однако, возможно, не все параметры установлены (например, объявление не запущено).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CreateCampaignsAsync(System.Int64,System.String)">
            <summary>
            Создает рекламные кампании.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих создаваемые кампании. Описание объектов campaign_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на запросы в массиве data. Соответствующий объект в выходном массиве содержит id созданной кампании (ноль в случае неудачи), и поля error_code и error_desc в случае возникновения ошибки. Ненулевой id и наличие error_code 602 говорит о том, что кампания создана, но, возможно, некоторые поля не были ей присвоены по причине их некорректности.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CreateClientsAsync(System.Int64,System.String)">
            <summary>
            Создаёт клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Id рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих создаваемые кампании. Описание объектов client_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на запросы в массиве data. Соответствующий объект в выходном массиве содержит id созданного клиента (ноль в случае неудачи), и поля error_code и error_desc в случае возникновения ошибки. Ненулевой id и наличие error_code 602 говорит о том, что клиент создан, но, возможно, некоторые поля не были ему присвоены по причине их некорректности.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CreateLookalikeRequestAsync(System.Int64,System.String,System.Nullable{System.Int64},System.Object)">
            <summary>
            Создаёт запрос на поиск похожей аудитории.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "sourceType">
            Тип источника исходной аудитории. На данный момент может принимать единственное значение retargeting_group. строка, обязательный параметр
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            идентификатор клиента, для которого будет создаваться аудитория. целое число
            </param>
            <param name = "retargetingGroupId">
            Только для источника типа retargeting_group: идентификатор аудитории ретаргетинга.
            </param>
            <returns>
            Поле request_id, в котором указан идентификатор созданного запроса на поиск похожей аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createLookalikeRequest
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CreateTargetGroupAsync(VkNet.Model.RequestParams.Ads.CreateTargetGroupParams)">
            <summary>
            Создает аудиторию для ретаргетинга рекламных объявлений на пользователей, которые посетили сайт рекламодателя (просмотрели информации о товаре, зарегистрировались и т.д.).
            </summary>
            <param name = "createTargetGroupParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект со следующими полями:
            id — идентификатор аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.CreateTargetPixelAsync(System.Int64,System.String,System.String,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Создаёт пиксель ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "name">
            Название пикселя — строка до 64 символов. обязательный параметр, строка
            </param>
            <param name = "domain">
            Домен сайта, на котором будет размещен пиксель. строка
            </param>
            <param name = "categoryId">
            Идентификатор категории сайта, на котором будет размещен пиксель. Для получения списка возможных идентификаторов следует использовать метод ads.getSuggestions (раздел interest_categories_v2). обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого будет создаваться пиксель. целое число
            </param>
            <returns>
            Возвращает объект со следующими полями:
            id — идентификатор пикселя
            pixel — код для размещения на сайте рекламодателя
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createTargetPixel
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.DeleteAdsAsync(System.Int64,System.String)">
            <summary>
            Архивирует рекламные объявления.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий идентификаторы объявлений. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос. Каждый ответ является либо 0, что означает успешное удаление, либо код ошибки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.DeleteCampaignsAsync(System.Int64,System.String)">
            <summary>
            Архивирует рекламные кампании.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий id удаляемых кампаний. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос. Каждый ответ является либо 0, что означает успешное удаление, либо код ошибки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.DeleteClientsAsync(System.Int64,System.String)">
            <summary>
            Архивирует клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий id удаляемых клиентов. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос. Каждый ответ является либо 0, что означает успешное удаление, либо код ошибки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.DeleteTargetGroupAsync(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет аудиторию ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор аудитории. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого будет удаляться аудитория. целое число
            </param>
            <returns>
            В случае успеха метод возвратит 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.DeleteTargetPixelAsync(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет пиксель ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetPixelId">
            Идентификатор пикселя. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого будет удаляться пиксель. целое число
            </param>
            <returns>
            В случае успеха метод возвратит 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteTargetPixel
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetAccountsAsync">
            <summary>
            Возвращает список рекламных кабинетов.
            </summary>
            <returns>
            Возвращает массив объектов, описывающих рекламные кабинеты. Каждый объект содержит следующие поля:
            account_id
            integerидентификатор рекламного кабинета. account_type
            stringтип рекламного кабинета. Возможные значения:
            general — обычный;
            agency — агентский. account_status
            integer, [0,1]статус рекламного кабинета. Возможные значения:
            1 — активен;
            0 — неактивен. access_role
            stringправа пользователя в рекламном кабинете. Возможные значения:
            admin — главный администратор;
            manager — администратор;
            reports — наблюдатель.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAccounts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetAdsAsync(VkNet.Model.RequestParams.Ads.GetAdsParams)">
            <summary>
            Возвращает список рекламных объявлений.
            </summary>
            <param name = "getAdsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает массив объектов, описывающих объявления. Каждый объект содержит следующие поля:
            id
            integerидентификатор объявления. campaign_id
            integerидентификатор кампании. ad_format
            integerформат объявления. Возможные значения:
            1 — изображение и текст;
            2 — большое изображение;
            3 — эксклюзивный формат;
            4 — продвижение сообществ или приложений, квадратное изображение;
            5 — приложение в новостной ленте (устаревший);
            6 — мобильное приложение;
            9 — запись в сообществе. cost_type
            integer, [0,1]тип оплаты. Возможные значения:
            0 — оплата за переходы;
            1 — оплата за показы. cpc
            integer(если cost_type = 0) цена за переход в копейках. cpm
            integer(если cost_type = 1) цена за 1000 показов в копейках. impressions_limit
            integer(если задано) ограничение количества показов данного объявления на одного пользователя. Может присутствовать для некоторых форматов объявлений, для которых разрешена установка точного значения. impressions_limited
            integer, [1](если задано) признак того, что количество показов объявления на одного пользователя ограничено. Может присутствовать для некоторых объявлений, для которых разрешена установка ограничения, но не разрешена установка точного значения. 1 — не более 100 показов на одного пользователя. ad_platform(если значение применимо к данному формату объявления) рекламные площадки, на которых будет показываться объявление. Возможные значения:
            (если ad_format равен 1)
            0 — ВКонтакте и сайты-партнёры;
            1 — только ВКонтакте.
            (если ad_format равен 9)
            all — все площадки;
            desktop — полная версия сайта;
            mobile — мобильный сайт и приложения. ad_platform_no_wall
            integer, [1]1 — для объявления задано ограничение «Не показывать на стенах сообществ». all_limit
            integerобщий лимит объявления в рублях. 0 — лимит не задан. category1_id
            integerID тематики или подраздела тематики объявления. См. ads.getCategories. category2_id
            integerID тематики или подраздела тематики объявления. Дополнительная тематика. status
            integerстатус объявления. Возможные значения:
            0 — объявление остановлено;
            1 — объявление запущено;
            2 — объявление удалено. name
            stringназвание объявления. approved
            integerстатус модерации объявления. Возможные значения:
            0 — объявление не проходило модерацию;
            1 — объявление ожидает модерации;
            2 — объявление одобрено;
            3 — объявление отклонено. video
            integer, [1]1 — объявление является видеорекламой. disclaimer_medical
            integer, [1]1 — включено отображение предупреждения:
            «Есть противопоказания. Требуется консультация специалиста.» disclaimer_specialist
            integer, [1]1 — включено отображение предупреждения:
            «Необходима консультация специалистов.» disclaimer_supplements
            integer, [1]1 — включено отображение предупреждения:
            «БАД. Не является лекарственным препаратом.» events_retargeting_groups
            arrayТолько для ad_format = 9. Описание событий, собираемых в группы ретаргетинга. Массив объектов, где ключом является id группы ретаргетинга, а значением - массив событий. Допустимые значений для событий:
            1 — просмотр промопоста;
            2 — переход по ссылке или переход в сообщество;
            3 — переход в сообщество;
            4 — подписка на сообщество;
            5 — отписка от новостей сообщества;
            6 — скрытие или жалоба;
            10 — запуск видео;
            11 — досмотр видео до 3с;
            12 — досмотр видео до 25%;
            13 — досмотр видео до 50%;
            14 — досмотр видео до 75%;
            15 — досмотр видео до 100%;
            20 — лайк продвигаемой записи;
            21 — репост продвигаемой записи.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetAdsLayoutAsync(VkNet.Model.RequestParams.Ads.GetAdsLayoutParams)">
            <summary>
            Возвращает описания внешнего вида рекламных объявлений.
            </summary>
            <param name = "getAdsLayoutParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает массив объектов, описывающих объявления. Каждый объект содержит следующие поля:
            id
            integer&gt;идентификатор объявления. campaign_id
            integer&gt;нтификатор кампании. ad_format
            integerформат объявления. Возможные значения:
            1 — изображение и текст;
            2 — большое изображение;
            3 — эксклюзивный формат;
            4 — продвижение сообществ или приложений, квадратное изображение;
            5 — приложение в новостной ленте (устаревший);
            6 — мобильное приложение;
            7 — специальный формат приложений;
            8 — специальный формат сообществ;
            9 — запись в сообществе;
            10 — витрина приложений. cost_type
            integer, [0,1]тип оплаты. Возможные значения:
            0 — оплата за переходы;
            1 — оплата за показы. video
            integer, [1]1 — объявление является видеорекламой. title
            stringзаголовок объявления. description
            stringописание объявления. link_url
            stringссылка на рекламируемый объект. link_domain
            stringдомен рекламируемого сайта. preview_link
            stringссылка, перейдя по которой можно просмотреть рекламное объявление так, как оно выглядит на сайте. Ссылка доступна в течение 30 минут после выполнения метода ads.getAdsLayout. image_src
            stringurl изображения объявления. image_src_2x
            stringurl изображения двойного разрешения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAdsLayout
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetAdsTargetingAsync(VkNet.Model.RequestParams.Ads.GetAdsTargetingParams)">
            <summary>
            Возвращает параметры таргетинга рекламных объявлений
            </summary>
            <param name = "getAdsTargetingParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает массив объектов - описаний таргетинга объявлений.
            Отрицательные id в поле cities означают id регионов, взятых с обратным знаком.
            Поле count содержит размер целевой аудитории на момент сохранения объявления.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAdsTargeting
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetBudgetAsync(System.Int64)">
            <summary>
            Возвращает текущий бюджет рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает единственное число — оставшийся бюджет в указанном рекламном кабинете.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getBudget
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetCampaignsAsync(System.Int64,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список кампаний рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "campaignIds">
            Фильтр выводимых рекламных кампаний.
            Сериализованный JSON-массив, содержащий id кампаний. Выводиться будут только кампании, присутствующие в campaign_ids и являющиеся кампаниями указанного рекламного кабинета. Если параметр равен строке null, то выводиться будут все кампании. строка
            </param>
            <param name = "clientId">
            Обязателен для рекламных агентств, в остальных случаях не используется. Идентификатор клиента, у которого запрашиваются рекламные кампании. целое число
            </param>
            <param name = "includeDeleted">
            Флаг, задающий необходимость вывода архивных объявлений.
            0 — выводить только активные кампании;
            1 — выводить все кампании.
            флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращает массив объектов campaign, каждый из которых содержит следующие поля:
            id — идентификатор кампании
            type — тип кампании
            normal — обычная кампания, в которой можно создавать любые объявления, кроме мобильной рекламы и записей в сообществе
            vk_apps_managed — кампания, в которой можно рекламировать только администрируемые Вами приложения и у которой есть отдельный бюджет
            mobile_apps — кампания, в которой можно рекламировать только мобильные приложения
            promoted_posts — кампания, в которой можно рекламировать только записи в сообществе
            name — название кампании
            status — статус кампании
            0 — кампания остановлена
            1 — кампания запущена
            2 — кампания удалена
            day_limit — дневной лимит кампании в рублях
            0 — лимит не задан
            all_limit — общий лимит кампании в рублях
            0 — лимит не задан
            start_time — время запуска кампании в формате unixtime
            0 — время не задано
            stop_time — время остановки кампании в формате unixtime
            0 — время не задано
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetCategoriesAsync(System.String)">
            <summary>
            Позволяет получить возможные тематики рекламных объявлений.
            </summary>
            <param name = "lang">
            Язык, на котором нужно вернуть результаты. Список поддерживаемых языков Вы можете найти на странице Запросы к API. строка
            </param>
            <returns>
            После успешного выполнения возвращает два массива объектов — v1 и v2, каждый из которых содержит объекты, описывающие тематики в следующем формате:
            id — идентификатор тематики;
            name — название тематики;
            subcategories[subcategory] (если есть хотя бы один подраздел) — список подразделов. Массив объектов, каждый из которых содержит следующие поля:
            id — идентификатор подраздела;
            name — название подраздела.
            Массив v1 включает устаревшие тематики. Актуальный список содержится в массиве v2.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getCategories
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetClientsAsync(System.Int64)">
            <summary>
            Возвращает список клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает массив объектов client — клиентов агентства с номером account_id, каждый из которых содержит следующие поля:
            id — идентификатор клиента;
            name — название клиента;
            day_limit — дневной лимит клиента в рублях;
            all_limit — общий лимит клиента в рублях.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetDemographicsAsync(VkNet.Model.RequestParams.Ads.GetDemographicsParams)">
            <summary>
            Возвращает демографическую статистику по рекламным объявлениям или кампаниям.
            </summary>
            <param name = "getDemographicsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Каждый запрашиваемый объект имеет следующие поля:
            id — id объекта из параметра ids
            type — тип объекта из параметра ids_type
            stats — список структур описывающих статистику объекта за один временной период (конкретный временной период присутствует в списке, если по нему есть какая-то статистика)
            Структура в списке stats имеет следующие поля:
            day (если period равен day) — день в формате YYYY-MM-DD
            month (если period равен month) — месяц в формате YYYY-MM
            overall (если period равен overall) — 1
            sex — список структур, описывающих статистику по полу
            age — список структур, описывающих статистику по возрасту
            sex_age — список структур, описывающих статистику по полу и возрасту
            cities — список структур, описывающих статистику по городам
            Структура в списках sex, age, sex_age, cities имеет следующие поля:
            impressions_rate — часть аудитории, просмотревшая объявление, от 0 до 1
            clicks_rate — часть аудитории, кликнувшая по объявлению, от 0 до 1
            value — значение демографического показателя, имеет разные возможные значения для разных показателей
            sex (f — женщины, m — мужчины)
            age — один из следующих промежутков: 12-18, 18-21, 21-24, 24-27, 27-30, 30-35, 35-45, 45-100
            sex_age — комбинация значений sex и age, разделённых точкой с запятой, пример: m;21-24
            cities — id города или other для остальных городов
            name — наглядное название значения указанного в value (только для городов)
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getDemographics
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetFloodStatsAsync(System.Int64)">
            <summary>
            Возвращает информацию о текущем состоянии счетчика — количество оставшихся запусков методов и время до следующего обнуления счетчика в секундах.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает объект, содержащий следующие поля:
            left — количество оставшихся методов;
            refresh — время до следующего обновления в секундах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getFloodStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetLookalikeRequestsAsync(VkNet.Model.RequestParams.Ads.GetLookalikeRequestsParams)">
             <summary>
             Возвращает список запросов на поиск похожей аудитории.
             </summary>
             <param name = "getLookalikeRequestsParams">
             Входные параметры запроса.
             </param>
             <returns>
             Если limit не равен 0, то возвращается объект с двумя полями:
            
             count — количество запросов на поиск похожей аудитории в данном кабинете.
             items — список объектов-запросов на поиск похожей аудитории запрошенного размера с запрошенным сдвигом.
             При limit равном 0, возвращается только поле count.
             Описание запроса на поиск похожей аудитории – объект со следующими полями:
             id — идентификатор запроса на поиск похожей аудитории. Является уникальным только в рамках конкретного кабинета (клиента в случае агентства).
             create_time — timestamp даты создания запроса.
             update_time — timestamp даты последнего обновления статуса запроса.
             status — текущий статус запроса, может принимать следующие значения: search_in_progress, search_done, search_failed, save_in_progress, save_done, save_failed.
             scheduled_delete_time —  timestamp даты запланированного удаления запроса.
             source_type — тип источника исходной аудитории для поиска похожей аудитории. Может принимать только значение retargeting_group.
             source_retargeting_group_id — при source_type равном retargeting_group в данном поле указан идентификатор аудитории ретаргетинга с исходной аудиторией.
             source_name — имя источника исходной аудитории. При source_type равном retargeting_group в данном поле указано название аудитории ретаргетинга на момент создания запроса.
             audience_count — размер исходной аудитории.
             save_audience_levels — Список доступных размеров аудитории для сохранения. Присутствует только после успешного поиска похожей аудитории. Поля:
             level — используется в качестве параметра level в ads.saveLookalikeRequestResult
             audience_count — размер похожей аудитории в данной опции.
             </returns>
             <remarks>
             Страница документации ВКонтакте http://vk.com/dev/ads.getLookalikeRequests
             </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetOfficeUsersAsync(System.Int64)">
            <summary>
            Возвращает список администраторов и наблюдателей рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает массив объектов - описаний пользователей рекламного кабинета. Каждый объект содержит массив описаний прав доступа к конкретным клиентам. Описание содержит два поля: client_id — id клиента и role — строка admin, manager или reports. Для admin client_id не указывается.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getOfficeUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetPostsReachAsync(System.Int64,System.String,System.String)">
            <summary>
            Возвращает подробную статистику по охвату рекламных записей из объявлений и кампаний для продвижения записей сообщества.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "idsType">
            Тип запрашиваемых объектов, которые перечислены в параметре ids:
            ad — объявления;
            campaign — кампании.
            обязательный параметр, строка
            </param>
            <param name = "ids">
            Перечисленные через запятую id запрашиваемых объявлений или кампаний, в зависимости от того, что указано в параметре ids_type. Максимум 100 объектов. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив объектов, описывающих охват. Каждый объект содержит следующие поля:
            id
            integerID объекта из параметра ids. reach_subscribers
            integerохват подписчиков. reach_total
            integerсуммарный охват. links
            integerпереходы по ссылке. to_group
            integerпереходы в сообщество. join_group
            integerвступления в сообщество. report
            integerколичество жалоб на запись. hide
            integerколичество скрытий записи. unsubscribe
            integerколичество отписавшихся участников. video_views_start*
            integerколичество стартов просмотра видео. video_views_3s*
            integerколичество досмотров видео до 3 секунд. video_views_25p*
            integerколичество досмотров видео до 25 процентов. video_views_50p*
            integerколичество досмотров видео до 50 процентов. video_views_75p*
            integerколичество досмотров видео до 75 процентов. video_views_100p*
            integerколичество досмотров видео до 100 процентов.
            * — поля с данными по статистике видео возвращаются только для объявлений или кампаний с видео, созданных после 26 января 2017 года.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getPostsReach
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetRejectionReasonAsync(System.Int64,System.Int64)">
            <summary>
            Возвращает причину, по которой указанному объявлению было отказано в прохождении премодерации.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "adId">
            Идентификатор рекламного объявления. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает объект, который может содержать поле comment, содержащее текстовый комментарий модератора, и/или массив rules, содержащий описание нарушенных объявлением правил. Ответ обязательно содержит хотя бы одно из полей comment или rules. Каждый элемент массива rules состоит из поля title (текстового пояснения) и массива paragraphs, каждый элемент которого содержит отдельный пункт правил. Элементы массива paragraphs могут содержать простую html-разметку.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getRejectionReason
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetStatisticsAsync(VkNet.Model.RequestParams.Ads.GetStatisticsParams)">
            <summary>
            Возвращает статистику показателей эффективности по рекламным объявлениям, кампаниям, клиентам или всему кабинету.
            </summary>
            <param name = "getStatisticsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Каждый запрашиваемый объект имеет следующие поля:
            id — id объекта из параметра ids
            type — тип объекта из параметра ids_type
            stats — список структур описывающих статистику объекта за один временной период (конкретный временной период присутствует в списке, если по нему есть какая-то статистика)
            Структура в списке stats имеет следующие поля:
            day (если period равен day) — день в формате YYYY-MM-DD
            month (если period равен month) — день в формате YYYY-MM
            overall (если period равен overall) — 1
            spent — потраченные средства
            impressions — просмотры
            clicks — клики
            reach (если ids_type равен ad или campaign и period равен day или month) — охват
            video_views (если ids_type равен ad) — просмотры видеоролика (для видеорекламы)
            video_views_half (если ids_type равен ad) — просмотры половины видеоролика (для видеорекламы)
            video_views_full (если ids_type равен ad) — просмотры целого видеоролика (для видеорекламы)
            video_clicks_site (если ids_type равен ad) — переходы на сайт рекламодателя из видеорекламы (для видеорекламы)
            join_rate (если ids_type равен ad или campaign) — вступления в группу, событие, подписки на публичную страницу или установки приложения (только если в объявлении указана прямая ссылка на соответствующую страницу ВКонтакте)
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getStatistics
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetSuggestionsAsync(VkNet.Model.RequestParams.Ads.GetSuggestionsParams)">
            <summary>
            Возвращает набор подсказок для различных параметров таргетинга.
            </summary>
            <param name = "getSuggestionsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает список объектов (подсказок), удовлетворяющих запросу.
            Для разделов countries, positions, interest_categories, religions, user_devices, user_os, user_browsers ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор объекта
            name — название объекта
            Для раздела regions ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор региона
            name — название региона
            type (необязательное) — название типа региона (область, автономный округ, край)
            Для разделов cities, districts, streets ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор объекта
            name — название объекта
            parent — название города или страны, в котором находится объект
            Для раздела schools ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор учебного заведения
            name — название учебного заведения
            desc — полное название учебного заведения
            type — тип учебного заведения
            school — школа
            university — университет
            faculty — факультет
            chair — кафедра
            parent — название города, в котором находится учебное заведение
            Для раздела interests ответ возвращается в виде массива строк.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getSuggestions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetTargetGroupsAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список аудиторий ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находятся аудитории. целое число
            </param>
            <param name = "extended">
            Если 1, в результатах будет указан код для размещения на сайте.
            Устаревший параметр. Используется только для старых групп ретаргетинга, которые пополнялись без помощи пикселя. Для новых аудиторий его следует опускать. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращает массив объектов, описывающих группы ретаргетинга. Каждый объект содержит следующие поля:
            id (integer) — идентификатор аудитории;
            name (string) — название аудитории ретаргетинга;
            last_updated (integer) — дата и время последнего пополнения аудитории в формате Unixtime;
            is_audience (integer, 1) — 1, если группа является аудиторией (т.е.может быть пополнена при помощи пикселя);
            is_shared (integer, 1) — 1, если группа является копией (см. метод ads.shareTargetGroup);
            audience_count (integer) — приблизительное количество пользователей, входящих в аудиторию;
            lifetime (integer) — количество дней, через которое пользователи, добавляемые в аудиторию ретаргетинга, будут автоматически исключены из неё;
            file_source (integer, 1) — признак пополнения аудитории через файл;
            api_source (integer, 1) — признак пополнения аудитории через метод ads.importTargetContacts;
            lookalike_source (integer, 1) — признак аудитории, полученной при помощи Look-a-Like.
            pixel (string) — код для размещения на сайте рекламодателя. Возвращается, если параметр extended = 1 (только для старых групп).
            domain (string) — домен сайта, где размещен код учета пользователей (только для старых групп).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getTargetGroups
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetTargetPixelsAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает список пикселей ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находятся пиксели. целое число
            </param>
            <returns>
            Возвращает массив объектов, каждый из которых содержит следующие поля:
            target_pixel_id (integer) — идентификатор пикселя;
            name (string) — название пикселя;
            last_updated (integer) — дата и время последнего использования пикселя в формате Unixtime;
            domain (string) — домен сайта, где размещен пиксель;
            category_id (integer) — идентификатор категории сайта, где размещён пиксель (см. раздел interest_categories метода ads.getSuggestions);
            pixel (string) — код для размещения на сайте рекламодателя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getTargetPixels
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetTargetingStatsAsync(VkNet.Model.RequestParams.Ads.GetTargetingStatsParams)">
            <summary>
            Возвращает размер целевой аудитории таргетинга, а также рекомендованные значения CPC и CPM.
            </summary>
            <param name = "getTargetingStatsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект, описывающий целевую аудиторию и содержащий следующие поля:
            audience_count (integer) — размер целевой аудитории
            recommended_cpc (number) — рекомендованная цена для объявлений за клики, указана в рублях с копейками в дробной части.
            recommended_cpm (number)— рекомендованная цена для объявлений за показы, указана в рублях с копейками в дробной части.
            Обратите внимание, минимальный размер целевой аудитории — 100 человек. Если заданным критериям соответствует меньшее количество пользователей, размер аудитории будет считаться равным нулю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getTargetingStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetUploadUrlAsync(System.Int64)">
            <summary>
            Возвращает URL-адрес для загрузки фотографии рекламного объявления.
            </summary>
            <param name = "adFormat">
            Формат объявления:
            1 — изображение и текст;
            2 — большое изображение;
            3 — эксклюзивный формат;
            4 — продвижение сообществ или приложений, квадратное изображение;
            5 — приложение в новостной ленте (устаревший);
            6 — мобильное приложение;
            9 — запись в сообществе.
            обязательный параметр, целое число
            </param>
            <returns>
            Возвращает url-адрес для загрузки изображения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getUploadURl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.GetVideoUploadUrlAsync">
            <summary>
            Возвращает URL-адрес для загрузки видеозаписи рекламного объявления.
            </summary>
            <returns>
            Возвращает url-адрес для загрузки видеоролика.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getVideoUploadURl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.ImportTargetContactsAsync(System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Импортирует список контактов рекламодателя для учета зарегистрированных во ВКонтакте пользователей в аудитории ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор аудитории таргетинга. обязательный параметр, целое число
            </param>
            <param name = "contacts">
            Список телефонов, email адресов или идентификаторов пользователей, указанных через запятую. Также принимаются их MD5-хеши. обязательный параметр, строка
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находится аудитория. целое число
            </param>
            <returns>
            Возвращает количество обработанных контактов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.importTargetContacts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.RemoveOfficeUsersAsync(System.Int64,System.String)">
            <summary>
            Удаляет администраторов и/или наблюдателей из рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий id удаляемых администраторов. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив значений - ответов на каждый запрос в массиве data. Соответствующее значение в выходном массиве равно true, если администратор успешно удален, и false в другом случае.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.removeOfficeUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.RemoveTargetContactsAsync(System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Принимает запрос на исключение контактов рекламодателя из аудитории ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор аудитории таргетинга. обязательный параметр, целое число
            </param>
            <param name = "contacts">
            Список телефонов, email адресов или идентификаторов пользователей, указанных через запятую. Также принимаются их MD5-хеши. обязательный параметр, строка
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находится аудитория. целое число
            </param>
            <returns>
            Возвращает 1 в случае успешного принятия заявки на исключение аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.removeTargetContacts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.SaveLookalikeRequestResultAsync(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64})">
             <summary>
             Сохраняет результат поиска похожей аудитории.
             </summary>
             <param name = "accountId">
             Идентификатор рекламного кабинета. обязательный параметр, целое число
             </param>
             <param name = "requestId">
             Идентификатор запроса на поиск похожей аудитории. Получить список всех запросов на поиск похожей аудитории для данного кабинета можно с помощью ads.getLookalikeRequests обязательный параметр, целое число
             </param>
             <param name = "level">
             Уровень конкретного размера похожей аудитории для сохранения. Получить список всех доступных размеров аудиторий можно с помощью ads.getLookalikeRequests. обязательный параметр, целое число
             </param>
             <param name = "clientId">
             Только для рекламных агентств.
             идентификатор клиента, для которого будут сохраняться аудитория. целое число
             </param>
             <returns>
             Возвращает объект с полями:
            
             retargeting_group_id – идентификатор группы ретаргетинга, в которую будет сохранена запрошенная похожая аудитория.
             audience_count – размер запрошенной похожей аудитории.
             </returns>
             <remarks>
             Страница документации ВКонтакте http://vk.com/dev/ads.saveLookalikeRequestResult
             </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.ShareTargetGroupAsync(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Предоставляет доступ к аудитории ретаргетинга другому рекламному кабинету. В результате выполнения метода возвращается идентификатор аудитории для указанного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор исходной аудитории. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находится исходная аудитория. целое число
            </param>
            <param name = "shareWithClientId">
            Id клиента, рекламному кабинету которого необходимо предоставить доступ к аудитории. целое число
            </param>
            <returns>
            Возвращает объект со следующими полями:
            id — идентификатор аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.shareTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.UpdateAdsAsync(System.Int64,System.String)">
            <summary>
            Редактирует рекламные объявления.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих изменения в объявлениях. Описание объектов ad_edit_specification см. ниже обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве содержит идентификатор изменяемого объявления и, в случае возникновения ошибки, поля error_code и error_desc.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.UpdateCampaignsAsync(System.Int64,System.String)">
            <summary>
            Редактирует рекламные кампании.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих изменения в кампаниях. Описание объектов campaign_mod_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве содержит идентификатор изменяемого клиента и, в случае возникновения ошибки, поля error_code и error_desc.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.UpdateClientsAsync(System.Int64,System.String)">
            <summary>
            Редактирует клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих изменения в клиентах. Описание объектов client_mod_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве содержит id изменяемого клиента и, в случае возникновения ошибки, поля error_code и error_desc.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.UpdateTargetGroupAsync(VkNet.Model.RequestParams.Ads.UpdateTargetGroupParams)">
            <summary>
            Редактирует аудиторию ретаргетинга.
            </summary>
            <param name = "updateTargetGroupParams">
            Входные параметры запроса.
            </param>
            <returns>
            В случае успеха метод возвратит 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategoryAsync.UpdateTargetPixelAsync(VkNet.Model.RequestParams.Ads.UpdateTargetPixelParams)">
            <summary>
            Редактирует пиксель ретаргетинга.
            </summary>
            <param name = "updateTargetPixelParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateTargetPixel
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAppsCategoryAsync">
            <summary>
            Методы для асинхронной работы с методами приложений.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.GetCatalogAsync(VkNet.Model.RequestParams.AppGetCatalogParams,System.Boolean)">
            <summary>
            Возвращает список приложений, доступных для пользователей сайта через каталог
            приложений.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает общее число найденных приложений и массив
            объектов приложений.
            </returns>
            <remarks>
            К методу можно делать не более 60 запросов в минуту с одного IP или id.
            Страница документации ВКонтакте http://vk.com/dev/apps.getCatalog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.GetAsync(VkNet.Model.RequestParams.AppGetParams,System.Boolean)">
            <summary>
            Возвращает данные о запрошенном приложении на платформе ВКонтакте
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает объект приложения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.SendRequestAsync(VkNet.Model.RequestParams.AppSendRequestParams)">
            <summary>
            Позволяет отправить запрос другому пользователю в приложении, использующем
            авторизацию ВКонтакте.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            В случае удачного выполнения метод возвращает идентификатор созданного запроса,
            например:
            10013.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.sendRequest
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.DeleteAppRequestsAsync">
            <summary>
            Удаляет все уведомления о запросах, отправленных из текущего приложения.
            </summary>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.deleteAppRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.GetFriendsListAsync(VkNet.Enums.SafetyEnums.AppRequestType,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Создает список друзей, который будет использоваться при отправке пользователем
            приглашений в приложение.
            </summary>
            <param name="type"> Tип создаваемого списка друзей. </param>
            <param name="extended">
            Параметр, определяющий необходимость возвращать расширенную информацию о
            пользователях.
            0 — возвращаются только идентификаторы;
            1 — будут дополнительно возвращены имя и фамилия. флаг, может принимать
            значения 1 или 0, по умолчанию 0
            Async(Флаг, может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <param name="count"> Количество пользователей в создаваемом списке. </param>
            <param name="offset">
            Смещение относительно первого пользователя для выборки определенного
            подмножества.
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть. См. подробное
            описание.
            </param>
            <returns>
            После успешного выполнения возвращает список пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.getFriendsList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.GetLeaderboardAsync(VkNet.Enums.SafetyEnums.AppRatingType,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает рейтинг пользователей в игре.
            </summary>
            <param name="type">
            Level — рейтинг по уровням,
            points — рейтинг по очкам, начисленным за выполнение миссий.
            score — рейтинг по очкам, начисленным напрямую Async(apps.getScore). строка,
            обязательный параметр Async(Строка,
            обязательный параметр).
            </param>
            <param name="global">
            1 — глобальный рейтинг по всем игрокам,
            0 — рейтинг по друзьям пользователя флаг, может принимать значения 1 или 0, по
            умолчанию 1 Async(Флаг, может
            принимать значения 1 или 0, по умолчанию 1).
            </param>
            <param name="extended">
            1 — дополнительно возвращает информацию о пользователе. флаг, может принимать
            значения 1 или 0,
            по умолчанию 0 Async(Флаг, может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <returns>
            После успешного выполнения возвращает список друзей с текущим уровнем и
            количеством очков в игре, отсортированный
            по убыванию текущего уровня или количества очков.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.getLeaderboard
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategoryAsync.GetScoreAsync(System.Int64)">
            <summary>
            Метод возвращает количество очков пользователя в этой игре.
            </summary>
            <param name="userId">
            Идентификатор пользователя. положительное число, по умолчанию идентификатор
            текущего пользователя,
            обязательный параметр Async(Положительное число, по умолчанию идентификатор
            текущего пользователя, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает число очков для пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.getScore
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync">
            <summary>
            Список методов секции appWidgets
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetAppImageUploadServerAsync(VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <summary>
            Позволяет получить адрес для загрузки фотографии в коллекцию приложения для виджетов приложений сообществ.
            </summary>
            <param name = "imageType">
            Тип изображения. Возможные значения:
            24x24;
            50x50;
            160x160;
            160x240;
            510x128.
            обязательный параметр
            </param>
            <returns>
            Возвращает объект с единственным полем upload_url, содержащим URL для загрузки изображения.
            Для загрузки изображения сгенерируйте POST-запрос с файлом в поле image на полученный адрес, а затем вызовите метод appWidgets.saveAppImage.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.getAppImageUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetAppImagesAsync(System.Int32,System.Int32,VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <summary>
            Позволяет получить коллекцию изображений, загруженных для приложения, в виджетах приложений сообществ.
            </summary>
            <param name="offset">Смещение для получения определённого подмножества результатов.</param>
            <param name="count">Максимальное число результатов для получения.</param>
            <param name="imageType">Тип изображения.</param>
            <returns>
            Возвращает общее число результатов в поле count (integer) и массив объектов, описывающих изображения, в поле items (array).
            Каждый объект массива  items содержит следующие поля:
            id (string) — идентификатор изображения. Обратите внимание, идентификаторы изображений для виджетов отличаются от обычных фотографий, и НЕ представляют собой сочетание owner_id+"_"+photo_id. Полученный идентификатор нужно использовать в коде виджета «как есть».
            type (string) — тип изображения. Возможные значения:
            160x160,
            160x240,
            24x24,
            510x128,
            50x50.
            images  (array) — массив копий изображения. Каждый объект в массиве содержит следующие поля:
            url (string) — URL копии;
            width (integer) — ширина в px;
            height (integer) — высота в px.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.getAppImages
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetGroupImageUploadServerAsync(VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <summary>
            Позволяет получить адрес для загрузки фотографии в коллекцию сообщества для виджетов приложений сообществ.
            </summary>
            <param name="imageType">Тип изображения.</param>
            <returns>
            Возвращает объект с единственным полем upload_url, содержащим URL для загрузки изображения.
            Для загрузки изображения сгенерируйте POST-запрос с файлом в поле image на полученный адрес, а затем вызовите метод appWidgets.saveGroupImage.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.getGroupImageUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetGroupImagesAsync(System.Int32,System.Int32,VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <summary>
            Позволяет получить коллекцию изображений, загруженных для приложения, в виджетах приложений сообществ.
            </summary>
            <param name="offset">Смещение для получения определённого подмножества результатов.</param>
            <param name="count">Максимальное число результатов для получения.</param>
            <param name="imageType">Тип изображения.</param>
            <returns>
            Возвращает общее число результатов в поле count (integer) и массив объектов, описывающих изображения, в поле items (array).
            Каждый объект массива  items содержит следующие поля:
            id (string) — идентификатор изображения. Обратите внимание, идентификаторы изображений для виджетов отличаются от обычных фотографий, и НЕ представляют собой сочетание owner_id+"_"+photo_id. Полученный идентификатор нужно использовать в коде виджета «как есть».
            type (string) — тип изображения. Возможные значения:
            160x160,
            160x240,
            24x24,
            510x128,
            50x50.
            images  (array) — массив копий изображения. Каждый объект в массиве содержит следующие поля:
            url (string) — URL копии;
            width (integer) — ширина в px;
            height (integer) — высота в px.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.getGroupImages
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetImagesByIdAsync(System.String)">
            <summary>
            Позволяет получить изображение для виджетов приложений сообществ по его идентификатору.
            </summary>
            <param name="images">список идентификаторов изображений для получения.</param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            id (string) — идентификатор изображения. Обратите внимание, идентификаторы изображений для виджетов отличаются от обычных фотографий, и НЕ представляют собой сочетание owner_id+"_"+photo_id. Полученный идентификатор нужно использовать в коде виджета «как есть».
            type (string) — тип изображения. Возможные значения:
            160x160,
            160x240,
            24x24,
            510x128,
            50x50.
            images  (array) — массив копий изображения. Каждый объект в массиве содержит следующие поля:
            url (string) — URL копии;
            width (integer) — ширина в px;
            height (integer) — высота в px.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.getImagesById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.SaveAppImageAsync(System.String,System.String)">
            <summary>
            Позволяет сохранить изображение в коллекцию приложения для виджетов приложений сообществ после загрузки на сервер.
            </summary>
            <param name = "hash">
            Параметр hash, полученный после загрузки на сервер. строка, обязательный параметр
            </param>
            <param name = "image">
            Параметр image, полученный после загрузки на сервер. строка, обязательный параметр
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            id (string) — идентификатор изображения.
            type (string) — тип изображения. Возможные значения:
            160x160,
            160x240,
            24x24,
            510x128,
            50x50.
            images  (array) — массив копий изображения. Каждый объект в массиве содержит следующие поля:
            url (string) — URL копии;
            width (integer) — ширина в px;
            height (integer) — высота в px.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.saveAppImage
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.SaveGroupImageAsync">
            <summary>
            Позволяет сохранить изображение в коллекцию сообщества для виджетов приложений сообществ. после загрузки на сервер.
            </summary>
            <returns>
            Возвращает объект, который содержит следующие поля:
            id (string) — идентификатор изображения.
            type (string) — тип изображения. Возможные значения:
            160x160,
            160x240,
            24x24,
            510x128,
            50x50.
            images  (array) — массив копий изображения. Каждый объект в массиве содержит следующие поля:
            url (string) — URL копии;
            width (integer) — ширина в px;
            height (integer) — высота в px.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.saveGroupImage
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.UpdateAsync">
            <summary>
            Позволяет обновить виджет приложения сообщества.
            </summary>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/appWidgets.update
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync">
            <summary>
            Формы сбора заявок  Подойдут для записи клиентов, предварительной регистрации, подписки на рассылки, запросов информации, подключения услуг, оформления заказов и многого другого.
            Вы создаете формы с заявками, а пользователи оставляют свою контактную информацию. Вам остается завершить оформление заявки, связавшись с ними удобным способом.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.CreateAsync(VkNet.Model.LeadForms.LeadFormsCreateParams)">
            <summary>
            Создаёт форму сбора заявок.
            </summary>
            <param name = "createParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращается структура с информацией о созданной форме:
            form_id — идентификатор формы;
            url — ссылка на форму.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.create
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет форму сбора заявок.
            </summary>
            <param name = "groupId">
            Идентификатор группы, из которой надо удалить форму. обязательный параметр, целое число
            </param>
            <param name = "formId">
            Идентификатор удаляемой формы. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает идентификатор удалённой формы
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.GetAsync(System.Int64,System.Int64)">
            <summary>
            Возвращает информацию о форме сбора заявок.
            </summary>
            <param name = "groupId">
            Идентификатор группы, в которой находится форма. обязательный параметр, целое число
            </param>
            <param name = "formId">
            Идентификатор формы. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает структуру с информацией о форме. Значения полей см. в методе leadForms.create.
            Дополнительно возвращает следующие поля:
            form_id — идентификатор формы;
            leads_count — количество заявок;
            url — ссылка на форму.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.GetLeadsAsync(System.Int64,System.Int64,System.String,System.Nullable{System.UInt64})">
            <summary>
            Возвращает заявки формы.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества, в котором находится форма. обязательный параметр, целое число
            </param>
            <param name = "formId">
            Идентификатор формы. обязательный параметр, целое число
            </param>
            <param name = "nextPageToken">
            Строка, полученная из предыдущего запроса для получения следующей порции результатов. строка
            </param>
            <param name = "limit">
            Количество возвращаемых заявок за один запрос. положительное число, по умолчанию 10, максимальное значение 1000, минимальное значение 1
            </param>
            <returns>
            Возвращает массив структур со следующими полями:
            lead_id — идентификатор заявки;
            user_id — идентификатор пользователя, оставившего заявку;
            date — дата и время оставления заявки в формате unix timestamp;
            answers — информация об ответах на вопросы — массив структур со следующими полями:
            key — ключ вопроса. Совпадает с типом стандартного вопроса (его полем type), или с ключом нестандартного вопроса (поле key). Для нестандартных вопросов, для которых не был задан ключ, будет использовано значение вида custom_0, где «0» — порядковый номер нестандартного вопроса, считая с 0.
            answer — ответ на вопрос. Структура (для всех вопросов, кроме типа checkbox) или массив структур (для типа checkbox) со следующими полями:
            key — ключ ответа (в случае, если был задан при создании формы);
            value — текст ответа;
            ad_id — идентификатор рекламного объявления, с которого пришла заявка (поле отсутствует в случае, если заявка пришла не из рекламного объявления).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.getLeads
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.GetUploadURLAsync">
            <summary>
            Возвращает URL для загрузки обложки для формы.
            </summary>
            <returns>
            Возвращает URL для загрузки обложки для формы.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.getUploadURl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.ListAsync(System.Int64)">
            <summary>
            Возвращает список форм сообщества.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает массив структур с описанием форм. Подробнее о структуре описания формы см. метод leadForms.get.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.list
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.Async.ILeadFormsCategoryAsync.UpdateAsync(VkNet.Model.LeadForms.LeadFormsUpdateParams)">
            <summary>
            Обновляет форму сбора заявок.
            </summary>
            <param name = "updateParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращается структура с информацией об обновлённой форме:
            form_id — идентификатор формы;
            url — ссылка на форму.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.update
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Category.IOrdersCategoryAsync">
            <summary>
            Orders Методы этой секции предоставляют дополнительную возможность управления состоянием заказов, которые были сделаны пользователями в приложениях.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.CancelSubscriptionAsync(System.UInt64,System.UInt64,System.Nullable{System.Boolean})">
            <summary>
            Отменяет подписку.
            </summary>
            <param name = "userId">
            Идентификатор пользователя. положительное число, обязательный параметр
            </param>
            <param name = "subscriptionId">
            Идентификатор подписки. положительное число, обязательный параметр
            </param>
            <param name = "pendingCancel">
            1 — отключить подписку по истечении текущего оплаченного периода;
            0 — отключить подписку сразу. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает 1. При отмене подписки на адрес обратного вызова будет отправлено платёжное уведомление с типом subscription_status_change.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.cancelSubscription
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.ChangeStateAsync(System.UInt64,VkNet.Enums.SafetyEnums.OrderStateAction,System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Изменяет состояние заказа.
            </summary>
            <param name = "orderId">
            Идентификатор заказа. положительное число, обязательный параметр
            </param>
            <param name = "action">
            Действие, которое нужно произвести с заказом.
            Возможные действия:
            cancel — отменить неподтверждённый заказ.
            charge — подтвердить неподтверждённый заказ. Применяется только если не удалось обработать уведомление order_change_state.
            refund — отменить подтверждённый заказ.
            строка, обязательный параметр
            </param>
            <param name = "appOrderId">
            Внутренний идентификатор заказа в приложении. положительное число
            </param>
            <param name = "testMode">
            Если этот параметр равен 1, изменяется состояние заказа тестового режима. По умолчанию 0. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            После успешного выполнения возвращает новый статус заказа.
            Статусы заказа
            chargeable — неподтверждённый заказ. В это состояние заказы попадают в случае, если магазин не обрабатывает уведомления.
            declined — отменённый заказ на этапе получения информации о товаре, например, была получена ошибка 20, "Товара не существует". В это состояние заказ может попасть из состояния chargeable.
            cancelled — отменённый заказ. В это состояние заказ может попасть из состояния chargeable.
            charged — оплаченный заказ. В это состояние заказ может попасть из состояния chargeable, либо сразу после оплаты, если приложение обрабатывает уведомления.
            refunded — отменённый после оплаты заказ, голоса возвращены пользователю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.changeState
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.GetAsync(System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список заказов.
            </summary>
            <param name = "offset">
            Смещение относительно самого нового найденного заказа для выборки определенного подмножества. По умолчанию 0. положительное число, по умолчанию 0
            </param>
            <param name = "count">
            Количество возвращаемых заказов. положительное число, максимальное значение 1000, по умолчанию 100
            </param>
            <param name = "testMode">
            Если этот параметр равен 1, возвращается список заказов тестового режима. По умолчанию 0. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            После успешного выполнения возвращает массив найденных заказов, отсортированный по дате в обратном порядке (самый новый в начале).
            Статусы заказа
            chargeable — неподтверждённый заказ. В это состояние заказы попадают в случае, если магазин не обрабатывает уведомления.
            declined — отменённый заказ на этапе получения информации о товаре, например, была получена ошибка 20, "Товара не существует". В это состояние заказ может попасть из состояния chargeable.
            cancelled — отменённый заказ. В это состояние заказ может попасть из состояния chargeable.
            charged — оплаченный заказ. В это состояние заказ может попасть из состояния chargeable, либо сразу после оплаты, если приложение обрабатывает уведомления.
            refunded — отменённый после оплаты заказ, голоса возвращены пользователю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.GetAmountAsync(System.UInt64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает стоимость голосов в валюте пользователя.
            </summary>
            <param name = "userId">
            Идентификатор пользователя положительное число, обязательный параметр
            </param>
            <param name = "votes">
            Список голосов. Например: 1,7,77 список слов, разделенных через запятую, обязательный параметр, количество элементов должно составлять не более 100
            </param>
            <returns>
            Возвращает валюту пользователя и массив результатов для каждого значения из votes.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getAmount
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию об отдельном заказе.
            </summary>
            <param name = "orderIds">
            Идентификаторы заказов (при запросе информации о нескольких заказах). список положительных чисел, разделенных запятыми
            </param>
            <param name = "testMode">
            Если этот параметр равен 1, возвращаются заказы тестового режима. По умолчанию 0. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращается массив найденных заказов, отсортированный по дате в обратном порядке (самый новый в начале).
            Статусы заказа
            chargeable — неподтверждённый заказ. В это состояние заказы попадают в случае, если магазин не обрабатывает уведомления.
            declined — отменённый заказ на этапе получения информации о товаре, например, была получена ошибка 20, "Товара не существует". В это состояние заказ может попасть из состояния chargeable.
            cancelled — отменённый заказ. В это состояние заказ может попасть из состояния chargeable.
            charged — оплаченный заказ. В это состояние заказ может попасть из состояния chargeable, либо сразу после оплаты, если приложение обрабатывает уведомления.
            refunded — отменённый после оплаты заказ, голоса возвращены пользователю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.GetUserSubscriptionByIdAsync(System.UInt64,System.UInt64)">
            <summary>
            Получает информацию о подписке по её идентификатору.
            </summary>
            <param name = "userId">
            Идентификатор пользователя. положительное число, обязательный параметр
            </param>
            <param name = "subscriptionId">
            Идентификатор подписки. положительное число, обязательный параметр
            </param>
            <returns>
            Возвращает объект, описывающий подписку. Содержит следующие поля:
            id (integer) — идентификатор подписки.
            item_id (string) — идентификатор товара в приложении.
            status (string) — статус подписки. Возможные значения:
            chargeable — неподтвержденная подписка;
            active — подписка активна;
            cancelled — подписка отменена.
            price (integer) — стоимость подписки.
            period (integer) — период подписки.
            create_time (integer) — дата создания в Unixtime.
            update_time (integer) — дата обновления в Unixtime.
            period_start_time (integer) — дата начала периода в Unixtime.
            next_bill_time (integer) — дата следующего платежа в Unixtime (если status = active).
            trial_expire_time (integer) — дата истечения триал-периода (если есть).
            pending_cancel (boolean, [true]) — true, если подписка ожидает отмены.
            cancel_reason (string) — причина отмены (если есть). Возможные значения:
            user_decision — по инициативе пользователя;
            app_decision — по инициативе приложения;
            payment_fail — из-за проблемы с платежом;
            unknown — причина неизвестна.
            test_mode (boolean, [true]) — true, если используется тестовый режим.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getUserSubscriptionById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.GetUserSubscriptionsAsync(System.UInt64)">
            <summary>
            Получает список активных подписок пользователя.
            </summary>
            <param name = "userId">
            Идентификатор пользователя, подписки которого необходимо получить. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в поле count и массив объектов, описывающих подписку, в поле items. Каждый объект массива items содержит следующие поля:
            id (integer) — идентификатор подписки.
            item_id (string) — идентификатор товара в приложении.
            status (string) — статус подписки. Возможные значения:
            active — подписка активна.
            price (integer) — стоимость подписки.
            period (integer) — период подписки.
            create_time (integer) — дата создания в Unixtime.
            update_time (integer) — дата обновления в Unixtime.
            period_start_time (integer) — дата начала периода в Unixtime.
            next_bill_time (integer) — дата следующего платежа в Unixtime (если status = active).
            trial_expire_time (integer) — дата истечения триал-периода (если есть).
            pending_cancel (boolean, [true]) — true, если подписка ожидает отмены.
            cancel_reason (string) — причина отмены (если есть). Возможные значения:
            user_decision — по инициативе пользователя;
            app_decision — по инициативе приложения;
            payment_fail — из-за проблемы с платежом;
            unknown — причина неизвестна.
            test_mode (boolean, [true]) — true, если используется тестовый режим.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getUserSubscriptions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IOrdersCategoryAsync.UpdateSubscriptionAsync(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Обновляет цену подписки для пользователя.
            </summary>
            <param name = "userId">
            Идентификатор пользователя. положительное число, обязательный параметр
            </param>
            <param name = "subscriptionId">
            Идентификатор подписки. Подписка должна быть активна. положительное число, обязательный параметр
            </param>
            <param name = "price">
            Новая стоимость подписки (должна быть ниже, чем текущая). положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.updateSubscription
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Category.ISecureCategoryAsync">
            <summary>
            Secure В этой секции представлены административные методы, предназначенные для вызова от имени приложения с использованием стороннего сервера. Для использования этих методов необходимо применять специальную схему авторизации.
            Помимо стандартных параметров, указанных в описании методов, к запросу необходимо добавлять параметр client_secret, содержащий значение из поля «Защищенный ключ» в настройках приложения.
            Обратите внимание, тестовый режим при работе с secure-методами не поддерживается!
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.AddAppEventAsync(System.UInt64,System.UInt64,System.Nullable{System.UInt64})">
            <summary>
            Добавляет информацию о достижениях пользователя в приложении.
            </summary>
            <param name = "userId">
            Идентификатор пользователя, для которого нужно записать данные. положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр
            </param>
            <param name = "activityId">
            Идентификатор достижения. Доступные значения:
            1 — достигнут новый уровень, работает аналогично secure.setUserLevel;
            2 — заработано новое число очков;
            положительное число, отличное от 1 и 2 — выполнена миссия с идентификатором activity_id.
            положительное число, обязательный параметр
            </param>
            <param name = "value">
            Номер уровня или заработанное количество очков (соответственно, для activity_id=1 и activity_id=2).
            Параметр игнорируется при значении activity_id, отличном от 1 и 2. положительное число, максимальное значение 10000
            </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.addAppEvent
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.CheckTokenAsync(System.String,System.String)">
            <summary>
            Позволяет проверять валидность пользователя в IFrame, Flash  и Standalone-приложениях с помощью передаваемого в приложения параметра access_token.
            </summary>
            <param name = "token">
            Клиентский access_token строка
            </param>
            <param name = "ip">
            Ip адрес пользователя. Обратите внимание, что пользователь может обращаться через ipv6, в этом случае обязательно передавать ipv6 адрес пользователя.
            Если параметр не передан – ip адрес проверен не будет. строка
            </param>
            <returns>
            В случае успеха будет возвращен объект, содержащий следующие поля:
            success = 1
            user_id = идентификатор пользователя
            date = unixtime дата, когда access_token был сгенерирован
            expire = unixtime дата, когда access_token станет не валиден
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.checkToken
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetAppBalanceAsync">
            <summary>
            Возвращает платежный баланс (счет) приложения в сотых долях голоса.
            </summary>
            <returns>
            Возвращает количество голосов (в сотых долях), которые есть на счете приложения.
            Например, если метод возвращает 5000, это означает, что на балансе приложения 50 голосов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.getAppBalance
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetSmsHistoryAsync(System.Nullable{System.UInt64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.UInt64})">
            <summary>
            Выводит список SMS-уведомлений, отосланных приложением с помощью метода secure.sendSMSNotification.
            </summary>
            <param name = "userId">
            Фильтр по id пользователя, которому высылалось уведомление. положительное число
            </param>
            <param name = "dateFrom">
            Фильтр по дате начала. Задается в виде UNIX-time. положительное число
            </param>
            <param name = "dateTo">
            Фильтр по дате окончания. Задается в виде UNIX-time. положительное число
            </param>
            <param name = "limit">
            Количество возвращаемых записей. По умолчанию 1000. положительное число, по умолчанию 1000, максимальное значение 1000
            </param>
            <returns>
            Возвращает список SMS-уведомлений, отосланных приложением, отсортированных по убыванию даты и отфильтрованных с помощью параметров uid, date_from, date_to, limit.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.getSMSHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetTransactionsHistoryAsync">
            <summary>
            Выводит историю транзакций по переводу голосов между пользователями и приложением.
            </summary>
            <returns>
            Возвращает список транзакций, отсортированных по убыванию даты, и отфильтрованных с помощью параметров type, uid_from, uid_to, date_from, date_to, limit.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.getTransactionsHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetUserLevelAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Возвращает ранее выставленный игровой уровень одного или нескольких пользователей в приложении.
            </summary>
            <param name = "userIds">
            Идентификаторы пользователей, информацию об уровнях которых требуется получить. список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <returns>
            Возвращает значения игровых уровней пользователей в приложении.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.getUserLevel
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.SendNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Отправляет уведомление пользователю.
            </summary>
            <param name = "message">
            Текст уведомления, который следует передавать в кодировке UTF-8 (максимум 254 символа). строка, обязательный параметр
            </param>
            <param name = "userIds">
            Перечисленные через запятую идентификаторы пользователей, которым отправляется уведомление (максимум 100 штук). список положительных чисел, разделенных запятыми
            </param>
            <returns>
            Возвращает перечисленные через запятую ID пользователей, которым было успешно отправлено уведомление.
            Обратите внимание, нельзя отправлять пользователю более 1 уведомления в час (3 в сутки). Кроме того, нельзя отправить одному пользователю два уведомления с одинаковым текстом подряд.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.sendNotification
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.SendSmsNotificationAsync(System.UInt64,System.String)">
            <summary>
            Отправляет SMS-уведомление на мобильный телефон пользователя.
            </summary>
            <param name = "userId">
            Id пользователя, которому отправляется SMS-уведомление. Пользователь должен разрешить приложению отсылать ему уведомления (getUserSettings, +1). положительное число, обязательный параметр
            </param>
            <param name = "message">
            Текст SMS, который следует передавать в кодировке UTF-8. Допускаются только латинские буквы и цифры. Максимальный размер - 160 символов. строка, обязательный параметр
            </param>
            <returns>
            Возвращает 1 в случае успешной отсылки SMS.
            Если номер пользователя еще не известен системе, то метод вернет ошибку 146 (The mobile number of the user is unknown). Для решения этой проблемы метод users.get возвращает поле has_mobile, которое позволяет определить, известен ли номер пользователя.
            Если номер пользователя неизвестен, но Вы хотели бы иметь возможность высылать ему SMS-уведомления, необходимо предложить ему ввести номер мобильного телефона, не отвлекая от приложения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.sendSMSNotification
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ISecureCategoryAsync.SetCounterAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Устанавливает счетчик, который выводится пользователю жирным шрифтом в левом меню.
            </summary>
            <param name = "counters">
            Позволяет устанавливать счетчики нескольким пользователям за один запрос. Значение следует указывать в следующем формате: user_id1:counter1[:increment],user_id2:counter2[:increment], пример: 66748:6:1,6492:2. В случае, если указан этот параметр, параметры counter, user_id и increment не учитываются. Можно передать не более 200 значений за один запрос. список слов, разделенных через запятую
            </param>
            <param name = "userId">
            Идентификатор пользователя. положительное число
            </param>
            <param name = "counter">
            Значение счетчика. целое число
            </param>
            <param name = "increment">
            Определяет, нужно ли заменить значение счетчика или прибавить новое значение к уже имеющемуся. 1 — прибавить counter к старому значению, 0 — заменить счетчик (по умолчанию). флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращает 1 в случае успешной установки счетчика.
            Если пользователь не установил приложение в левое меню, метод вернет ошибку 148 (Access to the menu of the user denied). Избежать этой ошибки можно с помощью метода account.getAppPermissions.
            Вы также можете обращаться к этому методу при стандартном взаимодействии с клиентской стороны, указывая setCounter вместо secure.setCounter в названии метода. В этом случае параметр uid передавать не нужно, счетчик установится для текущего пользователя.
            Метод setCounter при стандартном, а не защищенном взаимодействии можно использовать для того, чтобы, например, сбрасывать счетчик при заходе пользователя в приложение.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.setCounter
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Category.IStoriesCategoryAsync">
            <summary>
            Stories
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.BanOwnerAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Позволяет скрыть из ленты новостей истории от выбранных источников.
            </summary>
            <param name = "ownersIds">
            Список идентификаторов источников. список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.banOwner
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.DeleteAsync(System.Int64,System.UInt64)">
            <summary>
            Удаляет историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetAsync(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает истории, доступные для текущего пользователя.
            </summary>
            <param name = "ownerId">
            Идентификатор пользователя, истории которого необходимо получить. целое число
            </param>
            <param name = "extended">
            1 — возвращать в ответе дополнительную информацию о профилях пользователей. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число подборок в поле count и массив подборок историй  в поле items. Каждая подборка — массив историй от одного владельца.
            Если был задан параметр extended=1, дополнительно возвращает массив объектов пользователей в поле profiles (array) и сообществ в поле groups (array).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetBannedAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список источников историй, скрытых из ленты текущего пользователя.
            </summary>
            <param name = "fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть. список слов, разделенных через запятую
            </param>
            <param name = "extended">
            1 — возвращать расширенную информацию о пользователях и сообществах. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            После успешного выполнения возвращает общее количество скрытых источников в поле count (integer) и их идентификаторы в массиве items. Если extended = 1, items содержит два поля:
            profiles (array) — массив объектов, описывающих пользователей;
            groups (array) — массив объектов, описывающих сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает информацию об истории по её идентификатору.
            </summary>
            <param name = "stories">
            Перечисленные через запятую идентификаторы, которые представляют собой идущие через знак подчеркивания идентификаторы владельцев историй и идентификаторы самих историй.
            Пример значения stories:
            93388_21539,93388_20904 список слов, разделенных через запятую, обязательный параметр
            </param>
            <param name = "fields">
            Дополнительные поля профилей и сообществ, которые необходимо вернуть в ответе. список слов, разделенных через запятую
            </param>
            <param name = "extended">
            1 — возвращать в ответе дополнительную информацию о пользователях. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число историй в поле count и массив объектов историй  в поле items.
            Если был задан параметр extended = 1, дополнительно возвращает массив объектов  пользователей в поле profiles и объектов сообществ в поле groups.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetPhotoUploadServerAsync(VkNet.Model.RequestParams.Stories.GetPhotoUploadServerParams)">
            <summary>
            Позволяет получить адрес для загрузки истории с фотографией.
            </summary>
            <param name = "params">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            upload_url (string) — адрес сервера для загрузки файла;
            user_ids (array) — идентификаторы пользователей, которые могут видеть историю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getPhotoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetRepliesAsync(System.Int64,System.UInt64,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Позволяет получить ответы на историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <param name = "accessKey">
            Ключ доступа для приватного объекта. строка
            </param>
            <param name = "fields">
            Дополнительные поля профилей и сообществ, которые необходимо вернуть в ответе. список слов, разделенных через запятую
            </param>
            <param name = "extended">
            1 — возвращать дополнительную информацию о профилях и сообществах. флаг, может принимать значения 1 или 0, по умолчанию
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число подборок в поле count и массив подборок историй  в поле items. Каждая подборка — массив историй от одного владельца.
            Если был задан параметр extended=1, дополнительно возвращает массив объектов пользователей в поле profiles (array) и сообществ в поле groups (array).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getReplies
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetStatsAsync(System.Int64,System.UInt64)">
            <summary>
            Возвращает статистику истории.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            views (object) — просмотры. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            replies  (object) — ответы на историю. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            answer (object) — число
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            shares  (object) — расшаривания истории. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            subscribers (object) — новые подписчики. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            bans  (object) — скрытия истории. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            open_link (object) — переходы по ссылке. Содержит поля:
            state (string) — доступность значения (on — доступно, hidden — недоступно);
            count (integer) — значение счётчика.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetVideoUploadServerAsync(VkNet.Model.RequestParams.Stories.GetVideoUploadServerParams)">
            <summary>
            Позволяет получить адрес для загрузки видеозаписи в историю.
            </summary>
            <param name = "params">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            upload_url (string) — адрес сервера для загрузки файла;
            user_ids (array) — идентификаторы пользователей, которые могут видеть историю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getVideoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.GetViewersAsync(System.Int64,System.UInt64,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список пользователей, просмотревших историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <param name = "count">
            Максимальное число результатов в ответе. положительное число, по умолчанию 100
            </param>
            <param name = "offset">
            Сдвиг для получения определённого подмножества результатов. положительное число, по умолчанию 0
            </param>
            <param name = "extended">
            1 — возвращать в ответе расширенную информацию о пользователях. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в поле count и идентификаторы пользователей в поле items (array). Если extended = 1, поле items (array) содержит массив объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getViewers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.HideAllRepliesAsync(System.Int64)">
            <summary>
            Скрывает все ответы автора за последние сутки на истории текущего пользователя.
            </summary>
            <param name = "ownerId">
            Идентификатор пользователя, ответы от которого нужно скрыть. целое число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.hideAllReplies
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.HideReplyAsync(System.Int64,System.UInt64,System.String)">
            <summary>
            Скрывает ответ на историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории (ответной). целое число, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории (ответной). положительное число, обязательный параметр
            </param>
            <param name = "accessKey">
            Ключ доступа к приватному объекту. строка
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.hideReply
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.IStoriesCategoryAsync.UnbanOwnerAsync(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Позволяет вернуть пользователя или сообщество в список отображаемых историй в ленте.
            </summary>
            <param name = "ownersIds">
            Список идентификаторов владельцев историй, разделённых запятой. список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.unbanOwner
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Category.ILeadFormsCategory">
            <summary>
            Формы сбора заявок  Подойдут для записи клиентов, предварительной регистрации, подписки на рассылки, запросов информации, подключения услуг, оформления заказов и многого другого.
            Вы создаете формы с заявками, а пользователи оставляют свою контактную информацию. Вам остается завершить оформление заявки, связавшись с ними удобным способом.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.Create(VkNet.Model.LeadForms.LeadFormsCreateParams)">
            <summary>
            Создаёт форму сбора заявок.
            </summary>
            <param name = "createParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращается структура с информацией о созданной форме:
            form_id — идентификатор формы;
            url — ссылка на форму.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.create
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.Delete(System.Int64,System.Int64)">
            <summary>
            Удаляет форму сбора заявок.
            </summary>
            <param name = "groupId">
            Идентификатор группы, из которой надо удалить форму. обязательный параметр, целое число
            </param>
            <param name = "formId">
            Идентификатор удаляемой формы. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает идентификатор удалённой формы
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.Get(System.Int64,System.Int64)">
            <summary>
            Возвращает информацию о форме сбора заявок.
            </summary>
            <param name = "groupId">
            Идентификатор группы, в которой находится форма. обязательный параметр, целое число
            </param>
            <param name = "formId">
            Идентификатор формы. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает структуру с информацией о форме. Значения полей см. в методе leadForms.create.
            Дополнительно возвращает следующие поля:
            form_id — идентификатор формы;
            leads_count — количество заявок;
            url — ссылка на форму.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.GetLeads(System.Int64,System.Int64,System.String,System.Nullable{System.UInt64})">
            <summary>
            Возвращает заявки формы.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества, в котором находится форма. обязательный параметр, целое число
            </param>
            <param name = "formId">
            Идентификатор формы. обязательный параметр, целое число
            </param>
            <param name = "nextPageToken">
            Строка, полученная из предыдущего запроса для получения следующей порции результатов. строка
            </param>
            <param name = "limit">
            Количество возвращаемых заявок за один запрос. положительное число, по умолчанию 10, максимальное значение 1000, минимальное значение 1
            </param>
            <returns>
            Возвращает массив структур со следующими полями:
            lead_id — идентификатор заявки;
            user_id — идентификатор пользователя, оставившего заявку;
            date — дата и время оставления заявки в формате unix timestamp;
            answers — информация об ответах на вопросы — массив структур со следующими полями:
            key — ключ вопроса. Совпадает с типом стандартного вопроса (его полем type), или с ключом нестандартного вопроса (поле key). Для нестандартных вопросов, для которых не был задан ключ, будет использовано значение вида custom_0, где «0» — порядковый номер нестандартного вопроса, считая с 0.
            answer — ответ на вопрос. Структура (для всех вопросов, кроме типа checkbox) или массив структур (для типа checkbox) со следующими полями:
            key — ключ ответа (в случае, если был задан при создании формы);
            value — текст ответа;
            ad_id — идентификатор рекламного объявления, с которого пришла заявка (поле отсутствует в случае, если заявка пришла не из рекламного объявления).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.getLeads
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.GetUploadURL">
            <summary>
            Возвращает URL для загрузки обложки для формы.
            </summary>
            <returns>
            Возвращает URL для загрузки обложки для формы.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.getUploadURl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.List(System.Int64)">
            <summary>
            Возвращает список форм сообщества.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает массив структур с описанием форм. Подробнее о структуре описания формы см. метод leadForms.get.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.list
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Category.ILeadFormsCategory.Update(VkNet.Model.LeadForms.LeadFormsUpdateParams)">
            <summary>
            Обновляет форму сбора заявок.
            </summary>
            <param name = "updateParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращается структура с информацией об обновлённой форме:
            form_id — идентификатор формы;
            url — ссылка на форму.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leadForms.update
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAudioCategoryAsync">
            <inheritdoc cref="T:VkNet.Abstractions.IAudioCategory"/>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.AddAsync(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Копирует аудиозапись на страницу пользователя или группы.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи.
            </param>
            <param name="groupId">
            Идентификатор сообщества (если аудиозапись необходимо скопировать в список
            сообщества).
            </param>
            <param name="albumId">
            Идентификатор альбома, в который нужно переместить аудиозапись.
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной аудиозаписи.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.CreatePlaylistAsync(System.Int64,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Создает пустой плейлист.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="title">
            Название плейлиста.
            </param>
            <param name="description">
            Описание плейлиста.
            </param>
            <param name="audioIds">
            Идентификаторы аудиозаписей, которые необходимо добавить в альбом, в виде
            {owner_id}_{audio_id}.
            </param>
            <returns>
            После успешного выполнения возвращает <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет аудиозапись со страницы пользователя или сообщества.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи (пользователь или сообщество).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.DeletePlaylistAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет альбом аудиозаписей.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.EditAsync(VkNet.Model.RequestParams.AudioEditParams)">
            <summary>
            Редактирует данные аудиозаписи на странице пользователя или сообщества.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает id текста, введенного пользователем
            (lyrics_id), если текст не был введен, вернет 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.EditPlaylistAsync(System.Int64,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Редактирует плейлист.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <param name="title">
            Новое название для плейлиста.
            </param>
            <param name="description">
            Новое описание для плейлиста.
            </param>
            <param name="audioIds">
            Идентификаторы аудиозаписей, в виде {owner_id}_{audio_id}.
            Чтобы добавить аудиозаписи необходимо перечислить
            идентификаторы всех имеющихся аудиозаписей в плейлисте + новые.
            Не указывайте идентификаторы аудиозаписей, которые необходимо удалить.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetAsync(VkNet.Model.RequestParams.AudioGetParams)">
            <summary>
            Возвращает список аудиозаписей пользователя или сообщества.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>.
            Обратите внимание, что ссылки на mp3 привязаны к ip-адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetPlaylistsAsync(System.Int64,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список плейлистов пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества плейлистов.
            </param>
            <param name="count">
            Количество плейлистов, которое необходимо вернуть. По умолчанию -неизвестно-, максимальное значение -неизвестно-.
            </param>
            <returns>
            После успешного выполнения возвращает общее количество альбомов с аудиозаписями
            и массив объектов <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetPlaylistByIdAsync(System.Int64,System.Int64)">
            <summary>
            Возвращает <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/> пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества.
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <returns>
            После успешного выполнения возвращает <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetBroadcastListAsync(VkNet.Enums.Filters.AudioBroadcastFilter,System.Nullable{System.Boolean})">
            <summary>
            Возвращает список друзей и сообществ пользователя, которые транслируют музыку в
            статус.
            </summary>
            <param name="filter">
            Определяет, какие типы объектов необходимо получить.
            </param>
            <param name="active">
            true — будут возвращены только друзья и сообщества, которые транслируют музыку в
            данный момент.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.User"/> и <see cref="T:VkNet.Model.Group"/> с
            дополнительным полем status_audio — объект аудиозаписи, установленной в статус
            (если аудиозапись транслируется в текущей момент).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getBroadcastList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает информацию об аудиозаписях.
            </summary>
            <param name="audios">
            Идентификаторы аудиозаписей, информацию о которых необходимо вернуть, в виде
            {owner_id}_{audio_id}.
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов <see cref="T:VkNet.Model.Attachments.Audio"/>. Обратите внимание,
            что ссылки на аудиозаписи привязаны
            к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetCountAsync(System.Int64)">
            <summary>
            Возвращает количество аудиозаписей пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор владельца аудиозаписей (пользователь или сообщество). Обратите
            внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <returns>
            После успешного выполнения возвращает число, равное количеству аудиозаписей на
            странице пользователя или сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getCount
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetLyricsAsync(System.Int64)">
            <summary>
            Возвращает текст аудиозаписи.
            </summary>
            <param name="lyricsId">
            Идентификатор текста аудиозаписи, информацию о котором необходимо вернуть.
            </param>
            <returns>
            После успешного выполнения возвращает объект <see cref="T:VkNet.Model.Lyrics"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getLyrics
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetPopularAsync(System.Boolean,System.Nullable{VkNet.Enums.AudioGenre},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей из раздела "Популярное".
            </summary>
            <param name="onlyEng">
            true – возвращать только зарубежные аудиозаписи. false – возвращать все аудиозаписи.
            </param>
            <param name="genre">
            Идентификатор жанра из списка жанров.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества аудиозаписей.
            </param>
            <param name="count">
            Количество возвращаемых аудиозаписей. Максимальное
            значение 1000, по умолчанию 100.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>. Обратите внимание,
            что ссылки на аудиозаписи привязаны
            к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getPopular
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetRecommendationsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список рекомендуемых аудиозаписей на основе списка воспроизведения
            заданного пользователя или на основе
            одной выбранной аудиозаписи.
            </summary>
            <param name="targetAudio">
            Идентификатор аудиозаписи, на основе которой будет строиться список
            рекомендаций.
            Используется вместо параметра uid. Идентификатор представляет из себя
            разделённые знаком подчеркивания id
            пользователя, которому принадлежит аудиозапись, и id самой аудиозаписи. Если
            аудиозапись принадлежит сообществу, то
            в качестве первого параметра используется -id сообщества.
            </param>
            <param name="userId">
            Идентификатор пользователя для получения списка рекомендаций на основе его
            набора аудиозаписей (по
            умолчанию — идентификатор текущего пользователя).
            </param>
            <param name="offset">
            Смещение относительно первой найденной аудиозаписи для выборки определенного
            подмножества.
            </param>
            <param name="count">
            Количество возвращаемых аудиозаписей. Максимальное значение 1000, по умолчанию 100.
            </param>
            <param name="shuffle">
            true — включен случайный порядок.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>. Обратите внимание,
            что ссылки на аудиозаписи привязаны к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getRecommendations
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.GetUploadServerAsync">
            <summary>
            Возвращает адрес сервера для загрузки аудиозаписей.
            </summary>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.AddToPlaylistAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Перемещает аудиозаписи в плейлист.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <param name="audioIds">
            Идентификаторы аудиозаписей, которые требуется переместить, в виде {owner_id}_{audio_id}.
            </param>
            <returns>
            После успешного выполнения список идентификаторов аудиозаписей.
            Обратите внимание, в одном альбоме не может быть более 1000 аудиозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.ReorderAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет порядок аудиозаписи, перенося ее между аудиозаписями, идентификаторы
            которых переданы параметрами after и before.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи, которую нужно переместить.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи (пользователь или сообщество). По умолчанию
            — идентификатор текущего пользователя.
            </param>
            <param name="before">
            Идентификатор аудиозаписи, перед которой нужно поместить композицию.
            </param>
            <param name="after">
            Идентификатор аудиозаписи, после  которой нужно поместить композицию.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.reorder
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.RestoreAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает аудиозапись после удаления.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи (пользователь или сообщество). По умолчанию
            — идентификатор текущего пользователя.
            </param>
            <returns>
            В случае успешного восстановления аудиозаписи возвращает объект <see cref="T:VkNet.Model.Attachments.Audio"/>.
            Если время хранения удаленной аудиозаписи истекло (обычно это 20 минут), сервер
            вернет ошибку 202 (Cache expired).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.SaveAsync(System.String,System.String,System.String)">
            <summary>
            Сохраняет аудиозаписи после успешной загрузки.
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки аудиофайла
            на сервер.
            </param>
            <param name="artist"> Автор композиции. По умолчанию берется из ID3 тегов. </param>
            <param name="title"> Название композиции. По умолчанию берется из ID3 тегов. </param>
            <returns> Возвращает обьект загруженной аудиозаписи. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.SearchAsync(VkNet.Model.RequestParams.AudioSearchParams)">
            <summary>
            Возвращает список аудиозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params"> Критерии поиска </param>
            <returns>
            Список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Audio
            Страница документации ВКонтакте http://vk.com/dev/audio.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategoryAsync.SetBroadcastAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Транслирует аудиозапись в статус пользователю или сообществу.
            </summary>
            <param name="audio">
            Идентификатор аудиозаписи, которая будет отображаться в статусе, в формате
            {owner_id}_{audio_id}.
            Например, 1_190442705. Если параметр не указан, аудиостатус указанных сообществ
            и пользователя будет удален.
            </param>
            <param name="targetIds">
            Перечисленные через запятую идентификаторы сообществ и пользователя, которым
            будет транслироваться аудиозапись. Идентификаторы сообществ должны быть заданы в
            формате "-gid", где gid - идентификатор
            сообщества. Например, 1,-34384434. По умолчанию аудиозапись транслируется
            текущему пользователю. (Количество элементов должно составлять не более 20).
            </param>
            <returns>
            Возвращает идентификаторы пользователя и сообществ для которых был установлен статус.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.setBroadcast
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAuthCategoryAsync">
            <summary>
            Асинхронные методы для работы с авторизацией.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategoryAsync.CheckPhoneAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Проверяет правильность введённого номера.
            </summary>
            <param name="phone">
            Номер телефона регистрируемого пользователя. строка, обязательный параметр
            (Строка, обязательный
            параметр).
            </param>
            <param name="clientId">
            Идентификатор Вашего приложения. целое число (Целое
            число).
            </param>
            <param name="clientSecret">
            Секретный ключ приложения, доступный в разделе редактирования приложения.
            строка,
            обязательный параметр (Строка, обязательный параметр).
            </param>
            <param name="authByPhone">
            Флаг, может принимать значения 1 или 0 (Флаг, может
            принимать значения 1 или 0).
            </param>
            <returns>
            В случае, если номер пользователя является правильным, будет возвращён
            <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/auth.checkPhone
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategoryAsync.SignupAsync(VkNet.Model.RequestParams.AuthSignupParams)">
            <summary>
            Регистрирует нового пользователя по номеру телефона.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/auth.signup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategoryAsync.ConfirmAsync(VkNet.Model.RequestParams.AuthConfirmParams)">
            <summary>
            Завершает регистрацию нового пользователя, начатую методом auth.signup, по
            коду, полученному через SMS.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/auth.confirm
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategoryAsync.RestoreAsync(System.String,System.String)">
            <summary>
            Позволяет восстановить доступ к аккаунту, используя код, полученный через SMS.
            </summary>
            <param name="phone"> Номер телефона пользователя. </param>
            <param name="lastName"> Фамилия пользователя. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/auth.restore
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IBoardCategoryAsync">
            <summary>
            Асинхронные методы для работы со темами группы.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.GetTopicsAsync(VkNet.Model.RequestParams.BoardGetTopicsParams,System.Boolean)">
            <summary>
            Возвращает список тем в обсуждениях указанной группы.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c> то пропустить авторизацию. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.getTopics" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.BoardGetCommentsParams,System.Boolean)">
            <summary>
            Возвращает список сообщений в указанной теме.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c> то пропустить авторизацию. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.AddTopicAsync(VkNet.Model.RequestParams.BoardAddTopicParams)">
            <summary>
            Создает новую тему в списке обсуждений группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.addTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.DeleteTopicAsync(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Удаляет тему в обсуждениях группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.deleteTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.CloseTopicAsync(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Закрывает тему в списке обсуждений группы (в такой теме невозможно оставлять
            новые сообщения).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.closeTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.OpenTopicAsync(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Открывает ранее закрытую тему (в ней станет возможно оставлять новые
            сообщения).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.openTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.FixTopicAsync(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Закрепляет тему в списке обсуждений группы (такая тема при любой сортировке
            выводится выше остальных).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.fixTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.UnFixTopicAsync(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Отменяет прикрепление темы в списке обсуждений группы (тема будет выводиться
            согласно выбранной сортировке).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.unfixTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.EditTopicAsync(VkNet.Model.RequestParams.BoardEditTopicParams)">
            <summary>
            Изменяет заголовок темы в списке обсуждений группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.editTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.BoardCreateCommentParams)">
            <summary>
            Добавляет новый комментарий в обсуждении.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.createComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.DeleteCommentAsync(VkNet.Model.RequestParams.BoardCommentParams)">
            <summary>
            Удаляет сообщение в обсуждениях сообщества.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.deleteComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.EditCommentAsync(VkNet.Model.RequestParams.BoardEditCommentParams)">
            <summary>
            Редактирует одно из сообщений в обсуждении сообщества..
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategoryAsync.RestoreCommentAsync(VkNet.Model.RequestParams.BoardCommentParams)">
            <summary>
            Восстанавливает удаленное сообщение темы в обсуждениях группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.restoreComment
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IDatabaseCategoryAsync">
            <summary>
            Асинхронные методы для получения справочной информации (страны, города, школы,
            учебные заведения и т.п.).
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetCountriesAsync(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{VkNet.Enums.Iso3166},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список стран.
            </summary>
            <param name="needAll"> Флаг - вернуть список всех стран. </param>
            <param name="codes">
            Перечисленные через запятую двухбуквенные коды стран в стандарте ISO 3166-1
            alpha-2
            http://vk.com/dev/country_codes
            </param>
            <param name="offset">
            Отступ, необходимый для выбора определенного подмножества
            стран.
            </param>
            <param name="count">
            Количество стран, которое необходимо вернуть (по умолчанию 100, максимальное
            значение 1000).
            </param>
            <remarks>
            Если не заданы параметры needAll и code, то возвращается краткий список стран,
            расположенных наиболее близко к
            стране
            текущего пользователя. Если задан параметр needAll, то будет возвращен список
            всех стран. Если задан параметр code,
            то будут возвращены только страны с перечисленными ISO 3166-1 alpha-2 кодами.
            Страница документации ВКонтакте http://vk.com/dev/database.getCountries
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetRegionsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список регионов.
            </summary>
            <param name="countryId"> Идентификатор страны. </param>
            <param name="query"> Строка поискового запроса. </param>
            <param name="count"> Количество регионов, которое необходимо вернуть. </param>
            <param name="offset">
            Отступ, необходимый для выбора определенного подмножества
            регионов.
            </param>
            <returns> Список регионов. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getRegions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetStreetsByIdAsync(System.Int32[])">
            <summary>
            Возвращает информацию об улицах по их идентификаторам.
            </summary>
            <param name="streetIds"> Идентификаторы улиц. </param>
            <returns> Информация об улицах. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getStreetsById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetCountriesByIdAsync(System.Int32[])">
            <summary>
            Возвращает информацию о странах по их идентификаторам.
            </summary>
            <param name="countryIds"> Идентификаторы стран. </param>
            <returns> Информация о странах. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getCountriesById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetCitiesAsync(VkNet.Model.RequestParams.Database.GetCitiesParams)">
            <summary>
            Возвращает список городов.
            </summary>
            <param name="getCitiesParams"> Параметры запроса database.getCities </param>
            <returns> Cписок городов </returns>
            <remarks>
            Возвращает коллекцию городов, каждый из которых содержит поля City.Id
            При наличии информации о регионе и/или области, в которых находится данный
            город, в объекте могут дополнительно
            включаться поля City.Area
            Если не задан параметр <paramref name="getCitiesParams.query.query" />, то будет
            возвращен список самых крупных городов в
            заданной стране.
            Если задан параметр <paramref name="getCitiesParams.query.query" />, то будет
            возвращен список городов, которые
            релевантны поисковому запросу.
            Страница документации ВКонтакте http://vk.com/dev/database.getCities
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetCitiesByIdAsync(System.Int32[])">
            <summary>
            Возвращает информацию о городах по их идентификаторам.
            </summary>
            <param name="cityIds"> Идентификаторы городов. </param>
            <returns> Информация о городах. </returns>
            <remarks>
            Идентификаторы городов могут быть получены с помощью методов UsersCategory.Get,
            places.getById, places.search, places.getCheckins.
            Страница документации ВКонтакте http://vk.com/dev/database.getCitiesById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetUniversitiesAsync(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список высших учебных заведений.
            </summary>
            <param name="countryId">
            Идентификатор страны, учебные заведения которой
            необходимо вернуть.
            </param>
            <param name="cityId">
            Идентификатор города, учебные заведения которого
            необходимо вернуть.
            </param>
            <param name="query"> Строка поискового запроса. Например, СПБ. </param>
            <param name="offset">
            Отступ, необходимый для получения определенного
            подмножества учебных заведений.
            </param>
            <param name="count"> Количество учебных заведений, которое необходимо вернуть. </param>
            <returns> Список высших учебных заведений, удовлетворяющих заданным условиям. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getUniversities
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetSchoolsAsync(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список школ.
            </summary>
            <param name="cityId"> Идентификатор города, школы которого необходимо вернуть. </param>
            <param name="query"> Строка поискового запроса. Например, гимназия. </param>
            <param name="offset">
            Отступ, необходимый для получения определенного
            подмножества школ.
            </param>
            <param name="count"> Количество школ, которое необходимо вернуть. </param>
            <returns> Cписок школ. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getSchools
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetFacultiesAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список факультетов.
            </summary>
            <param name="universityId">
            Идентификатор университета, факультеты которого
            необходимо получить.
            </param>
            <param name="count">
            Отступ, необходимый для получения определенного
            подмножества факультетов.
            </param>
            <param name="offset"> Количество факультетов которое необходимо получить. </param>
            <returns> Cписок факультетов. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getFaculties
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetSchoolClassesAsync(System.Int64)">
            <summary>
            Возвращает список классов, характерных для школ определенной страны.
            </summary>
            <param name="countryId">
            Идентификатор страны, доступные классы в которой
            необходимо вернуть.
            </param>
            <returns>
            Возвращает массив, каждый элемент которого представляет собой пару:
            идентификатор и строковое обозначение
            класса.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getSchoolClasses
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategoryAsync.GetChairsAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список кафедр университета по указанному факультету.
            </summary>
            <param name="facultyId">
            Идентификатор факультета, кафедры которого необходимо
            получить.
            </param>
            <param name="count"> Количество кафедр которое необходимо получить. </param>
            <param name="offset">
            Отступ, необходимый для получения определенного
            подмножества кафедр.
            </param>
            <returns>
            Возвращает массив, каждый элемент которого представляет собой пару:
            идентификатор и строковое обозначение класса.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getChairs
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IDocsCategoryAsync">
            <summary>
            Асинхронные методы для работы с документами (получение списка, загрузка,
            удаление и т.д.)
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.GetAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{VkNet.Enums.DocFilter})">
            <summary>
            Возвращает расширенную информацию о документах пользователя или сообщества.
            </summary>
            <param name="count">
            Количество документов, информацию о которых нужно вернуть. По умолчанию — все
            документы.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества документов.
            Положительное число.
            </param>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежат документы.
            Целое число, по
            умолчанию идентификатор текущего пользователя.
            </param>
            <param name="type"> Фильтр по типу документа. </param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.Document})">
            <summary>
            Возвращает информацию о документах по их идентификаторам.
            </summary>
            <param name="docs">
            Идентификаторы документов, информацию о которых нужно
            вернуть.
            </param>
            <returns> После успешного выполнения возвращает список объектов документов. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.GetUploadServerAsync(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки документов.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (если необходимо загрузить документ в список
            документов сообщества).
            Если документ нужно загрузить в список пользователя, метод вызывается без
            дополнительных параметров. Положительное
            число
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.GetWallUploadServerAsync(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки документов в папку Отправленные, для
            последующей отправки документа на стену
            или личным сообщением.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, в которое нужно загрузить документ. Положительное
            число.
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getWallUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.SaveAsync(System.String,System.String,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Сохраняет документ после его успешной загрузки на сервер.
            </summary>
            <param name="file">
            JSON-объект с полем file, возвращаемый после успешной загрузки документа
            сервер. Обязательный
            параметр.
            </param>
            <param name="title"> Название документа. </param>
            <param name="tags"> Метки для поиска. </param>
            <param name="captchaSid">
            Id капчи (только если для вызова метода необходимо
            ввести капчу)
            </param>
            <param name="captchaKey">
            Текст капчи (только если для вызова метода необходимо
            ввести капчу)
            </param>
            <returns> Возвращает массив с загруженными объектами. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет документ пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит документ. Целое
            число,
            обязательный параметр
            </param>
            <param name="docId">
            Идентификатор документа. Положительное число, обязательный
            параметр
            </param>
            <returns> После успешного выполнения возвращает 1. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.AddAsync(System.Int64,System.Int64,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Копирует документ в документы текущего пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит документ. Целое
            число,
            обязательный параметр
            </param>
            <param name="docId">
            Идентификатор документа. Положительное число, обязательный
            параметр
            </param>
            <param name="accessKey">
            Ключ доступа документа. Этот параметр следует передать, если вместе с
            остальными данными о
            документе было возвращено поле access_key.
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> Текст капчи, который ввел пользователь </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного
            документа (did).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.GetTypesAsync(System.Int64)">
            <summary>
            Возвращает доступные типы документы для пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежат документы.
            целое число, по
            умолчанию идентификатор текущего пользователя, обязательный параметр (Целое
            число, по умолчанию идентификатор
            текущего пользователя, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов type.
            Объект type — тип документов.
            id идентификатор типа.
            положительное число name название типа.
            строка count число документов;
            int (числовое значение).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getTypes
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.SearchAsync(System.String,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает результаты поиска по документам.
            </summary>
            <param name="query">
            Строка поискового запроса. Например, зеленые тапочки. строка, обязательный
            параметр, максимальная
            длина 512 (Строка, обязательный параметр, максимальная длина 512).
            </param>
            <param name="searchOwn"> 1 — искать среди собственных документов пользователя. </param>
            <param name="count">
            Количество документов, информацию о которых нужно вернуть. положительное число
            (Положительное
            число).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества документов.
            положительное число
            (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.EditAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Редактирует документ пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит документ.
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо
            указывать со знаком "-" — например,
            owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, по умолчанию идентификатор
            текущего пользователя, обязательный параметр (Целое число, по умолчанию
            идентификатор текущего пользователя,
            обязательный параметр).
            </param>
            <param name="docId">
            Идентификатор документа. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="title">
            Название документа. строка, максимальная длина 128 (Строка, максимальная длина
            128).
            </param>
            <param name="tags">
            Метки для поиска. список слов, разделенных через запятую (Список слов,
            разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategoryAsync.GetMessagesUploadServerAsync(System.Nullable{System.Int64},VkNet.Enums.SafetyEnums.DocMessageType)">
            <summary>
            Получает адрес сервера для загрузки документа в личное сообщение.
            </summary>
            <param name="peerId"> идентификатор назначения </param>
            <param name="type">
            тип документа. Возможные значения:
            doc — обычный документ;
            audio_message — голосовое сообщение.
            </param>
            <returns> </returns>
        </member>
        <member name="T:VkNet.Abstractions.IExecuteCategoryAsync">
            <summary>
            Методы этого класса позволяют производить асинхронные действия с универсальным
            методом.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IExecuteCategoryAsync.ExecuteAsync(System.String)">
            <summary>
            Универсальный метод, который позволяет запускать последовательность других
            методов, сохраняя и фильтруя
            промежуточные результаты.
            </summary>
            <param name="code">
            Код алгоритма в VKScript - формате, похожем на JavaSсript или ActionScript
            (предполагается совместимость с
            ECMAScript).
            Алгоритм должен завершаться командой return %выражение%. Операторы должны быть
            разделены точкой с запятой.
            </param>
            <returns>
            Возвращает данные, запрошенные алгоритмом.
            При работе с методом execute структура ответа в XML ближе к JSON и может
            незначительно отличаться от стандартного
            представления других методов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/execute
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IExecuteCategoryAsync.ExecuteAsync``1(System.String)">
            <summary>
            Универсальный метод, который позволяет запускать последовательность других
            методов, сохраняя и фильтруя
            промежуточные результаты.
            </summary>
            <param name="code">
            Код алгоритма в VKScript - формате, похожем на JavaSсript или ActionScript
            (предполагается совместимость с
            ECMAScript).
            Алгоритм должен завершаться командой return %выражение%. Операторы должны быть
            разделены точкой с запятой.
            </param>
            <returns>
            Возвращает данные, запрошенные алгоритмом.
            При работе с методом execute структура ответа в XML ближе к JSON и может
            незначительно отличаться от стандартного
            представления других методов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/execute
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IExecuteCategoryAsync.StoredProcedureAsync``1(System.String,VkNet.Utils.VkParameters)">
            <summary>
            Универсальный метод, который позволяет запускать хранимые процедуры.
            </summary>
            <param name="procedureName"> Имя хранимой процедуры </param>
            <param name="vkParameters"> Параметры хранимой процедуры </param>
            <returns>
            Возвращает данные, запрошенные алгоритмом.
            При работе с методом execute структура ответа в XML ближе к JSON и может
            незначительно отличаться от стандартного
            представления других методов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/execute
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IFaveCategoryAsync">
            <summary>
            Асинхронные методы работы с закладками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.GetUsersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список пользователей, добавленных текущим пользователем в закладки.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества пользователей. По
            умолчанию — 0.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Количество пользователей, информацию о которых необходимо вернуть.
            положительное число, по
            умолчанию 50 (Положительное число, по умолчанию 50).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.GetPhotosAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Возвращает фотографии, на которых текущий пользователь поставил отметку "Мне
            нравится".
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества фотографий.
            По умолчанию 0. положительное число (Положительное число).
            </param>
            <param name="count">
            Число фотографий, информацию о которых необходимо вернуть. положительное число,
            по умолчанию 50
            (Положительное число, по умолчанию 50).
            </param>
            <param name="photoSizes">
            Параметр, указывающий нужно ли возвращать ли доступные размеры фотографии в
            специальном
            формате. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения
            1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов фотографий.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getPhotos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.GetPostsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Возвращает записи, на которых текущий пользователь поставил отметку "Мне
            нравится".
            </summary>
            <param name="offset">
            Смещение, необходимо для выборки определенного подмножества записей.
            По умолчанию — 0.
            (Положительное число).
            </param>
            <param name="count">
            Количество записей, информацию о которых нужно вернуть (но не более 100).
            (Положительное число, по умолчанию 50).
            </param>
            <param name="extended">
            1 — в ответе будут возвращены дополнительные поля profiles и groups, содержащие
            информацию о пользователях и
            сообществах.
            По умолчанию: 0.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов записей на стене.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getPosts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.GetVideosAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Возвращает список видеозаписей, на которых текущий пользователь поставил
            отметку "Мне нравится".
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества видеозаписей.
            (Положительное число).
            </param>
            <param name="count">
            Количество видеозаписей, информацию о которых необходимо вернуть.
            (Положительное число, по умолчанию 50).
            </param>
            <param name="extended">
            1 — в ответе будут возвращены дополнительные поля profiles и groups, содержащие
            информацию о пользователях и
            сообществах.
            По умолчанию: 0.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getVideos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.GetLinksAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает ссылки, добавленные в закладки текущим пользователем.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества ссылок.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество ссылок, информацию о которых необходимо вернуть. положительное
            число, по умолчанию 50
            (Положительное число, по умолчанию 50).
            </param>
            <returns>
            После успешного выполнения возвращает общее количество ссылок и массив объектов
            link, каждый из которых содержит
            поля id, URL, title, description, photo_50 и photo_100.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getLinks
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.AddUserAsync(System.Int64)">
            <summary>
            Добавляет пользователя в закладки.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно добавить в закладки. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.addUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.RemoveUserAsync(System.Int64)">
            <summary>
            Удаляет пользователя из закладок.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно удалить из закладок. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.removeUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.AddGroupAsync(System.Int64)">
            <summary>
            Добавляет сообщество в закладки.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, которое нужно добавить в закладки. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.addGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.RemoveGroupAsync(System.Int64)">
            <summary>
            Удаляет сообщество из закладок.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, которое нужно удалить из закладок. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.removeGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.AddLinkAsync(System.Uri,System.String)">
            <summary>
            Добавляет ссылку в закладки.
            </summary>
            <param name="link">
            Адрес добавляемой ссылки. Поддерживаются только внутренние ссылки на
            http://vk.com/. строка,
            обязательный параметр (Строка, обязательный параметр).
            </param>
            <param name="text"> Текст ссылки. строка (Строка). </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.addLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.RemoveLinkAsync(System.String)">
            <summary>
            Удаляет ссылку из закладок.
            </summary>
            <param name="linkId">
            Идентификатор ссылки, которую нужно удалить, полученный методом fave.getLinks.
            строка,
            обязательный параметр (Строка, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.removeLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategoryAsync.GetMarketItemsAsync(System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает товары, добавленные в закладки текущим пользователем.
            </summary>
            <param name="count">
            Число товаров, информацию о которых необходимо вернуть. положительное число, по
            умолчанию 50
            (Положительное число, по умолчанию 50).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества товаров.
            положительное число, по
            умолчанию 0 (Положительное число, по умолчанию 0).
            </param>
            <param name="extended">
            1 — будут возвращены дополнительные поля likes, can_comment, can_repost,
            photos. По умолчанию
            данные поля не возвращается. флаг, может принимать значения 1 или 0 (Флаг,
            может принимать значения 1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов товаров.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getMarketItems
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IFriendsCategoryAsync">
            <summary>
            Асинхронные методы для работы с друзьями.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetAsync(VkNet.Model.RequestParams.FriendsGetParams,System.Boolean)">
            <summary>
            Возвращает список идентификаторов друзей пользователя или расширенную
            информацию о друзьях пользователя (при
            использовании параметра fields).
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей
            пользователя, если параметр fields не
            использовался.
            При использовании параметра fields  возвращает список объектов пользователей,
            но не более 5000.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetAppUsersAsync">
            <summary>
            Возвращает список идентификаторов друзей текущего пользователя, которые
            установили данное приложение.
            </summary>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей
            текущего пользователя, установивших
            приложение.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getAppUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetOnlineAsync(VkNet.Model.RequestParams.FriendsGetOnlineParams)">
            <summary>
            Возвращает список идентификаторов друзей пользователя, находящихся на сайте.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) друзей,
            находящихся сейчас на сайте, у
            пользователя с идентификатором uid и входящих в список с идентификатором lid.
            При использовании параметра online_mobile=1 также возвращается поле
            online_mobile, содержащее список идентификатор
            друзей, находящихся на сайте с мобильного устройства.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetMutualAsync(VkNet.Model.RequestParams.FriendsGetMutualParams)">
            <summary>
            Возвращает список идентификаторов общих друзей между парой пользователей.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов (id) общих друзей
            между пользователями с
            идентификаторами source_uid и target_uid.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getMutual
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.AreFriendsAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию о том, добавлен ли текущий пользователь в друзья у
            указанных пользователей.
            </summary>
            <param name="userIds">
            Идентификаторы пользователей, статус дружбы с которыми нужно проверить. список
            целых чисел,
            разделенных запятыми, обязательный параметр (Список целых чисел, разделенных
            запятыми, обязательный параметр).
            </param>
            <param name="needSign">
            1 – необходимо вернуть поле sign которое равно:
            md5Async("{id}_{user_id}_{friends_status}_{application_secret}"), где id - это
            идентификатор пользователя, для
            которого выполняется запрос.
            и позволяет на сервере убедиться что данные не были подделаны на клиенте.
            0 – поле sign возвращать не нужно. флаг, может принимать значения 1 или 0
            (Флаг, может принимать значения 1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов status, каждый из которых
            содержит следующие поля:
            user_id — идентификатор пользователя (из числа переданных в параметре
            user_ids);
            friend_status — статус дружбы с пользователем:
            0 – пользователь не является другом,
            1 – отправлена заявка/подписка пользователю,
            2 – имеется входящая заявка/подписка от пользователя,
            3 – пользователь является другом;
            request_message — текст сообщения, прикрепленного к заявке в друзья (если
            есть).
            read_state — статус заявки (0 — не просмотрена, 1 — просмотрена), возвращается
            только если friend_status = 2;.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.areFriends
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.AddListAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Создает новый список друзей у текущего пользователя.
            </summary>
            <param name="name">
            Название создаваемого списка друзей. строка, обязательный параметр (Строка,
            обязательный параметр).
            </param>
            <param name="userIds">
            Идентификаторы пользователей, которых необходимо поместить в созданный список.
            список
            положительных чисел, разделенных запятыми (Список положительных чисел,
            разделенных запятыми).
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор (list_id) созданного списка
            друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.addList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.DeleteListAsync(System.Int64)">
            <summary>
            Удаляет существующий список друзей текущего пользователя.
            </summary>
            <param name="listId">
            Идентификатор списка друзей, который необходимо удалить. положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.deleteList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetListsAsync(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список меток друзей текущего пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя. положительное число, по умолчанию идентификатор
            текущего пользователя
            (Положительное число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="returnSystem">
            Возвращать ли системный список публичных меток друзей пользователя. флаг, может
            принимать
            значения 1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов, каждый из которых
            содержит следующие поля:
            name — название списка друзей;
            id — идентификатор списка друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getLists
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.EditListAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Редактирует существующий список друзей текущего пользователя.
            </summary>
            <param name="name"> Название списка друзей. строка (Строка). </param>
            <param name="listId">
            Идентификатор списка друзей. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="userIds">
            Идентификаторы пользователей, включенных в список. список положительных чисел,
            разделенных
            запятыми (Список положительных чисел, разделенных запятыми).
            </param>
            <param name="addUserIds">
            Идентификаторы пользователей, которых необходимо добавить в список. (в случае
            если не передан
            user_ids) список положительных чисел, разделенных запятыми (Список
            положительных чисел, разделенных запятыми).
            </param>
            <param name="deleteUserIds">
            Идентификаторы пользователей, которых необходимо изъять из списка. (в случае
            если не
            передан user_ids) список положительных чисел, разделенных запятыми (Список
            положительных чисел, разделенных
            запятыми).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.editList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.DeleteAllRequestsAsync">
            <summary>
            Отмечает все входящие заявки на добавление в друзья как просмотренные.
            </summary>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.deleteAllRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.AddAsync(System.Int64,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String)">
            <summary>
            Одобряет или создает заявку на добавление в друзья.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которому необходимо отправить заявку, либо заявку
            от которого
            необходимо одобрить. положительное число, обязательный параметр (Положительное
            число, обязательный параметр).
            </param>
            <param name="text">
            Текст сопроводительного сообщения для заявки на добавление в друзья.
            Максимальная длина сообщения —
            500 символов. строка (Строка).
            </param>
            <param name="follow">
            Флаг, может принимать значения 1 или 0 (Флаг, может
            принимать значения 1 или 0).
            </param>
            <param name="captchaSid">
            Id капчи (только если для вызова метода необходимо
            ввести капчу)
            </param>
            <param name="captchaKey">
            Текст капчи (только если для вызова метода необходимо
            ввести капчу)
            </param>
            <returns>
            После успешного выполнения возвращает одно из следующих значений:
            1 — заявка на добавление данного пользователя в друзья отправлена;
            2 — заявка на добавление в друзья от данного пользователя одобрена;
            4 — повторная отправка заявки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.DeleteAsync(System.Int64)">
            <summary>
            Удаляет пользователя из списка друзей или отклоняет заявку в друзья.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого необходимо удалить из списка друзей, либо
            заявку от которого
            необходимо отклонить. положительное число, обязательный параметр (Положительное
            число, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения начиная с версии 5.28 возвращается объект с полями:
            success — удалось успешно удалить друга
            friend_deleted — был удален друг
            out_request_deleted  — отменена исходящая заявка
            in_request_deleted  — отклонена входящая заявка
            suggestion_deleted  — отклонена рекомендация друга
            Для версии 5.27 и более старых возвращает одно из следующих значений:
            1 — пользователь удален из списка друзей;
            2 — заявка на добавление в друзья данного пользователя отклонена (входящая или
            исходящая);
            3 — рекомендация добавить в друзья данного пользователя удалена.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.EditAsync(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Редактирует списки друзей для выбранного друга.
            </summary>
            <param name="userId">
            Идентификатор пользователя (из числа друзей), для которого необходимо
            отредактировать списки
            друзей. положительное число, обязательный параметр (Положительное число,
            обязательный параметр).
            </param>
            <param name="listIds">
            Идентификаторы списков друзей, в которые нужно добавить пользователя. список
            положительных чисел,
            разделенных запятыми (Список положительных чисел, разделенных запятыми).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetRecentAsync(System.Nullable{System.Int64})">
            <summary>
            Возвращает список идентификаторов недавно добавленных друзей текущего
            пользователя.
            </summary>
            <param name="count">
            Максимальное количество недавно добавленных друзей, которое необходимо
            получить. положительное
            число, по умолчанию 100, максимальное значение 1000 (Положительное число, по
            умолчанию 100, максимальное значение
            1000).
            </param>
            <returns>
            После успешного выполнения возвращает отсортированный в антихронологическом
            порядке список идентификаторов (id)
            недавно добавленных друзей текущего пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getRecent
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetRequestsAsync(VkNet.Model.RequestParams.FriendsGetRequestsParams)">
            <summary>
            Возвращает информацию о полученных или отправленных заявках на добавление в
            друзья для текущего пользователя.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            Если не установлен параметр need_mutual, то в случае успеха возвращает
            отсортированный в антихронологическом
            порядке по времени подачи заявки список идентификаторов (id) пользователей
            (кому или от кого пришла заявка).
            Если установлен параметр need_mutual, то в случае успеха возвращает
            отсортированный в антихронологическом порядке
            по времени подачи заявки массив объектов, содержащих информацию о заявках на
            добавление в друзья.
            Каждый из объектов содержит поле uid, являющийся идентификатором пользователя.
            При наличии общих друзей, в объекте будет содержаться поле mutual, в котором
            будет находиться список
            идентификаторов общих друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetRequestsExtendedAsync(VkNet.Model.RequestParams.FriendsGetRequestsParams)">
            <summary>
            Возвращает информацию о полученных или отправленных заявках на добавление в
            друзья для текущего пользователя.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            Если не установлен параметр need_mutual, то в случае успеха возвращает
            отсортированный в антихронологическом
            порядке по времени подачи заявки список идентификаторов (id) пользователей
            (кому или от кого пришла заявка).
            Если установлен параметр need_mutual, то в случае успеха возвращает
            отсортированный в антихронологическом порядке
            по времени подачи заявки массив объектов, содержащих информацию о заявках на
            добавление в друзья.
            Каждый из объектов содержит поле uid, являющийся идентификатором пользователя.
            При наличии общих друзей, в объекте будет содержаться поле mutual, в котором
            будет находиться список
            идентификаторов общих друзей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetSuggestionsAsync(VkNet.Enums.SafetyEnums.FriendsFilter,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список профилей пользователей, которые могут быть друзьями текущего
            пользователя.
            </summary>
            <param name="filter">
            Типы предлагаемых друзей, которые нужно вернуть,
            перечисленные через запятую.
            </param>
            <param name="count">
            Количество рекомендаций, которое необходимо вернуть. положительное число,
            максимальное значение
            500, по умолчанию 500 (положительное число, максимальное значение 500, по
            умолчанию 500).
            </param>
            <param name="offset">
            Смещение, необходимое для выбора определённого подмножества списка.
            положительное число
            (положительное число).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть. Доступные значения:
            nickname,
            screen_name, sex, bdate, city, country, timezone, photo_50, photo_100,
            photo_200_orig, has_mobile, contacts,
            education, online, counters, relation, last_seen, status,
            can_write_private_message, can_see_all_posts, can_post,
            universities список строк, разделенных через запятую(список строк, разделенных
            через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (строка).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей с
            дополнительным полем found_with для
            пользователей, найденных через импорт контактов. Для некоторых пользователей,
            которые были найдены давно поле
            found_with может отсутствовать.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getSuggestions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.GetByPhonesAsync(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields)">
            <summary>
            Возвращает список друзей пользователя, у которых завалидированные или указанные
            в профиле телефонные номера входят
            в заданный список.
            </summary>
            <param name="phones">
            Список телефонных номеров в формате MSISDN, разделеннных запятыми. Например
            +79219876543,+79111234567
            Максимальное количество номеров в списке — 1000. список строк, разделенных
            через запятую (Список строк, разделенных
            через запятую).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть.
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone,
            photo_50, photo_100,
            photo_200_orig, has_mobile, contacts, education, online, counters, relation,
            last_seen, status,
            can_write_private_message, can_see_all_posts, can_post, universities список
            строк, разделенных через запятую
            (Список строк, разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей с
            дополнительным полем phone, в котором
            содержится номер из списка заданных для поиска номеров.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.getByPhones
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategoryAsync.SearchAsync(VkNet.Model.RequestParams.FriendsSearchParams)">
            <summary>
            Позволяет искать по списку друзей пользователей.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения метод  возвращает список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/friends.search
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IGiftsCategoryAsync">
            <summary>
            Асинхронные методы для работы с подарками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IGiftsCategoryAsync.GetAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список полученных подарков пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, для которого необходимо
            получить список подарков.
            </param>
            <param name="count"> Количество подарков, которое нужно вернуть. </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного
            подмножества подарков.
            </param>
            <returns>
            В случае успешного вступления в группу метод вернёт <c> true </c>, иначе
            <c> false </c>.
            Возвращает список объектов gift_item, каждый из которых содержит следующие
            поля:
            id — идентификатор полученного подарка;
            from_id — идентификатор пользователя, который отправил подарок, или 0, если
            отправитель скрыт;
            message — текст сообщения, приложенного к подарку;
            date — время отправки подарка в формате unixtime;
            gift — объект подарка в следующем формате:
            id — номер подарка;
            thumb_256 — url изображения подарка размером 256x256px;
            thumb_96 — url изображения подарка размером 96x96px;
            thumb_48 — url изображения подарка размером 48x48px;
            privacy — значение приватности подарка(только для текущего пользователя;
            возможные значения: 0 — имя отправителя и
            сообщение видно всем; 1 — имя отправителя видно всем, сообщение видно только
            получателю; 2 — имя отправителя
            скрыто, сообщение видно только получателю).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/gifts.get
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IGroupsCategoryAsync">
            <summary>
            Асинхронные методы для работы с сообществами (группами).
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.JoinAsync(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Данный метод позволяет вступить в группу, публичную страницу, а также
            подтвердить участие во встрече.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число
            (Положительное число).
            </param>
            <param name="notSure">
            Опциональный параметр, учитываемый, если group_id принадлежит встрече. 1 —
            Возможно пойду. 0 —
            Точно пойду. По умолчанию 0. строка (Строка).
            </param>
            <returns>
            В случае успешного вступления метод вернёт 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.join
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.LeaveAsync(System.Int64)">
            <summary>
            Позволяет покинуть сообщество.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.leave
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetAsync(VkNet.Model.RequestParams.GroupsGetParams,System.Boolean)">
            <summary>
            Возвращает список сообществ указанного пользователя.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов сообществ id, в
            которых состоит пользователь user_id.
            Если был задан параметр extended=1,  возвращает список объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.String,VkNet.Enums.Filters.GroupsFields,System.Boolean)">
            <summary>
            Возвращает информацию о заданном сообществе или о нескольких сообществах.
            </summary>
            <param name="groupIds">
            Идентификаторы или короткие имена сообществ. Максимальное число идентификаторов
            — 500. список
            строк, разделенных через запятую (Список строк, разделенных через запятую).
            </param>
            <param name="groupId">
            Идентификатор или короткое имя сообщества. строка
            (Строка).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть. Возможные значения:
            city, country, place, description,
            wiki_page, members_count, counters, start_date, finish_date, can_post,
            can_see_all_posts, activity, status,
            contacts, links, fixed_post, verified, site,ban_info.
            Обратите внимание, для получения некоторых полей требуется право доступа
            groups. Подробнее см. описание полей
            объекта group список строк, разделенных через запятую (Список строк,
            разделенных через запятую).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает массив объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetMembersAsync(VkNet.Model.RequestParams.GroupsGetMembersParams,System.Boolean)">
            <summary>
            Возвращает список участников сообщества.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Возвращает общее количество участников сообщества count и список
            идентификаторов пользователей items.
            Если был передан параметр filter=managers, возвращается дополнительное поле
            role, которое содержит уровень
            полномочий руководителя:
            moderator — модератор;
            editor — редактор;
            administrator — администратор;
            creator — создатель сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getMembers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.IsMemberAsync(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Возвращает информацию о том, является ли пользователь участником сообщества.
            </summary>
            <param name="groupId">
            Идентификатор или короткое имя сообщества. строка, обязательный параметр
            (Строка, обязательный
            параметр).
            </param>
            <param name="userId">
            Идентификатор пользователя. положительное число
            (Положительное число).
            </param>
            <param name="userIds">
            Идентификаторы пользователей, не более 500. список положительных чисел,
            разделенных запятыми
            (Список положительных чисел, разделенных запятыми).
            </param>
            <param name="extended">
            1  — вернуть ответ в расширенной форме. По умолчанию — 0. флаг, может принимать
            значения 1 или 0
            (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            возвращает <c> true </c> в случае, если пользователь с идентификатором user_id
            является участником сообщества с
            идентификатором group_id, иначе 0.
            При использовании параметра extended Возвращает объект, который содержит поля:
            member — является ли пользователь участником сообщества;
            и может содержать поля:
            request — есть ли непринятая заявка от пользователя на вступление в группу
            (такую заявку можно отозвать методом
            groups.leave);
            invitation — приглашён ли пользователь в группу или встречу.
            При передаче нескольких идентификаторов Возвращает результат в виде массива
            объектов, в которых есть поля user_id и
            member.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.isMember
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.SearchAsync(VkNet.Model.RequestParams.GroupsSearchParams,System.Boolean)">
            <summary>
            Осуществляет поиск сообществ по заданной подстроке.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetInvitesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Данный метод возвращает список приглашений в сообщества и встречи текущего
            пользователя.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определённого подмножества приглашений.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество приглашений, которое необходимо вернуть. положительное число, по
            умолчанию 20
            (Положительное число, по умолчанию 20).
            </param>
            <param name="extended">
            1 — вернуть дополнительную информацию о пользователях, отправлявших
            приглашения. По умолчанию —
            0. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или
            0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов сообществ с
            дополнительным полем invited_by, содержащим
            идентификатор пользователя, который отправил приглашение.
            Если был передан параметр extended=1, дополнительно будет возвращен список
            profiles пользователей, отправивших
            приглашения. Каждый объект в списке содержит поля id, first_name, last_name.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getInvites
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.BanUserAsync(VkNet.Model.RequestParams.GroupsBanUserParams)">
            <summary>
            Добавляет пользователя в черный список сообщества.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.banUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetBannedAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.GroupsFields,System.Nullable{System.Int64})">
            <summary>
            Возвращает список забаненных пользователей в сообществе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества черного списка.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество пользователей, которое необходимо вернуть. положительное число, по
            умолчанию 20,
            максимальное значение 200 (Положительное число, по умолчанию 20, максимальное
            значение 200).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть.
            Доступные значения: sex, bdate, city, country, photo_50, photo_100,
            photo_200_orig, photo_200, photo_400_orig,
            photo_max, photo_max_orig, online, online_mobile, lists, domain, has_mobile,
            contacts, connections, site,
            education, universities, schools, can_post, can_see_all_posts, can_see_audio,
            can_write_private_message, status,
            last_seen, common_count, relation, relatives, counters список строк,
            разделенных через запятую (Список строк,
            разделенных через запятую).
            </param>
            <param name="ownerId"> целое число </param>
            <returns>
            После успешного выполнения возвращает список объектов user с дополнительным
            полем ban_info.
            Объект ban_info — информация о внесении в черный список сообщества.
            admin_id идентификатор администратора, который добавил пользователя в черный
            список.
            положительное число date дата добавления пользователя в черный список в формате
            Unixtime.
            положительное число reason причина добавления пользователя в черный список.
            Возможные значения:
            0 — другое (по умолчанию);
            1 — спам;
            2 — оскорбление участников;
            3 — нецензурные выражения;
            4 — сообщения не по теме.
            int (числовое значение) comment текст комментария.
            строка end_date дата окончания блокировки (0 — блокировка вечная).
            int (числовое значение).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.UnbanUserAsync(System.Int64,System.Int64)">
            <summary>
            Убирает пользователя из черного списка сообщества.
            </summary>
            <param name="groupId"> Идентификатор сообщества </param>
            <param name="userId">
            Идентификатор пользователя, которого нужно убрать из
            черного списка
            </param>
            <returns> После успешного выполнения возвращает <c> true </c>. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.unbanUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.EditManagerAsync(VkNet.Model.RequestParams.GroupsEditManagerParams)">
            <summary>
            Позволяет назначить/разжаловать руководителя в сообществе или изменить уровень
            его полномочий.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editManager
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetSettingsAsync(System.UInt64)">
            <summary>
            Позволяет получать данные, необходимые для отображения страницы редактирования
            данных сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, данные которого необходимо получить. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения метод вернет объект, содержащий данные
            сообщества, которые позволят отобразить форму
            редактирования для метода groups.edit.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.EditAsync(VkNet.Model.RequestParams.GroupsEditParams)">
            <summary>
            Редактирует сообщество.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            В случае успеха возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.EditPlaceAsync(System.Int64,VkNet.Model.Place)">
            <summary>
            Позволяет редактировать информацию о месте группы.
            Для удаления информации о местоположении нужно передать только group_id.
            Для обновления данных о местоположении необходимо указать как минимум id
            страны, широту и долготу.
            </summary>
            <param name="groupId">
            Идентификатор группы, информацию о месте которой нужно
            отредактировать.
            </param>
            <param name="place"> Местоположение. </param>
            <remarks>
            Для того, чтобы воспользоваться этим методом Вы должны быть администратором
            группы.
            Страница документации ВКонтакте https://vk.com/dev/groups.editPlace
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetInvitedUsersAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список пользователей, которые были приглашены в группу.
            </summary>
            <param name="groupId">
            Идентификатор группы, список приглашенных в которую пользователей нужно
            вернуть. положительное
            число, обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определённого подмножества пользователей.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество пользователей, информацию о которых нужно вернуть. положительное
            число, по умолчанию 20
            (Положительное число, по умолчанию 20).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть.
            Доступные значения: nickname, domain, sex, bdate, city, country, timezone,
            photo_50, photo_100, photo_200_orig,
            has_mobile, contacts, education, online, relation, last_seen, status,
            can_write_private_message, can_see_all_posts,
            can_post, universities список строк, разделенных через запятую (Список строк,
            разделенных через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (Строка).
            </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getInvitedUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.InviteAsync(System.Int64,System.Int64,System.Nullable{System.Int64},System.String)">
            <summary>
            Позволяет приглашать друзей в группу.
            </summary>
            <param name="groupId">
            Идентификатор группы, в которую необходимо выслать приглашение положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="userId">
            Идентификатор пользователя, которому необходимо выслать приглашение
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> Код введенный пользователем </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.invite
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.AddLinkAsync(System.Int64,System.Uri,System.String)">
            <summary>
            Позволяет добавлять ссылки в сообщество.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, в которое добавляется ссылка положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="link">
            Адрес ссылки строка, обязательный параметр (Строка,
            обязательный параметр).
            </param>
            <param name="text"> Текст ссылки строка (Строка). </param>
            <returns>
            В случае успешного выполнения возвращает объект со следующими полями:
            id — идентификатор ссылки;
            url — URL ссылки;
            name — название ссылки в блоке сообщества;
            edit_title — возвращается 1, если можно редактировать название ссылки (для
            внешних ссылок);
            desc — описание ссылки;
            image_processing — возвращается 1, если превью находится в процессе обработки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.addLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.DeleteLinkAsync(System.Int64,System.UInt64)">
            <summary>
            Позволяет удалить ссылки из сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, ссылки которого нужно удалить положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="linkId">
            Идентификатор ссылки, которую необходимо удалить положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения метод возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.deleteLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.EditLinkAsync(System.Int64,System.UInt64,System.String)">
            <summary>
            Позволяет редактировать ссылки в сообществе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, в которое добавляется ссылка положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="linkId">
            Идентификатор редактируемой ссылки положительное число, обязательный параметр
            (Положительное
            число, обязательный параметр).
            </param>
            <param name="text"> Новое описание ссылки строка (Строка). </param>
            <returns>
            В случае успешного редактирования ссылки метод возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.ReorderLinkAsync(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Позволяет менять местоположение ссылки в списке.
            </summary>
            <param name="groupId">
            Идентификатор группы, внутри которой перемещается ссылка положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="linkId">
            Идентификатор ссылки, которую необходимо переместить положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="after">
            Идентификатор ссылки после которой необходимо разместить перемещаемую ссылку. 0
            – если ссылку нужно
            разместить в начале списка. положительное число (Положительное число).
            </param>
            <returns>
            В случае успешного выполнение метод возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.reorderLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.RemoveUserAsync(System.Int64,System.Int64)">
            <summary>
            Позволяет исключить пользователя из группы или отклонить заявку на вступление.
            </summary>
            <param name="groupId">
            Идентификатор группы, из которой необходимо исключить
            пользователя.
            </param>
            <param name="userId"> Идентификатор пользователя, которого нужно исключить. </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/groups.removeUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.ApproveRequestAsync(System.Int64,System.Int64)">
            <summary>
            Позволяет одобрить заявку в группу от пользователя.
            </summary>
            <param name="groupId">
            Идентификатор группы, заявку в которую необходимо
            одобрить.
            </param>
            <param name="userId">
            Идентификатор пользователя, заявку которого необходимо
            одобрить.
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/groups.approveRequest
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.CreateAsync(System.String,System.String,VkNet.Enums.SafetyEnums.GroupType,System.Nullable{VkNet.Enums.Filters.GroupSubType},System.Nullable{System.UInt32})">
            <summary>
            Создает новое сообщество.
            </summary>
            <param name="title">
            Название сообщества. строка, обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <param name="description">
            Описание сообщества, (не учитывается при
            type=public). строка (Строка).
            </param>
            <param name="type">
            Тип создаваемого сообщества:
            group — группа;
            event — мероприятие;
            public — публичная страница.
            строка, по умолчанию group (Строка, по умолчанию group).
            </param>
            <param name="subtype">
            Вид публичной страницы (только при type=public):
            1 — место или небольшая компания;
            2 — компания, организация или веб-сайт;
            3 — известная личность или коллектив;
            4 — произведение или продукция.
            положительное число (Положительное число).
            </param>
            <param name="publicCategory">
            Категория публичной страницы (только для type =
            public).
            </param>
            <returns>
            Возвращает идентификатор созданного сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.create
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetRequestsAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Возвращает список заявок на вступление в сообщество.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (указывается без знака «минус»). положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества результатов. По
            умолчанию — 0.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Число результатов, которые необходимо вернуть. положительное число, по
            умолчанию 20, максимальное
            значение 200 (Положительное число, по умолчанию 20, максимальное значение 200).
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть. См. подробное
            описание.
            Доступные значения: sex, bdate, city, country, photo_50, photo_100,
            photo_200_orig, photo_200, photo_400_orig,
            photo_max, photo_max_orig, online, online_mobile, domain, has_mobile, contacts,
            connections, site, education,
            universities, schools, can_post, can_see_all_posts, can_see_audio,
            can_write_private_message, status, last_seen,
            common_count, relation, relatives, counters, screen_name, maiden_name,
            timezone, occupation,activities, interests,
            music, movies, tv, books, games, about, quotes список строк, разделенных через
            запятую (Список строк, разделенных
            через запятую).
            </param>
            <returns>
            Возвращает список идентификаторов пользователей, отправивших заявки на
            вступление в сообщество.
            Если было передано значение в параметре fields, возвращается список объектов
            пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetCatalogAsync(System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает список сообществ выбранной категории каталога.
            </summary>
            <param name="categoryId">
            Идентификатор категории, полученный в методе groups.getCatalogInfo.
            положительное число
            (Положительное число).
            </param>
            <param name="subcategoryId">
            Идентификатор подкатегории, полученный в методе groups.getCatalogInfo.
            положительное число,
            максимальное значение 99 (Положительное число, максимальное значение 99).
            </param>
            <returns>
            Возвращает список объектов сообществ в соответствии с выбранной категорией
            каталога.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCatalog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetCatalogInfoAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список категорий для каталога сообществ.
            </summary>
            <param name="extended">
            1 — вернуть информацию о количестве сообществ в категории и три сообщества для
            предпросмотра.
            По умолчанию 0. флаг, может принимать значения 1 или 0, по умолчанию 0,
            доступен начиная с версии 5.37 (Флаг, может
            принимать значения 1 или 0, по умолчанию 0, доступен начиная с версии 5.37).
            </param>
            <param name="subcategories">
            1 — вернуть информацию об подкатегориях.
            По умолчанию 0. флаг, может принимать значения 1 или 0, по умолчанию 0,
            доступен начиная с версии 5.37 (Флаг, может
            принимать значения 1 или 0, по умолчанию 0, доступен начиная с версии 5.37).
            </param>
            <returns>
            После успешного выполнения возвращает поле enabled (0 — каталог недоступен для
            пользователя, 1 — каталог доступен),
            и, если enabled=1, массив categories объектов — категорий товаров.
            Объект массива categories — категория каталога товаров.
            id идентификатор категории.
            положительное число name название категории.
            строка subcategories поле возвращается при использовании subcategories=1.
            Массив объектов-подкатегорий. Каждый из
            объектов содержит поля id и name, содержащие идентификатор и название
            подкатегории.
            Дополнительные поля (extended=1)
            page_count количество сообществ в категории.
            положительное число page_previews массив объектов сообществ для предпросмотра.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCatalogInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.AddCallbackServerAsync(System.UInt64,System.String,System.String,System.String)">
            <summary>
            Добавляет сервер для Callback API в сообщество.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="url"> URL сервера. </param>
            <param name="title"> Название сервера. </param>
            <param name="secretKey"> Секретный ключ. </param>
            <returns>
            После успешного выполнения возвращает идентификатор добавленного сервера в поле
            server_id (integer).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.addCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.DeleteCallbackServerAsync(System.UInt64,System.UInt64)">
            <summary>
            Удаляет сервер для Callback API из сообщества.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverId"> идентификатор сервера, который нужно удалить. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.deleteCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.EditCallbackServerAsync(System.UInt64,System.UInt64,System.String,System.String,System.String)">
            <summary>
            Редактирует данные сервера для Callback API в сообществе.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverId">
            идентификатор сервера, данные которого нужно
            отредактировать
            </param>
            <param name="url"> URL сервера. </param>
            <param name="title"> Название сервера. </param>
            <param name="secretKey"> Секретный ключ. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetCallbackConfirmationCodeAsync(System.UInt64)">
            <summary>
            Позволяет получить строку, необходимую для подтверждения адреса сервера в
            Callback API.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <returns>
            Возвращает строку, которую необходимо использовать в качестве ответа на
            уведомление с типом "confirmation"
            для подтверждения адреса сервера в Callback API.
            Обратите внимание, что код, возвращаемый методом, можно использовать только для
            настройки сервера средствами API.
            В настройках Вашего сообщества на сайте ВКонтакте код будет отличаться.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetCallbackServersAsync(System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Получает информацию о серверах для Callback API в сообществе.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverIds">
            Идентификаторы серверов, данные о которых нужно получить.
            По умолчанию возвращаются все серверы.
            </param>
            <returns>
            Возвращает число серверов в поле count (integer) и массив объектов items с
            данными о серверах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCallbackServers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetCallbackSettingsAsync(System.UInt64,System.UInt64)">
            <summary>
            Позволяет получить настройки уведомлений Callback API для сообщества.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverId"> Идентификатор сервера. </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCallbackSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.SetCallbackSettingsAsync(VkNet.Model.RequestParams.CallbackServerParams)">
            <summary>
            Позволяет задать настройки уведомлений о событиях в Callback API.
            </summary>
            <param name="params">
            Параметры настройки уведомлений о событиях в Callback
            API.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.setCallbackSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetLongPollServerAsync(System.UInt64)">
            <summary>
            Возвращает данные для подключения к Bots Longpoll API.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            key (string) — ключ;
            server (string) — url сервера;
            ts (integer) — timestamp.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getLongPollServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.DisableOnlineAsync(System.UInt64)">
            <summary>
            Выключает статус «онлайн» в сообществе.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.disableOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.EnableOnlineAsync(System.UInt64)">
            <summary>
            Включает статус «онлайн» в сообществе.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.enableOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategoryAsync.GetBotsLongPollHistoryAsync(VkNet.Model.RequestParams.BotsLongPollHistoryParams)">
            <summary>
            Возвращаем обновления событий группы
            </summary>
            <param name="params">Параметры запроса к BotsLongPoll API</param>
            <returns>
            Новые события в группе
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/bots_longpoll
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ILeadsCategoryAsync">
            <summary>
            Leads При подключении к сервису рекламных акций партнёр получает доступ в
            специальный раздел для создания и
            управления рекламными акциями (офферами).
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategoryAsync.CheckUserAsync(VkNet.Model.RequestParams.Leads.CheckUserParams)">
            <summary>
            Проверяет, доступна ли рекламная акция пользователю.
            </summary>
            <param name="checkUserParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект, содержащий поля:
            result — признак того, может ли пользователь начать акцию (true/false), а
            также, в случае auto_start=1, признак
            успешного старта акции,
            reason — в случае result=false, описание причины, по которой пользователь не
            может начать акцию,
            start_link — в случае result=true и auto_start=0, ссылка, по которой должен
            перейти пользователь для начала акции.
            sid — в случае result=true и auto_start=1, идентификатор сессии начатой акции.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.checkUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategoryAsync.CompleteAsync(System.String,System.String,System.String)">
            <summary>
            Завершает начатую пользователем рекламную акцию, используя сессию и секретный
            ключ.
            </summary>
            <param name="vkSid">
            Cессия, полученная GET параметром при старте акции. строка, обязательный
            параметр
            </param>
            <param name="secret">
            Секретный ключ, доступный в интерфейсе тестирования рекламной акции. строка,
            обязательный параметр
            </param>
            <param name="comment">
            Комментарий строка
            </param>
            <returns>
            При успешном завершении оффера будет возвращен объект, содержащий следующие
            поля:
            limit — ограничение, установленное у текущего оффера;
            spent — количество потраченных на акцию голосов;
            cost — стоимость одной выполненной акции;
            test_mode — режим транзакции (1 — тестовый, 0 — реальный);
            success — результат выполнения транзакции (всегда равно 1).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.complete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategoryAsync.GetStatsAsync(System.UInt64,System.String,System.String,System.String)">
            <summary>
            Возвращает статистику по рекламной акции.
            </summary>
            <param name="leadId">
            Идентификатор рекламной акции, доступный в интерфейсе тестирования рекламных
            акций. положительное число,
            обязательный параметр
            </param>
            <param name="secret">
            Секретный ключ, доступный в интерфейсе тестирования рекламной акции. строка
            </param>
            <param name="dateStart">
            Идентификатор дня, начиная с которого необходимо вернуть статистику в формате
            Y-m-d (8-и значное число). Например,
            2011-09-17. строка
            </param>
            <param name="dateEnd">
            Идентификатор дня, до которого необходимо вернуть статистику в формате Y-m-d
            (8-и значное число). Например,
            2011-09-19. строка
            </param>
            <returns>
            При успешном завершении оффера будет возвращен объект, содержащий следующие
            поля:
            limit — ограничения в голосах на текущую рекламную акцию;
            spent — количество голосов, уже потраченных на рекламную акцию;
            cost — стоимость (в голосах) одного прохождения;
            impressions — количество показов акций;
            started — количество начатых акций;
            completed — количество пройденных акций;
            days — данное поле возвращается, только если переданы входные параметры
            date_start и date_end.
            Параметр days Объект days содержит следующие поля:
            impressions — показы;
            started — начатые акции;
            completed — законченные акции;
            spent — потрачено голосов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.getStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategoryAsync.GetUsersAsync(VkNet.Model.RequestParams.Leads.GetUsersParams)">
            <summary>
            Возвращает список последних действий пользователей по рекламной акции.
            </summary>
            <param name="getUsersParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов entry, каждый из которых
            содержит поля:
            uid — идентификатор пользователя;
            aid — идентификатор приложения, из которого было выполнено действие;
            sid — идентификатор сессии;
            date — время действия в формате unixtime;
            start_date — время начала действия в формате unixtime для status = 1;
            status — 0 - начало действия, 1 - завершение действия, 2 - блокирование
            пользователя;
            test_mode — 0 - рабочий режим, 1 - тестовый режим;
            comment — текст комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.getUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategoryAsync.MetricHitAsync(System.String)">
            <summary>
            Засчитывает событие метрики.
            </summary>
            <param name="data">
            Данные метрики, полученные в личном кабинете рекламной акции. обязательный
            параметр
            </param>
            <returns>
            Возвращает объект, содержащий поля:
            result - равен true в случае успеха, и false в обратном случае,
            redirect_link - возвращается в случае, когда пользователя нужно перенаправить
            по указанной ссылке.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.metricHit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategoryAsync.StartAsync(VkNet.Model.RequestParams.Leads.StartParams)">
            <summary>
            Создаёт новую сессию для прохождения рекламной акции для пользователя.
            </summary>
            <param name="startParams">
            Входные параметры запроса.
            </param>
            <returns>
            При успешном старте рекламной акции будет возвращен объект содержащий следующие
            поля:
            test_mode — режим транзакции (1 — тестовый, 0 — реальный);
            vk_sid — сессия рекламной акции.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.start
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ILikesCategoryAsync">
            <summary>
            Асинхронное API для работы с лайками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategoryAsync.GetListAsync(VkNet.Model.RequestParams.LikesGetListParams,System.Boolean)">
            <summary>
            Получает список идентификаторов пользователей или сообществ, которые добавили
            заданный объект в свой список Мне
            нравится.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Возвращает список идентификаторов пользователей или сообществ, которые добавили
            заданный объект в свой список Мне
            нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.getList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategoryAsync.GetListExAsync(VkNet.Model.RequestParams.LikesGetListParams)">
            <summary>
            Получает список идентификаторов пользователей или сообществ, которые добавили
            заданный объект в свой список Мне
            нравится.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает список пользователей и сообществ, которые добавили заданный объект в
            свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.getList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategoryAsync.AddAsync(VkNet.Model.RequestParams.LikesAddParams)">
            <summary>
            Добавляет указанный объект в список Мне нравится текущего пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            В случае успеха возвращает объект с полем likes, в котором находится текущее
            количество пользователей, которые
            добавили данный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategoryAsync.DeleteAsync(VkNet.Enums.SafetyEnums.LikeObjectType,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)">
            <summary>
            Удаляет указанный объект из списка Мне нравится текущего пользователя
            </summary>
            <param name="type"> Тип объекта LikeObjectType </param>
            <param name="itemId">
            Идентификатор объекта. положительное число, обязательный
            параметр
            </param>
            <param name="ownerId">
            Идентификатор владельца объекта. целое число, по умолчанию идентификатор
            текущего пользователя
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> Текст, который ввел пользователь </param>
            <returns>
            В случае успеха возвращает объект с полем likes, в котором находится текущее
            количество пользователей, которые
            добавили данный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategoryAsync.IsLikedAsync(VkNet.Enums.SafetyEnums.LikeObjectType,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Проверяет, находится ли объект в списке Мне нравится заданного пользователя.
            </summary>
            <param name="type"> Тип объекта LikeObjectType </param>
            <param name="itemId">
            Идентификатор объекта. положительное число, обязательный
            параметр
            </param>
            <param name="userId">
            Идентификатор пользователя, у которого необходимо проверить наличие объекта в
            списке «Мне
            нравится». Если параметр не задан, то считается, что он равен идентификатору
            текущего пользователя. положительное
            число, по умолчанию идентификатор текущего пользователя
            </param>
            <param name="ownerId">
            Идентификатор владельца Like-объекта. Если параметр не задан, то считается, что
            он равен
            идентификатору текущего пользователя. целое число, по умолчанию идентификатор
            текущего пользователя
            </param>
            <returns>
            В случае успеха возвращает одно из следующих числовых значений:
            false — указанный Like-объект не входит в список Мне нравится пользователя с
            идентификатором user_id.
            true — указанный Like-объект находится в списке Мне нравится пользователя с
            идентификатором user_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.isLiked
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IMarketsCategoryAsync">
            <summary>
            Методы для работы с товарами.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.GetAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Метод возвращает список товаров в сообществе.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товаров. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="albumId">
            Идентификатор подборки, товары из которой нужно вернуть. положительное число
            (положительное
            число).
            </param>
            <param name="count">
            Количество возвращаемых товаров. положительное число, максимальное значение
            200, по умолчанию 100
            (положительное число, максимальное значение 200, по умолчанию 100).
            </param>
            <param name="offset">
            Смещение относительно первого найденного товара для выборки определенного
            подмножества.
            положительное число (положительное число).
            </param>
            <param name="extended">
            1 — будут возвращены дополнительные поля likes, can_comment, can_repost,
            ''photos'''. По
            умолчанию эти поля не возвращается. флаг, может принимать значения 1 или 0
            (флаг, может принимать значения 1 или
            0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов item с дополнительным
            полем comments, содержащим число
            комментариев у товара.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Возвращает информацию о товарах по идентификаторам.
            </summary>
            <param name="itemIds">
            Перечисленные через запятую идентификаторы — идущие через знак подчеркивания id
            владельцев
            товаров и id самих товаров. Если товар принадлежит сообществу, то в качестве
            первого параметра используется -id
            сообщества. Пример значения item_ids: -4363_136089719,13245770_137352259 список
            строк, разделенных через запятую,
            обязательный параметр, количество элементов должно составлять не более 100
            (список строк, разделенных через
            запятую, обязательный параметр, количество элементов должно составлять не более
            100).
            </param>
            <param name="extended">
            1 — будут возвращены дополнительные поля likes, can_comment, can_repost,
            photos. По умолчанию
            эти поля не возвращается. флаг, может принимать значения 1 или 0 (флаг, может
            принимать значения 1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов item с дополнительным
            полем comments, содержащим число
            комментариев у товара.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.SearchAsync(VkNet.Model.RequestParams.Market.MarketSearchParams)">
            <summary>
            Поиск товаров в каталоге сообщества.
            </summary>
            <param name="params"> Входные параметры запроса. </param>
            <returns>
            Возвращает список объектов item.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.GetAlbumsAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список подборок с товарами.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товаров. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="offset">
            Смещение относительно первой найденной подборки для выборки определенного
            подмножества.
            положительное число (положительное число).
            </param>
            <param name="count">
            Количество возвращаемых подборок. положительное число, по умолчанию 50,
            максимальное значение 100
            (положительное число, по умолчанию 50, максимальное значение 100).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов album.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.getAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.GetAlbumByIdAsync(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Метод возвращает данные подборки с товарами.
            </summary>
            <param name="ownerId">
            Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в
            параметре
            owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору сообщества
            ВКонтакте API (club1)  целое число, обязательный параметр (целое число,
            обязательный параметр).
            </param>
            <param name="albumIds">
            Идентификаторы подборок, данные о которых нужно получить. список положительных
            чисел,
            разделенных запятыми, обязательный параметр (список положительных чисел,
            разделенных запятыми, обязательный
            параметр).
            </param>
            <returns>
            Возвращает список объектов album.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.getAlbumById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.Market.MarketCreateCommentParams)">
            <summary>
            Создает новый комментарий к товару.
            </summary>
            <param name="params"> Входные параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.createComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.Market.MarketGetCommentsParams)">
            <summary>
            Возвращает список комментариев к товару.
            </summary>
            <param name="params"> Входные параметры запроса. </param>
            <returns>
            Возвращает список объектов комментариев.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.DeleteCommentAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет комментарий к товару.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1 (0, если комментарий не найден).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.RestoreCommentAsync(System.Int64,System.Int64)">
            <summary>
            Восстанавливает удаленный комментарий к товару.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="commentId">
            Идентификатор удаленного комментария. положительное число, обязательный
            параметр (положительное
            число, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1 (0, если комментарий с таким
            идентификатором не является удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.restoreComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.EditCommentAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к товару.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (положительное число,
            обязательный параметр).
            </param>
            <param name="message">
            Новый текст комментария (является обязательным, если не задан параметр
            attachments). Максимальное
            количество символов: 2048. строка (строка).
            </param>
            <param name="attachments">
            Новый список объектов, приложенных к комментарию и разделённых символом ",".
            (список строк,
            разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.ReportCommentAsync(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет оставить жалобу на комментарий к товару.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы (положительное число, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.reportComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.ReportAsync(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет отправить жалобу на товар.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товаров. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="itemId">
            Идентификатор товара положительное число, обязательный параметр (положительное
            число, обязательный
            параметр).
            </param>
            <param name="reason">
            Причина жалобы (положительное число, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.report
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.AddAsync(VkNet.Model.RequestParams.Market.MarketProductParams)">
            <summary>
            Добавляет новый товар.
            </summary>
            <param name="params"> Входные параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор добавленного товара.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.EditAsync(VkNet.Model.RequestParams.Market.MarketProductParams)">
            <summary>
            Редактирует товар.
            </summary>
            <param name="params"> Входные параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет товар.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="itemId">
            Идентификатор товара. положительное число, обязательный параметр (положительное
            число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.RestoreAsync(System.Int64,System.Int64)">
            <summary>
            Восстанавливает удаленный товар.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="itemId">
            Идентификатор товара. положительное число, обязательный параметр (положительное
            число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1 (0, если товар не найден среди
            удаленных).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.ReorderItemsAsync(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет положение товара в подборке.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="albumId">
            Идентификатор подборки, в которой находится товар. целое число, обязательный
            параметр (целое
            число, обязательный параметр).
            </param>
            <param name="itemId">
            Идентификатор товара. положительное число, обязательный параметр (положительное
            число,
            обязательный параметр).
            </param>
            <param name="before">
            Идентификатор товара, перед которым следует поместить текущий. положительное
            число (положительное
            число).
            </param>
            <param name="after">
            Идентификатор товара, после которого следует поместить текущий. положительное
            число (положительное
            число).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.reorderItems
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.ReorderAlbumsAsync(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет положение подборки с товарами в списке.
            </summary>
            <param name="ownerId">
            Идентификатор владельца альбома. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="albumId">
            Идентификатор подборки. целое число, обязательный параметр (целое число,
            обязательный параметр).
            </param>
            <param name="before">
            Идентификатор подборки, перед которой следует поместить текущую. положительное
            число
            (положительное число).
            </param>
            <param name="after">
            Идентификатор подборки, после которой следует поместить текущую. положительное
            число (положительное
            число).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.reorderAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.AddAlbumAsync(System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Добавляет новую подборку с товарами.
            </summary>
            <param name="ownerId">
            Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в
            параметре
            owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору сообщества
            ВКонтакте API (club1)  целое число, обязательный параметр (целое число,
            обязательный параметр).
            </param>
            <param name="title">
            Название подборки. строка, обязательный параметр, максимальная длина 128
            (строка, обязательный
            параметр, максимальная длина 128).
            </param>
            <param name="photoId">
            Идентификатор фотографии-обложки подборки. положительное число (положительное
            число).
            </param>
            <param name="mainAlbum">
            Назначить подборку основной (1 — назначить, 0 — нет). флаг, может принимать
            значения 1 или 0
            (флаг, может принимать значения 1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной подборки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.addAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.EditAlbumAsync(System.Int64,System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Редактирует подборку с товарами.
            </summary>
            <param name="ownerId">
            Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в
            параметре
            owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору сообщества
            ВКонтакте API (club1)  целое число, обязательный параметр (целое число,
            обязательный параметр).
            </param>
            <param name="albumId">
            Идентификатор подборки. положительное число, обязательный параметр
            (положительное число,
            обязательный параметр).
            </param>
            <param name="title">
            Название подборки. строка, обязательный параметр, максимальная длина 128
            (строка, обязательный
            параметр, максимальная длина 128).
            </param>
            <param name="photoId">
            Идентификатор фотографии-обложки подборки. положительное число (положительное
            число).
            </param>
            <param name="mainAlbum"> Назначить подборку основной (1 — назначить, 0 — нет). </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.editAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.DeleteAlbumAsync(System.Int64,System.Int64)">
            <summary>
            Удаляет подборку с товарами.
            </summary>
            <param name="ownerId">
            Идентификатор владельца подборки. Обратите внимание, идентификатор сообщества в
            параметре
            owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору сообщества
            ВКонтакте API (club1)  целое число, обязательный параметр (целое число,
            обязательный параметр).
            </param>
            <param name="albumId">
            Идентификатор подборки. положительное число, обязательный параметр
            (положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.deleteAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.RemoveFromAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Удаляет товар из одной или нескольких выбранных подборок.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="itemId">
            Идентификатор товара. положительное число, обязательный параметр (положительное
            число,
            обязательный параметр).
            </param>
            <param name="albumIds">
            Идентификаторы подборок, из которых нужно удалить товар. список положительных
            чисел, разделенных
            запятыми, обязательный параметр (список положительных чисел, разделенных
            запятыми, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.removeFromAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.AddToAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Добавляет товар в одну или несколько выбранных подборок.
            </summary>
            <param name="ownerId">
            Идентификатор владельца товара. Обратите внимание, идентификатор сообщества в
            параметре owner_id
            необходимо указывать со знаком "-" — например, owner_id=-1 соответствует
            идентификатору сообщества ВКонтакте API
            (club1)  целое число, обязательный параметр (целое число, обязательный
            параметр).
            </param>
            <param name="itemId">
            Идентификатор товара. положительное число, обязательный параметр (положительное
            число,
            обязательный параметр).
            </param>
            <param name="albumIds">
            Идентификаторы подборок, в которые нужно добавить товар. список положительных
            чисел, разделенных
            запятыми, обязательный параметр (список положительных чисел, разделенных
            запятыми, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.addToAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategoryAsync.GetCategoriesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список категорий для товаров..
            </summary>
            <param name="count">
            Количество категорий, информацию о которых необходимо вернуть. положительное
            число, максимальное
            значение 1000, по умолчанию 10 (Положительное число, максимальное значение
            1000, по умолчанию 10).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества категорий.
            положительное число
            (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов category.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/market.getCategories
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IMessagesCategoryAsync">
            <summary>
            Асинхронные Методы для работы с личными сообщениями. Для моментального
            получения входящих сообщений используйте LongPoll сервер.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.AddChatUserAsync(System.Int64,System.Int64)">
            <summary>
            Добавляет в мультидиалог нового пользователя.
            </summary>
            <param name="chatId">
            Идентификатор беседы. положительное число, обязательный параметр (Положительное
            число,
            обязательный параметр).
            </param>
            <param name="userId">
            Идентификатор пользователя, которого необходимо включить в беседу.
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.addChatUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.AllowMessagesFromGroupAsync(System.Int64,System.String)">
            <summary>
            Позволяет разрешить отправку сообщений от сообщества текущему пользователю.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="key">
            Произвольная строка.
            Этот параметр можно использовать для идентификации пользователя.
            Его значение будет возвращено в событии message_allow Callback API.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.allowMessagesFromGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.CreateChatAsync(System.Collections.Generic.IEnumerable{System.UInt64},System.String)">
            <summary>
            Создаёт беседу с несколькими участниками.
            </summary>
            <param name="userIds">
            Идентификаторы пользователей, которых нужно включить в мультидиалог. список
            положительных чисел,
            разделенных запятыми, обязательный параметр (Список положительных чисел,
            разделенных запятыми, обязательный
            параметр).
            </param>
            <param name="title"> Название беседы. строка (Строка). </param>
            <returns>
            После успешного выполнения возвращает  идентификатор созданного чата (chat_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.createChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.DeleteAsync(System.Collections.Generic.IEnumerable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Удаляет сообщение.
            </summary>
            <param name="messageIds">
            Список идентификаторов сообщений, разделённых через запятую. список
            положительных чисел, разделенных запятыми
            </param>
            <param name="spam">
            Пометить сообщения как спам. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <param name="deleteForAll">
            1 — если сообщение нужно удалить для получателей (если с момента отправки
            сообщения прошло не более 24 часов ). флаг, может принимать значения 1 или 0,
            по умолчанию
            </param>
            <returns>
            После успешного выполнения возвращает 1 для каждого удаленного сообщения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.DeleteChatPhotoAsync(System.UInt64,System.Nullable{System.UInt64})">
            <summary>
            Позволяет удалить фотографию мультидиалога.
            </summary>
            <param name="chatId">
            Идентификатор беседы. положительное число, обязательный параметр, максимальное
            значение 100000000
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            message_id — идентификатор отправленного системного сообщения;
            chat — объект мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.deleteChatPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.DenyMessagesFromGroupAsync(System.Int64)">
            <summary>
            Позволяет запретить отправку сообщений от сообщества текущему пользователю.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            https://vk.com/dev/messages.denyMessagesFromGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.EditChatAsync(System.Int64,System.String)">
            <summary>
            Изменяет название беседы.
            </summary>
            <param name="chatId">
            Идентификатор беседы. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <param name="title">
            Новое название для беседы. строка, обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.editChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.UInt64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Возвращает сообщения по их идентификаторам.
            </summary>
            <param name="messageIds">
            Идентификаторы сообщений. Максимум 100 идентификаторов. список положительных
            чисел, разделенных запятыми, обязательный параметр
            </param>
            <param name="fields">
            Список дополнительных полей для пользователей и сообществ. список слов,
            разделенных через запятую
            </param>
            <param name="previewLength">
            Количество символов, по которому нужно обрезать сообщение. Укажите 0, если Вы
            не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).
            положительное число, по умолчанию 0
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в
            поле count и массив объектов, описывающих  сообщения, в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SearchAsync(VkNet.Model.RequestParams.MessagesSearchParams)">
            <summary>
            Возвращает список найденных личных сообщений текущего пользователя по введенной
            строке поиска.
            </summary>
            <param name="params"> Параметры запроса messages.search </param>
            <returns>
            После успешного выполнения возвращает  объектов , найденных в соответствии с
            поисковым запросом '''q'''.
            </returns>
            <exception cref="T:System.ArgumentException">
            Query can not be null or
            empty.;query
            </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SendAsync(VkNet.Model.RequestParams.MessagesSendParams)">
            <summary>
            Посылает личное сообщение.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращается идентификатор отправленного сообщения.
            </returns>
            <exception cref="T:System.ArgumentException"> Message can not be <c> null </c>. </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.send
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SendToUserIdsAsync(VkNet.Model.RequestParams.MessagesSendParams)">
            <summary>
            Посылает личное сообщение.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращается идентификатор отправленного сообщения.
            </returns>
            <exception cref="T:System.ArgumentException"> Message can not be <c> null </c>. </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.send
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.RestoreAsync(System.UInt64,System.Nullable{System.UInt64})">
            <summary>
            Восстанавливает удаленное сообщение.
            </summary>
            <param name="messageId">
            Идентификатор сообщения, которое нужно восстановить.
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.MarkAsReadAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Помечает сообщения как прочитанные.
            </summary>
            <param name="peerId">
            Идентификатор чата или пользователя, если это диалог.
            строка (Строка).
            </param>
            <param name="startMessageId">
            При передаче этого параметра будут помечены как прочитанные все сообщения,
            начиная с
            данного. положительное число (Положительное число).
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.markAsRead
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SetActivityAsync(System.String,VkNet.Enums.SafetyEnums.MessageActivityType,System.Nullable{System.Int64},System.Nullable{System.UInt64})">
            <summary>
            Изменяет статус набора текста пользователем в диалоге.
            </summary>
            <param name="userId"> Идентификатор пользователя </param>
            <param name="peerId">
            Идентификатор назначения. Для групповой беседы: 2000000000 + id беседы. Для
            сообщества: -id
            сообщества.
            </param>
            <param name="type"> typing — пользователь начал набирать текст. </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает true, false в противном случае.
            Текст «N набирает сообщение...» отображается в течение 10 секунд после вызова
            метода, либо до момента отправки
            сообщения.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.setActivity
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetLastActivityAsync(System.Int64)">
            <summary>
            Возвращает текущий статус и дату последней активности указанного пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, информацию о последней активности которого
            требуется получить. целое
            число, обязательный параметр (Целое число, обязательный параметр).
            </param>
            <returns>
            Возвращает объект, содержащий следующие поля:
            online — текущий статус пользователя (1 — в сети, 0 — не в сети);
            time — дата последней активности пользователя в формате unixtime.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getLastActivity
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetChatAsync(System.Int64,VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Gets the chat.
            </summary>
            <param name="chatId"> The chat identifier. </param>
            <param name="fields"> The fields. </param>
            <param name="nameCase"> The name case. </param>
            <returns>
            После успешного выполнения возвращает объект (или список объектов)
            мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/messages.getChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetChatAsync(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает информацию о беседе.
            </summary>
            <param name="chatIds">
            Список идентификаторов бесед. список целых чисел, разделенных запятыми (Список
            целых чисел,
            разделенных запятыми).
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть.
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone,
            photo_50, photo_100,
            photo_200_orig, has_mobile, contacts, education, online, counters, relation,
            last_seen, status,
            can_write_private_message, can_see_all_posts, can_post, universities список
            строк, разделенных через запятую
            (Список строк, разделенных через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает объект (или список объектов)
            мультидиалога.
            Если был задан параметр fields, поле users содержит список объектов
            пользователей с дополнительным полем
            invited_by, содержащим идентификатор пользователя, пригласившего в беседу.
            </returns>
            <exception cref="T:System.ArgumentException">
            At least one chat ID must be
            defined;chatIds
            </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetChatPreviewAsync(System.String,VkNet.Enums.Filters.ProfileFields)">
            <summary>
            Получает данные для превью чата с приглашением по ссылке.
            </summary>
            <param name="link"> Ссылка-приглашение. </param>
            <param name="fields"> Список полей профилей, данные о которых нужно получить. </param>
            <returns> Возвращает объект представляющий описание чата </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/messages.getChatPreview
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetHistoryAsync(VkNet.Model.RequestParams.MessagesGetHistoryParams)">
            <summary>
            Возвращает историю сообщений текущего пользователя с указанным пользователя или
            групповой беседы.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            Возвращает историю сообщений с указанным пользователем или из
            указанной беседы
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.getHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.RemoveChatUserAsync(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Исключает из мультидиалога пользователя, если текущий пользователь был
            создателем беседы либо пригласил исключаемого пользователя.
            </summary>
            <param name="chatId">
            Идентификатор беседы. положительное число, обязательный параметр, максимальное
            значение 100000000
            </param>
            <param name="userId">
            Идентификатор пользователя, которого необходимо исключить из беседы. Может быть
            меньше нуля в случае, если пользователь приглашён по email. целое число
            </param>
            <param name="memberId">
            Идентификатор участника, которого необходимо исключить из беседы. Для сообществ
            — идентификатор сообщества со знаком «минус». целое число, доступен начиная с
            версии 5.81
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.removeChatUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetLongPollServerAsync(System.Boolean,System.UInt32,System.Nullable{System.UInt64})">
            <summary>
            Возвращает данные, необходимые для подключения к Long Poll серверу.
            Long Poll подключение позволит Вам моментально узнавать о приходе новых
            сообщений и других событий.
            </summary>
            <param name="lpVersion">
            версия для подключения к Long Poll. Актуальная версия:
            2.
            </param>
            <param name="needPts">
            <c> true </c> — возвращать поле pts, необходимое для работы метода
            messages.getLongPollHistory
            </param>
            <param name="groupId">
            Айди группы, от которой получать данные
            </param>
            <returns>
            Возвращает объект, с помощью которого можно подключиться к серверу быстрых
            сообщений для мгновенного
            получения приходящих сообщений и других событий.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.getLongPollServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetLongPollHistoryAsync(VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams)">
            <summary>
            Возвращает обновления в личных сообщениях пользователя.
            Для ускорения работы с личными сообщениями может быть полезно кешировать уже
            загруженные ранее сообщения на
            мобильном устройстве / ПК пользователя, чтобы не получать их повторно при
            каждом обращении.
            Этот метод помогает осуществить синхронизацию локальной копии списка сообщений
            с актуальной версией.
            </summary>
            <param name="params">
            Параметры запроса к LongPool серверу
            MessagesGetLongPollHistoryParams
            </param>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.getLongPollHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SetChatPhotoAsync(System.String)">
            <summary>
            Позволяет установить фотографию мультидиалога, загруженную с помощью метода
            photos.getChatUploadServer.
            </summary>
            <param name="file">
            Содержимое поля response из ответа специального upload сервера, полученного в
            результате загрузки
            изображения на адрес, полученный методом photos.getChatUploadServer. строка,
            обязательный параметр (Строка,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            message_id — идентификатор отправленного системного сообщения;
            chat — объект мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.setChatPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.MarkAsImportantAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Boolean)">
            <summary>
            Помечает сообщения как важные либо снимает отметку.
            </summary>
            <param name="messageIds">
            Список идентификаторов сообщений, которые необходимо пометить.список
            положительных чисел,
            разделенных запятыми (Список положительных чисел, разделенных запятыми).
            </param>
            <param name="important">
            &#39;&#39;1&#39;&#39;, если сообщения необходимо пометить, как важные;&#39;
            &#39;0&#39;&#39;,
            если необходимо снять пометку.положительное число (Положительное число).
            </param>
            <returns>
            Возвращает список идентификаторов успешно помеченных сообщений.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.markAsImportant
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SendStickerAsync(VkNet.Model.RequestParams.MessagesSendStickerParams)">
            <summary>
            Отправляет стикер.
            </summary>
            <param name="parameters"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор отправленного сообщения
            (mid).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.sendSticker
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetHistoryAttachmentsAsync(VkNet.Model.RequestParams.MessagesGetHistoryAttachmentsParams)">
            <summary>
            Возвращает материалы диалога или беседы..
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает массив объектов photo, video, audio или
            doc, в зависимости от значения
            media_type, а также дополнительное поле next_from, содержащее новое значение
            start_from.
            Если в media_type передано значение link, возвращает список объектов-ссылок:
            url URL ссылки.
            строка title заголовок сниппета.
            строка description описание сниппета.
            строка image_src URL изображения сниппета.
            строка.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.getHistoryAttachments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetInviteLinkAsync(System.UInt64,System.Boolean)">
            <summary>
            Получает ссылку для приглашения пользователя в беседу.
            </summary>
            <param name="peerId"> Идентификатор назначения. </param>
            <param name="reset">
            1 — сгенерировать новую ссылку, сбросив предыдущую.
            0 — получить предыдущую ссылку.
            </param>
            <returns>
            Возвращает объект с единственным полем link (string), которое содержит ссылку
            для приглашения в беседу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getInviteLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.IsMessagesFromGroupAllowedAsync(System.UInt64,System.UInt64)">
            <summary>
            Возвращает информацию о том, разрешена ли отправка сообщений от сообщества
            пользователю.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="userId"> Идентификатор пользователя. </param>
            <returns>
            Возвращает объект с единственным полем is_allowed (integer, [0,1]). Если
            отправка сообщений разрешена, поле
            содержит 1, иначе — 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.isMessagesFromGroupAllowed
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.JoinChatByInviteLinkAsync(System.String)">
            <summary>
            Позволяет присоединиться к чату по ссылке-приглашению.
            </summary>
            <param name="link"> Ссылка-приглашение. </param>
            <returns>
            Возвращает идентификатор чата в поле chat_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.joinChatByInviteLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.MarkAsAnsweredConversationAsync(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Помечает беседу как отвеченную либо снимает отметку.
            </summary>
            <param name="peerId">
            Идентификатор беседы целое число, обязательный параметр
            </param>
            <param name="answered">
            <c> true </c> - беседа отмечена отвеченной, <c> false </c> - неотвеченной флаг,
            может принимать значения <c> true </c> или <c> false </c>, по умолчанию
            <c> true </c>
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.markAsAnsweredConversation
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.MarkAsImportantConversationAsync(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Помечает беседу как важную либо снимает отметку.
            </summary>
            <param name="peerId"> Идентификатор беседы </param>
            <param name="important">
            <c> true </c>, если сообщения необходимо пометить, как важные;
            <c> false </c>, если необходимо снять пометку. положительное число
            (Положительное число).
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.markAsImportantConversation
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.EditAsync(VkNet.Model.RequestParams.MessageEditParams)">
            <summary>
            Редактирует сообщение.
            </summary>
            <param name="params">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.DeleteConversationAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int64})">
            <summary>
            Удаляет личные сообщения в беседе.
            </summary>
            <param name="userId">
            Идентификатор пользователя.
            Если требуется очистить историю беседы, используйте peer_id.
            </param>
            <param name="peerId">
            Идентификатор назначения.
            Для групповой беседы: 2000000000 + id беседы.
            Для сообщества: -id сообщества.
            </param>
            <param name="offset">
            Смещение, начиная с которого нужно удалить переписку (по умолчанию удаляются
            все сообщения,
            начиная с первого).
            </param>
            <param name="count">
            Как много сообщений нужно удалить. Обратите внимание что на метод наложено
            ограничение, за один вызов
            нельзя удалить больше 10000 сообщений, поэтому если сообщений в переписке
            больше - метод нужно вызывать несколько
            раз.
            </param>
            <param name="groupId">
            Идентификатор группы
            </param>
            <returns> После успешного выполнения возвращает <c> true </c>. </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.deleteConversation
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetConversationsByIdAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить беседу по её идентификатору.
            </summary>
            <param name="peerIds">
            Идентификаторы назначений, разделённые запятой.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            Возвращает общее число результатов в поле count (integer) и массив объектов
            бесед в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getConversationsById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetConversationsAsync(VkNet.Model.RequestParams.GetConversationsParams)">
            <summary>
            Возвращает список бесед пользователя.
            </summary>
            <param name="getConversationsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            count
            integerчисло результатов. items
            arrayбеседы. Массив объектов, каждый из которых содержит поля:
            conversation (object) — объект беседы.
            last_message (object) — объект, описывающий последнее сообщение в беседе.
            unread_count
            integerчисло непрочитанных бесед. profiles
            arrayмассив объектов пользователей. groups
            arrayмассив объектов сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getConversations
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetConversationMembersAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить список участников беседы.
            </summary>
            <param name="peerId">
            Идентификатор назначения.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            Возвращает объет, который содержит следующие поля:
            count
            integerчисло участников беседы. items
            arrayучастники беседы. Массив объектов, каждый из которых содержит поля:
            member_id (integer) — идентификатор участника беседы;
            invited_by (integer) — идентификатор пользователя, который пригласил участника;
            join_date (integer) — дата добавления в беседу;
            is_admin (boolean) — является ли пользователь администратором. profiles
            arrayмассив объектов пользователей. groups
            arrayмассив объектов сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.getConversationMembers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetByConversationMessageIdAsync(System.Int64,System.Collections.Generic.IEnumerable{System.UInt64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Возвращает сообщения по их идентификаторам в рамках беседы.
            </summary>
            <param name="peerId">
            Идентификаторы назначений, разделённые запятой.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="conversationMessageIds">
            Идентификаторы сообщений. Максимум 100 идентификаторов. список положительных
            чисел, разделенных запятыми, обязательный параметр
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в
            поле count и массив объектов, описывающих  сообщения, в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.getByConversationMessageId
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SearchConversationsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Позволяет искать диалоги.
            </summary>
            <param name="q">
            Поисковой запрос. строка
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="count">
            Максимальное число результатов для получения. положительное число, по умолчанию
            20
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            Возвращает общее число результатов в поле count (integer) и массив объектов
            диалогов в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.searchConversations
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.PinAsync(System.Int64,System.Nullable{System.UInt64})">
            <summary>
            Закрепляет сообщение.
            </summary>
            <param name="peerId">
            Идентификатор назначения.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="messageId">
            Идентификатор сообщения, которое нужно закрепить. положительное число
            </param>
            <returns>
            Возвращает объект закрепленного сообщения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.pin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.UnpinAsync(System.Int64,System.Nullable{System.UInt64})">
            <summary>
            Открепляет сообщение.
            </summary>
            <param name="peerId">
            Идентификатор назначения.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.unpin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetImportantMessagesAsync(VkNet.Model.RequestParams.GetImportantMessagesParams)">
            <summary>
            Возвращает список важных сообщений пользователя.
            </summary>
            <param name="getImportantMessagesParams">
            Входные параметры запроса.
            </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getImportantMessages
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetRecentCallsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию о недавних звонках.
            </summary>
            <param name="fields">
            Список дополнительных полей для пользователей и сообществ. список слов,
            разделенных через запятую
            </param>
            <param name="count">
            Максимальное число результатов, которые нужно получить. положительное число, по
            умолчанию 40, максимальное значение 500
            </param>
            <param name="startMessageId">
            Идентификатор сообщения, начиная с которого нужно возвращать звонки.
            положительное число
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля для пользователей и сообществ. флаг, может
            принимать значения 1 или 0
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            count
            integerчисло результатов. items
            arrayбеседы. Массив объектов, каждый из которых содержит поля:
            call (object) — объект со следующими полями
            initiator_id (integer) — инициатор звонка.
            receiver_id (integer) — получатель звонка.
            state (string) — состояние.
            canceled_by_initiator — сброшен инициатором
            canceled_by_receiver — сброшен получателем
            reached — состоялся
            duration (integer) — длительность звонка в секундах.
            message_id  (integer) — индетификатор сообщения profiles
            arrayмассив объектов пользователей. groups
            arrayмассив объектов сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getRecentCalls
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.SearchDialogsAsync(System.String,VkNet.Enums.Filters.ProfileFields,System.Nullable{System.UInt32})">
            <summary>
            Возвращает список найденных диалогов текущего пользователя по введенной строке
            поиска.
            </summary>
            <param name="query"> Подстрока, по которой будет производиться поиск. </param>
            <param name="limit"> Количество пользователей которое нужно вернуть. </param>
            <param name="fields"> Поля профилей собеседников, которые необходимо вернуть. </param>
            <returns>
            В результате выполнения данного метода будет возвращён массив объектов
            профилей, бесед и email.
            </returns>
            <exception cref="T:System.ArgumentException">
            Query can not be null or
            empty.;query
            </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.searchDialogs
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.DeleteDialogAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Удаляет все личные сообщения в диалоге.
            </summary>
            <param name="userId">
            Идентификатор пользователя.
            Если требуется очистить историю беседы, используйте peer_id.
            </param>
            <param name="peerId">
            Идентификатор назначения.
            Для групповой беседы: 2000000000 + id беседы.
            Для сообщества: -id сообщества.
            </param>
            <param name="offset">
            Смещение, начиная с которого нужно удалить переписку (по умолчанию удаляются
            все сообщения,
            начиная с первого).
            </param>
            <param name="count">
            Как много сообщений нужно удалить. Обратите внимание что на метод наложено
            ограничение, за один вызов
            нельзя удалить больше 10000 сообщений, поэтому если сообщений в переписке
            больше - метод нужно вызывать несколько
            раз.
            </param>
            <returns> Признак удалось ли удалить сообщения. </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.deleteDialog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.MarkAsAnsweredDialogAsync(System.Int64,System.Boolean)">
            <summary>
            Помечает диалог как отвеченный либо снимает отметку.
            </summary>
            <param name="peerId"> Идентификатор диалога </param>
            <param name="answered"> флаг, может принимать значения 1 или 0, по умолчанию 1 </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.markAsAnsweredDialog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.MarkAsImportantDialogAsync(System.Int64,System.Boolean)">
            <summary>
            Помечает диалог как важный либо снимает отметку.
            </summary>
            <param name="peerId"> Идентификатор диалога </param>
            <param name="important">
            <c> true </c>, если сообщения необходимо пометить, как важные;
            <c> false </c>, если необходимо снять пометку.положительное число
            (Положительное
            число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.markAsImportantDialog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetAsync(VkNet.Model.RequestParams.MessagesGetParams)">
            <summary>
            Возвращает список входящих либо исходящих личных сообщений текущего
            пользователя.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns> Список сообщений, удовлетворяющий условиям фильтрации. </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetChatUsersAsync(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Позволяет получить список пользователей мультидиалога по его id.
            </summary>
            <param name="chatIds">
            Идентификаторы бесед. список целых чисел, разделенных запятыми (Список целых
            чисел, разделенных
            запятыми).
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть.
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone,
            photo_50, photo_100,
            photo_200_orig, has_mobile, contacts, education, online, counters, relation,
            last_seen, status,
            can_write_private_message, can_see_all_posts, can_post, universities список
            строк, разделенных через запятую
            (Список строк, разделенных через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов участников беседы.
            Если был задан параметр fields, возвращает список объектов пользователей с
            дополнительным полем invited_by,
            содержащим идентификатор пользователя, пригласившего в беседу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getChatUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategoryAsync.GetDialogsAsync(VkNet.Model.RequestParams.MessagesDialogsGetParams)">
            <summary>
            Возвращает список диалогов аккаунта
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns> В случае успеха возвращает список диалогов пользователя </returns>
        </member>
        <member name="T:VkNet.Abstractions.INewsFeedCategoryAsync">
            <summary>
            Асинхронные методы для работы с новостной лентой пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetAsync(VkNet.Model.RequestParams.NewsFeedGetParams)">
            <summary>
            Возвращает данные, необходимые для показа списка новостей для текущего
            пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetRecommendedAsync(VkNet.Model.RequestParams.NewsFeedGetRecommendedParams)">
            <summary>
            Получает список новостей, рекомендованных пользователю.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getRecommended
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.NewsFeedGetCommentsParams)">
            <summary>
            Возвращает данные, необходимые для показа раздела комментариев в новостях
            пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetMentionsAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список записей пользователей на своих стенах, в которых упоминается
            указанный пользователь.
            </summary>
            <param name="ownerId">
            Идентификатор группы или сообщества. по умолчанию идентификатор текущего
            пользователя
            </param>
            <param name="startTime">
            Время в формате unixtime начиная с которого следует получать упоминания о
            пользователе.
            </param>
            <param name="endTime">
            Время, в формате unixtime, до которого следует получать упоминания о
            пользователе.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества новостей. По
            умолчанию 0.
            </param>
            <param name="count">
            Количество возвращаемых записей. Если параметр не задан, то считается, что он
            равен 20.
            Максимальное значение параметра 50.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getMentions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetBannedAsync">
            <summary>
            Возвращает список пользователей и групп, которые текущий пользователь скрыл из
            ленты новостей.
            </summary>
            <returns> Возвращает результат выполнения метода. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetBannedExAsync(VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список пользователей и групп, которые текущий пользователь скрыл из
            ленты новостей.
            </summary>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо
            вернуть.
            </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.AddBanAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Запрещает показывать новости от заданных пользователей и групп в ленте новостей
            текущего пользователя.
            </summary>
            <param name="userIds">
            Перечисленные через запятую идентификаторы друзей пользователя, новости от
            которых необходимо
            скрыть из ленты новостей текущего пользователя.
            </param>
            <param name="groupIds">
            Перечисленные через запятую идентификаторы групп пользователя, новости от
            которых необходимо
            скрыть из ленты новостей текущего пользователя.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.addBan
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.DeleteBanAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Разрешает показывать новости от заданных пользователей и групп в ленте новостей
            текущего пользователя.
            </summary>
            <param name="userIds">
            Идентификаторы пользователей, новости от которых
            необходимо вернуть в ленту.
            </param>
            <param name="groupIds">
            Идентификаторы сообществ, новости от которых необходимо
            вернуть в ленту.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.deleteBan
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.IgnoreItemAsync(VkNet.Enums.SafetyEnums.NewsObjectTypes,System.Int64,System.Int64)">
            <summary>
            Позволяет скрыть объект из ленты новостей.
            </summary>
            <param name="type"> Тип объекта. </param>
            <param name="ownerId">
            Идентификатор владельца объекта (пользователь или
            сообщество).
            </param>
            <param name="itemId"> Идентификатор объекта. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.ignoreItem
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.UnignoreItemAsync(VkNet.Enums.SafetyEnums.NewsObjectTypes,System.Int64,System.Int64)">
            <summary>
            Позволяет вернуть ранее скрытый объект в ленту новостей.
            </summary>
            <returns> Возвращает результат выполнения метода. </returns>
            <param name="type"> Тип объекта. </param>
            <param name="ownerId">
            Идентификатор владельца объекта (пользователь или
            сообщество).
            </param>
            <param name="itemId"> Идентификатор объекта. </param>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.unignoreItem
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.SearchAsync(VkNet.Model.RequestParams.NewsFeedSearchParams)">
            <summary>
            Возвращает результаты поиска по статусам. Новости возвращаются в порядке от
            более новых к более старым.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetListsAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает пользовательские списки новостей.
            </summary>
            <param name="listIds"> Идентификаторы списков. </param>
            <param name="extended">
            <c> true </c> — вернуть дополнительную информацию о списке (значения source_ids
            и no_reposts).
            </param>
            <returns>
            Метод возвращает список объектов пользовательских списков.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getLists
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.SaveListAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Метод позволяет создавать или редактировать пользовательские списки для
            просмотра новостей.
            </summary>
            <param name="title"> Название списка. </param>
            <param name="sourceIds">
            Идентификаторы пользователей и сообществ, которые должны быть включены в
            список. Идентификаторы
            сообществ нужно указывать со знаком «минус».
            </param>
            <param name="listId">
            Числовой идентификатор списка (если не передан, будет
            назначен автоматически).
            </param>
            <param name="noReposts">
            Нужно ли отображать копии постов в списке (
            <c> true </c> — не нужно).
            </param>
            <returns>
            После успешного выполнения возвращает Идентификатор списка.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.saveList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.DeleteListAsync(System.Int64)">
            <summary>
            Метод позволяет удалить пользовательский список новостей
            </summary>
            <param name="listId"> Числовой идентификатор списка . </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.deleteList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.UnsubscribeAsync(VkNet.Enums.SafetyEnums.CommentObjectType,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Отписывает текущего пользователя от комментариев к заданному объекту.
            </summary>
            <param name="type">
            Тип объекта, от комментариев к которому необходимо
            отписаться.
            </param>
            <param name="ownerId"> Идентификатор владельца объекта. </param>
            <param name="itemId"> Идентификатор объекта. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.unsubscribe
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategoryAsync.GetSuggestedSourcesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Возвращает сообщества и пользователей, на которые текущему пользователю
            рекомендуется подписаться.
            </summary>
            <param name="offset">
            Отступ, необходимый для выборки определенного подмножества сообществ или
            пользователей.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Количество сообществ или пользователей, которое необходимо вернуть.
            положительное число,
            максимальное значение 1000, по умолчанию 20 (Положительное число, максимальное
            значение 1000, по умолчанию 20).
            </param>
            <param name="shuffle">
            Перемешивать ли возвращаемый список. флаг, может принимать значения 1 или 0
            (Флаг, может
            принимать значения 1 или 0).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть. См. возможные поля для
            пользователей и
            сообществ. список слов, разделенных через запятую (Список слов, разделенных
            через запятую).
            </param>
            <returns>
            Список объектов пользователей и групп.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getSuggestedSources
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.Async.INotesCategoryAsync">
            <summary>
            Notes Методы для работы с заметками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.AddAsync(VkNet.Model.RequestParams.Notes.NotesAddParams)">
            <summary>
            Создает новую заметку у текущего пользователя
            </summary>
            <param name="notesAddParams">
            Входные параметры запроса
            </param>
            <returns>После успешного выполнения возвращает идентификатор созданной заметки (nid).</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.Notes.NotesCreateCommentParams)">
             <summary>
             Добавляет новый комментарий к заметке.
             </summary>
             <param name="createCommentParams">Входные параметры запроса</param>
             <returns>
             После успешного выполнения возвращает идентификатор созданного комментария (cid).
            </returns>
             <remarks>
             Страница документации ВКонтакте http://vk.com/dev/notifications.createComment
             </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.DeleteAsync(System.Int64)">
            <summary>
            Удаляет заметку текущего пользователя.
            </summary>
            <param name="noteId">идентификатор заметки.</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.DeleteCommentAsync(VkNet.Model.RequestParams.Notes.NotesDeleteCommentParams)">
            <summary>
            Удаляет комментарий к заметке.
            </summary>
            <param name="deleteCommentParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.EditAsync(VkNet.Model.RequestParams.Notes.NotesEditParams)">
            <summary>
            Редактирует заметку текущего пользователя.
            </summary>
            <param name="editParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.EditCommentAsync(VkNet.Model.RequestParams.Notes.NotesEditCommentParams)">
            <summary>
            Редактирует указанный комментарий у заметки.
            </summary>
            <param name="editCommentParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.GetAsync(VkNet.Model.RequestParams.Notes.NotesGetParams)">
            <summary>
            Возвращает список заметок, созданных пользователем.
            </summary>
            <param name="notesGetParams">Входные параметры запроса</param>
            <returns>возвращает список объектов заметок</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.GetByIdAsync(VkNet.Model.RequestParams.Notes.NotesGetByIdParams)">
            <summary>
            Возвращает заметку по её id.
            </summary>
            <param name="getByIdParams">Входные параметры запроса</param>
            <returns>Возвращает заметку</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.Notes.NotesGetCommentParams)">
            <summary>
            Возвращает список комментариев к заметке.
            </summary>
            <param name="getCommentParams">Входные параметры запроса</param>
            <returns>Возвращает массив объектов comment</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.Async.INotesCategoryAsync.RestoreCommentAsync(VkNet.Model.RequestParams.Notes.NotesRestoreCommentParams)">
            <summary>
            Восстанавливает удалённый комментарий.
            </summary>
            <param name="restoreCommentParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.restoreComment
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.INotificationsCategoryAsync">
            <summary>
            Асинхронные методы для работы с Уведомлениями
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.INotificationsCategoryAsync.GetAsync(System.Nullable{System.UInt64},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список оповещений об ответах других пользователей на записи текущего
            пользователя.
            </summary>
            <param name="count">
            Указывает, какое максимальное число оповещений следует возвращать.
            положительное число, по умолчанию 30,
            максимальное значение 100
            </param>
            <param name="startFrom">
            Строковый идентификатор оповещения, полученного последним в предыдущем вызове
            (см. описание поля next_from в
            результате). строка, доступен начиная с версии 5.27
            </param>
            <param name="filters">
            Перечисленные через запятую типы оповещений, которые необходимо получить.
            Возможные значения:
            wall — записи на стене пользователя;
            mentions — упоминания в записях на стене, в комментариях или в обсуждениях;
            comments — комментарии к записям на стене, фотографиям и видеозаписям;
            likes — отметки «Мне нравится»;
            reposts — скопированные у текущего пользователя записи на стене, фотографии и
            видеозаписи;
            followers — новые подписчики;
            friends — принятые заявки в друзья.
            Если параметр не задан, то будут получены все возможные типы оповещений. список
            слов, разделенных через запятую
            </param>
            <param name="startTime">
            Время в формате Unixtime, начиная с которого следует получить оповещения для
            текущего пользователя. Если параметр
            не задан, то он считается равным значению времени, которое было сутки назад.
            целое число
            </param>
            <param name="endTime">
            Время в формате Unixtime, до которого следует получить оповещения для текущего
            пользователя. Если параметр не
            задан, то он считается равным текущему времени. целое число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля:
            items
            arrayмассив оповещений для текущего пользователя. profiles
            arrayинформация о пользователях, которые находятся в списке оповещений. groups
            arrayинформация о сообществах, которые находятся в списке оповещений.
            last_viewed
            integerвремя последнего просмотра пользователем раздела оповещений в формате
            Unixtime.
            Описание поля items Поле items содержит массив объектов, каждый из которых
            соответствует одному оповещению. Каждый
            из объектов содержит поля: type
            stringтип оповещения. Подробнее см. ниже. date
            integerвремя появления ответа в формате Unixtime. parent
            object (отсутствует, если type= follow, mention или wall)информация о
            материале, к которому появился ответ (запись
            на стене, комментарий, фотографию, видеозапись или обсуждение). Подробнее см. в
            описании поля type ниже. feedback
            [object,array]объект (или массив объектов, если type равно follow, like_* или
            copy_*), описывающий поступивший
            ответ. Оповещения о новых подписчиках, пометках «Мне нравится» и скопированных
            записях могут быть сгруппированы в
            виде массива. reply
            objectобъект, описывающий комментарий текущего пользователя, отправленный в
            ответ на данное оповещение.
            Отсутствует, если пользователь ещё не давал ответа.
            Описание поля type Поле type описывает тип оповещения. От данного типа зависит
            наличие и содержание полей parent и
            feedback. В данный момент поддерживаются следующие типы оповещений:
            Значение type Тип поля parentТип поля feedbackОписание follow-user[]У
            пользователя появился один или несколько
            новых подписчиков. friend_accepted-user[]Заявка в друзья, отправленная
            пользователем, была принята.
            mention-postБыла создана запись на чужой стене, содержащая упоминание
            пользователя. mention_commentspostcommentБыл
            оставлен комментарий, содержащий упоминание пользователя. wall-postБыла
            добавлена запись на стене пользователя.
            wall_publish-postБыла опубликована новость, предложенная пользователем в
            публичной странице.
            comment_postpostcommentБыл добавлен новый комментарий к записи, созданной
            пользователем.
            comment_photophotocommentБыл добавлен новый комментарий к фотографии
            пользователя. comment_videovideocommentБыл
            добавлен новый комментарий к видеозаписи пользователя.
            reply_commentcommentcommentБыл добавлен новый ответ на
            комментарий пользователя. reply_comment_photocommentcommentБыл добавлен новый
            ответ на комментарий пользователя к
            фотографии. reply_comment_videocommentcommentБыл добавлен новый ответ на
            комментарий пользователя к видеозаписи.
            reply_comment_marketcommentcommentБыл добавлен новый ответ на комментарий
            пользователя к товару.
            reply_topictopiccommentБыл добавлен новый ответ пользователю в обсуждении.
            like_postpostuser[]У записи пользователя
            появилась одна или несколько новых отметок «Мне нравится».
            like_commentcommentuser[]У комментария пользователя
            появилась одна или несколько новых отметок «Мне нравится».
            like_photophotouser[]У фотографии пользователя появилась
            одна или несколько новых отметок «Мне нравится». like_videovideouser[]У
            видеозаписи пользователя появилась одна или
            несколько новых отметок «Мне нравится». like_comment_photocommentuser[]У
            комментария пользователя к фотографии
            появилась одна или несколько новых отметок «Мне нравится».
            like_comment_videocommentuser[]У комментария
            пользователя к видеозаписи появилась одна или несколько новых отметок «Мне
            нравится».
            like_comment_topiccommentuser[]У комментария пользователя в обсуждении
            появилась одна или несколько новых отметок
            «Мне нравится». copy_postpostcopy[]Один или несколько пользователей скопировали
            запись пользователя
            copy_photophotocopy[]Один или несколько пользователей скопировали фотографию
            пользователя.
            copy_videovideocopy[]Один или несколько пользователей скопировали видеозапись
            пользователя.
            mention_comment_photophotocommentПод фотографией был оставлен комментарий,
            содержащий упоминание пользователя.
            mention_comment_videovideocommentПод видео был оставлен комментарий, содержащий
            упоминание пользователя.
            Описание поля parent (post) Содержит информацию о записи на стене:
            id — идентификатор записи;
            to_id — идентификатор владельца записи;
            from_id — идентификатор пользователя, создавшего запись;
            date — время публикации записи в формате unixtime;
            text — текст записи;
            attachments — содержит массив объектов, которые присоединены к текущей записи
            (фотографии, ссылки и т.п.). Более
            подробная информация представлена на странице Описание поля attachments.
            geo — находится в записях со стен, в которых имеется информация о
            местоположении, содержит поля:
            place_id — идентификатор места;
            title — название места;
            type — тип места;
            country_id — идентификатор страны;
            city_id — идентификатор города;
            address — строка с указанием адреса места в городе;
            showmap — данный параметр указывается, если местоположение является
            прикреплённой картой.
            copy_owner_id — если запись является копией записи с чужой стены, то в поле
            содержится идентификатор владельца
            стены у которого была скопирована запись;
            copy_post_id — если запись является копией записи с чужой стены, то в поле
            содержится идентификатор скопированной
            записи на стене ее владельца
            Описание поля parent (comment) Содержит информацию о комментарии:
            id — идентификатор комментария;
            owner_id — идентификатор автора комментария;
            date — время публикации комментария в формате unixtime;
            text — текст комментария;
            post — запись, к которой оставлен комментарий (для типов reply_comment и
            like_comment);
            photo — фотография, к которой оставлен комментарий (для типов
            reply_comment_photo и like_comment_photo);
            video — видеозапись, к которой оставлен комментарий (для типов
            reply_comment_video и like_comment_video);
            topic — обсуждение, в котором оставлен комментарий (для типа
            like_comment_topic).
            Описание поля parent (photo) Содержит информацию о фотографии:
            id — идентификатор фотографии;
            owner_id — идентификатор владельца фотографии;
            aid — идентификатор альбома фотографии;
            src — ссылка на изображение в разрешении 130 пикселей по большей стороне;
            src_big — ccылка на изображение в разрешении 604 пикселя по большей стороне;
            src_small — ссылка на изображение в разрешении 75 пикселей по большей стороне;
            text — текст описания фотографии;
            created — дата загрузки фотографии в формате unixtime.
            Описание поля parent (video) Содержит информацию о видеозаписи:
            id — идентификатор видеозаписи;
            owner_id — идентификатор владельца видеозаписи;
            title — название видеозаписи;
            description — описание видеозаписи;
            duration — продолжительность видеозаписи в секундах;
            link — ссылка на видео;
            image — ссылка на изображение в разрешении 320 пикселей в ширину;
            image_medium — ссылка на изображение в разрешении 160 пикселей в ширину;
            date — дата добавления видеозаписи в формате unixtime;
            views — количество просмотров;
            player — ссылка на встраиваемый i_frame-видеоплеер.
            Описание поля parent (topic) Содержит информацию о теме в обсуждениях
            сообщества:
            id — идентификатор темы;
            owner_id — идентификатор сообщества, содержащего тему в обсуждениях (со знаком
            "минус");
            title — заголовок темы;
            created — дата создания темы в формате unixtime;
            created_by — идентификатор пользователя, создавшего тему;
            updated — дата последнего сообщения в формате unixtime;
            updated_by — идентификатор пользователя, оставившего последнее сообщение;
            is_closed — 1, если тема является закрытой (в ней нельзя оставлять сообщения);
            is_fixed — 1, если тема является прилепленной (находится в начале списка тем);
            comments — число сообщений в теме.
            Описание поля feedback Cодержит информацию об оповещении:
            id (отсутствует, если type равно follow или like_*) — идентификатор
            записи-ответа;
            to_id — идентификатор владельца стены, на которой размещена запись;
            from_id — идентификатор автора ответа;
            text (отсутствует, если type равно follow, like_* или copy_*) — текст ответа;
            likes — находится в записях со стен и содержит информацию о числе людей,
            которым понравилась данная запись,
            содержит поля:
            count — число пользователей, которым понравилась запись,
            user_likes — наличие отметки «Мне нравится» от текущего пользователя
            (1 — есть, 0 — нет),
            can_like — информация о том, может ли текущий пользователь поставить отметку
            «Мне нравится»
            (1 — может, 0 — не может),
            can_publish — информация о том, может ли текущий пользователь сделать репост
            записи
            (1 — может, 0 — не может);
            В случае, если ответ является записью на стене (тип post в таблице выше), в
            объекте feedback также содержатся
            следующие поля:
            attachments — содержит массив объектов, которые присоединены к текущей записи
            (фотографии, ссылки и т.п.). Более
            подробная информация представлена на странице Описание поля attachments.
            geo — находится в записях со стен, в которых имеется информация о
            местоположении, содержит поля:
            place_id — идентификатор места;
            title — название места;
            type — тип места;
            country_id — идентификатор страны;
            city_id — идентификатор города;
            address — строка с указанием адреса места в городе;
            showmap — данный параметр указывается, если местоположение является
            прикреплённой картой.
            Описание поля reply Cодержит информацию об ответе пользователя на оповещение:
            id — идентификатор комментария;
            date — время публикации комментария в формате unixtime;
            text — текст комментария.
            Описание поля profiles Поле profiles содержит массив объектов user с
            информацией о данных пользователей, которые
            присутствуют в новостях. Каждый из объектов содержит следующие поля:
            uid — идентификатор пользователя;
            first_name — имя пользователя;
            last_name — фамилия пользователя;
            photo — адрес фотографии пользователя размером 50x50px;
            photo_medium_rec — адрес фотографии пользователя размером 100x100px;
            screen_name — короткий адрес страницы пользователя (например, andrew или
            id6492).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotificationsCategoryAsync.MarkAsViewedAsync">
            <summary>
            Сбрасывает счетчик непросмотренных оповещений об ответах других пользователей
            на записи текущего пользователя.
            </summary>
            <returns>
            Если у пользователя присутствовали непросмотренные ответы, возвращает 1 в
            случае успешного завершения. В противном
            случае возвращает 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.markAsViewed
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPagesCategoryAsync">
            <summary>
            Асинхронные методы для работы с wiki.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.GetAsync(VkNet.Model.RequestParams.PagesGetParams)">
            <summary>
            Возвращает информацию о вики-странице..
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает информацию о вики-странице в виде объекта page.
            Если был задан параметр need_source равный 1, дополнительно будет возвращено
            поле source.
            Если был задан параметр need_html равный 1, дополнительно будет возвращено поле
            html..
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/pages.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.SaveAsync(System.String,System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Сохраняет текст вики-страницы.
            </summary>
            <param name="text"> Новый текст страницы в вики-формате. </param>
            <param name="pageId"> Идентификатор вики-страницы. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="userId"> Идентификатор пользователя, создавшего вики-страницу. </param>
            <param name="title"> Название вики-страницы. </param>
            <returns>
            В случае успеха возвращает id созданной страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.SaveAccessAsync(System.Int64,System.Int64,System.Nullable{System.Int64},VkNet.Enums.AccessPages,VkNet.Enums.AccessPages)">
            <summary>
            Сохраняет новые настройки доступа на чтение и редактирование вики-страницы.
            </summary>
            <param name="pageId"> Идентификатор вики-страницы. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="userId"> Идентификатор пользователя, создавшего вики-страницу. </param>
            <param name="view"> Значение настройки доступа на чтение. </param>
            <param name="edit"> Значение настройки доступа на редактирование. </param>
            <returns>
            В случае успеха возвращает id страницы, доступ к которой был отредактирован.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.saveAccess
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.GetHistoryAsync(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает список всех старых версий вики-страницы.
            </summary>
            <param name="pageId"> Идентификатор вики-страницы. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="userId"> Идентификатор пользователя, создавшего вики-страницу. </param>
            <returns>
            Возвращает массив объектов page_version, имеющих следующую структуру.
            id — идентификатор версии страницы;
            length длина версии страницы в байтах;
            edited — дата редактирования страницы;
            editor_id — идентификатор редактора;
            editor_name — имя редактора.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.getHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.GetTitlesAsync(System.Int64)">
            <summary>
            Возвращает список вики-страниц в группе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <returns>
            Возвращает массив объектов вики-страниц.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.getTitles
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.GetVersionAsync(System.Int64,System.Int64,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Возвращает текст одной из старых версий страницы.
            </summary>
            <param name="versionId"> Идентификатор версии. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="needHtml">
            Определяет, требуется ли в ответе html-представление
            вики-страницы.
            </param>
            <param name="userId"> Идентификатор пользователя, который создал страницу. </param>
            <returns>
            Возвращает объект вики-страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.getVersion
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.ParseWikiAsync(System.String,System.UInt64)">
            <summary>
            Возвращает html-представление вики-разметки.
            </summary>
            <param name="text"> Текст в вики-формате. </param>
            <param name="groupId">
            Идентификатор группы, в контексте которой
            интерпретируется данная страница.
            </param>
            <returns>
            В случае успеха возвращает экранированный html, соответствующий вики-разметке.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.parseWiki
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategoryAsync.ClearCacheAsync(System.Uri)">
            <summary>
            Позволяет очистить кеш отдельных внешних страниц, которые могут быть
            прикреплены к записям ВКонтакте.
            После очистки кеша при последующем прикреплении ссылки к записи, данные о
            странице будут обновлены.
            Внешние страницы – страницы которые прикрепляются к записям вместе с ссылкой и
            доступные по кнопке "Предпросмотр".
            </summary>
            <param name="url"> URL. </param>
            <returns>
            При удачной очистке кеша – метод возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.clearCache
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPhotoCategoryAsync">
            <summary>
            Асинхронные методы для работы с фотографиями.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.CreateAlbumAsync(VkNet.Model.RequestParams.PhotoCreateAlbumParams)">
            <summary>
            Создает пустой альбом для фотографий.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает объект PhotoAlbum
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.createAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.EditAlbumAsync(VkNet.Model.RequestParams.PhotoEditAlbumParams)">
            <summary>
            Редактирует данные альбома для фотографий пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.editAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetAlbumsAsync(VkNet.Model.RequestParams.PhotoGetAlbumsParams,System.Boolean)">
            <summary>
            Возвращает список альбомов пользователя или сообщества.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Возвращает список объектов PhotoAlbum
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetAsync(VkNet.Model.RequestParams.PhotoGetParams,System.Boolean)">
            <summary>
            Возвращает список фотографий в альбоме.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetAlbumsCountAsync(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает количество доступных альбомов пользователя или сообщества.
            </summary>
            <param name="userId">
            Идентификатор пользователя, количество альбомов которого необходимо получить.
            целое число, по
            умолчанию идентификатор текущего пользователя (Целое число, по умолчанию
            идентификатор текущего пользователя).
            </param>
            <param name="groupId">
            Идентификатор сообщества, количество альбомов которого необходимо получить.
            целое число (Целое
            число).
            </param>
            <returns>
            После успешного выполнения возвращает количество альбомов с учетом настроек
            приватности.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAlbumsCount
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Возвращает информацию о фотографиях по их идентификаторам.
            </summary>
            <param name="photos">
            Перечисленные через запятую идентификаторы, которые представляют собой идущие
            через знак подчеркивания id
            пользователей, разместивших фотографии, и id самих фотографий. Чтобы получить
            информацию о фотографии в альбоме
            группы, вместо id пользователя следует указать -id группы.
            Пример значения photos: 1_129207899,6492_135055734,
            -20629724_271945303
            Некоторые фотографии, идентификаторы которых могут быть получены через API,
            закрыты приватностью, и не будут
            получены. В этом случае следует использовать ключ доступа фотографии
            (access_key) в её идентификаторе. Пример
            значения photos: 1_129207899_220df2876123d3542f,
            6492_135055734_e0a9bcc31144f67fbd
            Поле access_key будет возвращено вместе с остальными данными фотографии в
            методах, которые возвращают фотографии,
            закрытые приватностью но доступные в данном контексте. Например данное поле
            имеют фотографии, возвращаемые методом
            newsfeed.get. список строк, разделенных через запятую, обязательный параметр
            (Список строк, разделенных через
            запятую, обязательный параметр).
            </param>
            <param name="extended">
            1 — будут возвращены дополнительные поля likes, comments, tags, can_comment,
            can_repost. Поля
            comments и tags содержат только количество объектов. По умолчанию данные поля
            не возвращается. флаг, может
            принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="photoSizes">
            Возвращать ли доступные размеры фотографии в специальном формате. флаг, может
            принимать
            значения 1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает массив объектов photo.
            Если к фотографии прикреплено местоположение, также возвращаются поля lat и
            long, содержащие географические
            координаты отметки.
            Если был задан параметр extended=1, возвращаются дополнительные поля:
            likes — количество отметок Мне нравится и информация о том, поставил ли лайк
            текущий пользователь;
            comments — количество комментариев к фотографии;
            tags — количество отметок на фотографии;
            can_comment — может ли текущий пользователь комментировать фото (1 — может, 0 —
            не может);
            can_repost — может ли текущий пользователь сделать репост фотографии (1 —
            может, 0 — не может).
            Если был задан параметр photo_sizes, вместо полей width и height возвращаются
            размеры копий фотографии в
            специальном формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetUploadServerAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографий.
            </summary>
            <param name="albumId"> Идентификатор альбома. целое число (Целое число). </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит альбом (если необходимо
            загрузить фотографию в
            альбом сообщества). целое число (Целое число).
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetOwnerPhotoUploadServerAsync(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки главной фотографии на страницу
            пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор сообщества или текущего пользователя. Обратите внимание,
            идентификатор сообщества в
            параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору
            сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по
            умолчанию идентификатор текущего пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getOwnerPhotoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetChatUploadServerAsync(System.UInt64,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить адрес для загрузки фотографий мультидиалогов.
            </summary>
            <param name="chatId">
            Идентификатор беседы, для которой нужно загрузить фотографию. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="cropX">
            Координата x для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropY">
            Координата y для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropWidth">
            Ширина фотографии после обрезки в px. положительное число, минимальное значение
            200
            (Положительное число, минимальное значение 200).
            </param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getChatUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveOwnerPhotoAsync(System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Позволяет сохранить главную фотографию пользователя или сообщества.
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер.
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> текст, который ввел пользователь </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля photo_hash и
            photo_src (при работе через VK.api метод
            вернёт поля photo_src, photo_src_big, photo_src_small). Параметр photo_hash
            необходим для подтверждения
            пользователем изменения его фотографии через вызов метода saveProfilePhoto
            Javascript API. Поле photo_src содержит
            путь к загруженной фотографии.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveOwnerPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveWallPhotoAsync(System.String,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом
            photos.getWallUploadServer.
            </summary>
            <param name="userId">
            Идентификатор пользователя, на стену которого нужно
            сохранить фотографию
            </param>
            <param name="groupId">
            Идентификатор сообщества, на стену которого нужно
            сохранить фотографию
            </param>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер
            </param>
            <param name="caption"> Описание загружаемой фотографии </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveWallPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetWallUploadServerAsync(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографии на стену пользователя или
            сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, на стену которого нужно загрузить фото (без знака
            «минус»). целое число
            (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает объект с полями upload_url, album_id,
            user_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getWallUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetMessagesUploadServerAsync(System.Int64)">
            <summary>
            Возвращает адрес сервера для загрузки фотографии в личное сообщение
            пользователю.
            </summary>
            <param name="peerId">
            Идентификатор назначения (для загрузки фотографии в
            сообщениях сообществ).
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getMessagesUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveMessagesPhotoAsync(System.String)">
            <summary>
            Сохраняет фотографию после успешной загрузки на URI, полученный методом
            GetMessagesUploadServer
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер
            </param>
            <returns>
            После успешного выполнения возвращает массив с загруженной фотографией,
            возвращённый объект имеет поля id,
            pid, aid, owner_id, src, src_big, src_small, created. В случае наличия
            фотографий в высоком разрешении также будут
            возвращены адреса с названиями src_xbig и src_xxbig.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveMessagesPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetOwnerCoverPhotoUploadServerAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки обложки сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, для которого необходимо загрузить обложку.
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="cropX">
            Координата X верхнего левого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <param name="cropY">
            Координата Y верхнего левого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <param name="cropX2">
            Координата X нижнего правого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <param name="cropY2">
            Координата Y нижнего правого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getOwnerCoverPhotoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveOwnerCoverPhotoAsync(System.String)">
            <summary>
            Сохраняет фотографию после успешной загрузки на URI, полученный методом
            GetOwnerCoverPhotoUploadServer
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер
            </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveOwnerCoverPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.ReportAsync(System.Int64,System.UInt64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на фотографию.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            целое число,
            обязательный параметр (Целое число, обязательный параметр).
            </param>
            <param name="photoId">
            Идентификатор фотографии. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы:
            0 — спам;
            1 — детская порнография;
            2 — экстремизм;
            3 — насилие;
            4 — пропаганда наркотиков;
            5 — материал для взрослых;
            6 — оскорбление.
            положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.report
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.ReportCommentAsync(System.Int64,System.UInt64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на комментарий к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор владельца фотографии к которой оставлен комментарий. целое число,
            обязательный
            параметр (Целое число, обязательный параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы:
            0 — спам;
            1 — детская порнография;
            2 — экстремизм;
            3 — насилие;
            4 — пропаганда наркотиков;
            5 — материал для взрослых;
            6 — оскорбление.
            положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.reportComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SearchAsync(VkNet.Model.RequestParams.PhotoSearchParams,System.Boolean)">
            <summary>
            Осуществляет поиск изображений по местоположению или описанию.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов фотографий.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveAsync(VkNet.Model.RequestParams.PhotoSaveParams)">
            <summary>
            Сохраняет фотографии после успешной загрузки.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.CopyAsync(System.Int64,System.UInt64,System.String)">
            <summary>
            Позволяет скопировать фотографию в альбом "Сохраненные фотографии".
            </summary>
            <param name="ownerId">
            Идентификатор владельца фотографии целое число, обязательный параметр (Целое
            число, обязательный
            параметр).
            </param>
            <param name="photoId">
            Индентификатор фотографии положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="accessKey">
            Специальный код доступа для приватных фотографий
            строка (Строка).
            </param>
            <returns>
            Возвращает идентификатор созданной фотографии.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.copy
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.EditAsync(VkNet.Model.RequestParams.PhotoEditParams)">
            <summary>
            Изменяет описание у выбранной фотографии.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.MoveAsync(System.Int64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Переносит фотографию из одного альбома в другой.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="targetAlbumId">
            Идентификатор альбома, в который нужно переместить фотографию. целое число,
            обязательный
            параметр (Целое число, обязательный параметр).
            </param>
            <param name="photoId">
            Идентификатор фотографии, которую нужно перенести. целое число, обязательный
            параметр (Целое
            число, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.move
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.MakeCoverAsync(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Делает фотографию обложкой альбома.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. Фотография должна находиться в альбоме album_id.
            целое число,
            обязательный параметр (Целое число, обязательный параметр).
            </param>
            <param name="albumId"> Идентификатор альбома. целое число (Целое число). </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.makeCover
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.ReorderAlbumsAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Меняет порядок альбома в списке альбомов пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит альбом.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="albumId">
            Идентификатор альбома. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <param name="before">
            Идентификатор альбома, перед которым следует поместить альбом. целое число
            (Целое число).
            </param>
            <param name="after">
            Идентификатор альбома, после которого следует поместить альбом. целое число
            (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.reorderAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.ReorderPhotosAsync(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Меняет порядок фотографии в списке фотографий альбома пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="before">
            Идентификатор фотографии, перед которой следует поместить фотографию. Если
            параметр не указан,
            фотография будет помещена последней. целое число (Целое число).
            </param>
            <param name="after">
            Идентификатор фотографии, после которой следует поместить фотографию. Если
            параметр не указан,
            фотография будет помещена первой. целое число (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.reorderPhotos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetAllAsync(VkNet.Model.RequestParams.PhotoGetAllParams)">
            <summary>
            Возвращает все фотографии пользователя или сообщества в антихронологическом
            порядке.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            <remarks>
            Если был задан параметр extended — будет возвращено поле likes:
            user_likes: 1 — текущему пользователю нравится данная фотография, 0 - не
            указано.
            count — количество пользователей, которым нравится текущая фотография.
            Если был задан параметр photo_sizes=1, вместо полей width и height возвращаются
            размеры копий фотографии в
            специальном формате.
            </remarks>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAll
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetUserPhotosAsync(VkNet.Model.RequestParams.PhotoGetUserPhotosParams)">
            <summary>
            Возвращает список фотографий, на которых отмечен пользователь.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов photo.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getUserPhotos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.DeleteAlbumAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет указанный альбом для фотографий у текущего пользователя.
            </summary>
            <param name="albumId">
            Идентификатор альбома. целое число, положительное число, обязательный параметр
            (Целое число,
            положительное число, обязательный параметр).
            </param>
            <param name="groupId">
            Идентификатор сообщества, в котором размещен альбом. целое число, положительное
            число (Целое
            число, положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.deleteAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.DeleteAsync(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаление фотографии на сайте.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.RestoreAsync(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную фотографию.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.ConfirmTagAsync(System.UInt64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Подтверждает отметку на фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. обязательный параметр
            (Обязательный параметр).
            </param>
            <param name="tagId">
            Идентификатор отметки на фотографии. целое число, обязательный параметр (Целое
            число, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.confirmTag
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.PhotoGetCommentsParams)">
            <summary>
            Возвращает список комментариев к фотографии.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Comment
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetAllCommentsAsync(VkNet.Model.RequestParams.PhotoGetAllCommentsParams)">
            <summary>
            Возвращает отсортированный в антихронологическом порядке список всех
            комментариев к конкретному альбому или ко всем
            альбомам пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Comment
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAllComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.PhotoCreateCommentParams)">
            <summary>
            Создает новый комментарий к фотографии.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.createComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.DeleteCommentAsync(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаляет комментарий к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c> (0, если комментарий не
            найден).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.RestoreCommentAsync(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленный комментарий к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор удаленного комментария. целое число, обязательный параметр (Целое
            число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c> (0, если комментарий с
            таким идентификатором не является
            удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.restoreComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.EditCommentAsync(System.UInt64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)
            </param>
            <param name="commentId"> Идентификатор комментария </param>
            <param name="message">
            Новый текст комментария (является обязательным, если не задан параметр
            attachments)
            </param>
            <param name="attachments">
            Новый список объектов, приложенных к комментарию и разделённых символом ",".
            Поле attachments представляется в
            формате: &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id
            &gt;_&lt;media_id&gt; &lt;type&gt; —
            тип медиа-вложения:
            photo — фотография
            video — видеозапись
            audio — аудиозапись
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения
            &lt;media_id&gt; — идентификатор медиа-вложения.
            <example>
            Например:
            photo100172_166443618,photo66748_265827614
            </example>
            Параметр является обязательным, если не задан параметр message. список строк,
            разделенных через запятую
            </param>
            <returns> После успешного выполнения возвращает true. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetTagsAsync(System.UInt64,System.Nullable{System.Int64},System.String)">
            <summary>
            Возвращает список отметок на фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="accessKey">
            Строковой ключ доступа, который може быть получен при получении объекта
            фотографии. строка
            (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов tag, каждый из которых
            содержит следующие поля:
            user_id — идентификатор пользователя, которому соответствует отметка;
            id — идентификатор отметки;
            placer_id — идентификатор пользователя, сделавшего отметку;
            tagged_name — название отметки;
            date — дата добавления отметки в формате unixtime;
            x, y, x2, y2 — координаты прямоугольной области, на которой сделана отметка
            (верхний левый угол и нижний правый
            угол) в процентах;
            viewed — статус отметки (1 — подтвержденная, 0 — неподтвержденная).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getTags
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.PutTagAsync(VkNet.Model.RequestParams.PhotoPutTagParams)">
            <summary>
            Добавляет отметку на фотографию.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной отметки (tag id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.putTag
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.RemoveTagAsync(System.UInt64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаляет отметку с фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="tagId">
            Идентификатор отметки. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.removeTag
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetNewTagsAsync(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список фотографий, на которых есть непросмотренные отметки.
            </summary>
            <param name="offset">
            Смещение, необходимое для получения определённого подмножества фотографий.
            целое число (Целое
            число).
            </param>
            <param name="count">
            Количество фотографий, которые необходимо вернуть. положительное число,
            максимальное значение 100,
            по умолчанию 20 (Положительное число, максимальное значение 100, по умолчанию
            20).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getNewTags
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetMarketUploadServerAsync(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографии товаров сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, для которого необходимо загрузить фотографию товара.
            положительное
            число, обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="mainPhoto">
            Является ли фотография обложкой товара  (1 — фотография для обложки, 0 —
            дополнительная
            фотография) флаг, может принимать значения 1 или 0 (Флаг, может принимать
            значения 1 или 0).
            </param>
            <param name="cropX">
            Координата x для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropY">
            Координата y для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropWidth">
            Ширина фотографии после обрезки в px. положительное число, минимальное значение
            200
            (Положительное число, минимальное значение 200).
            </param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getMarketUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.GetMarketAlbumUploadServerAsync(System.Int64)">
            <summary>
            Возвращает адрес сервера для загрузки фотографии подборки товаров в сообществе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, для которого необходимо загрузить фотографию подборки
            товаров. целое
            число (Целое число).
            </param>
            <returns>
            .
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getMarketAlbumUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveMarketPhotoAsync(System.Int64,System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом
            photos.getMarketUploadServer.
            </summary>
            <param name="groupId">
            Идентификатор группы, для которой нужно загрузить фотографию. положительное
            число (положительное
            число).
            </param>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии на сервер. строка,
            обязательный параметр
            (строка, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveMarketPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategoryAsync.SaveMarketAlbumPhotoAsync(System.Int64,System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом
            photos.getMarketAlbumUploadServer.
            </summary>
            <param name="groupId">
            Идентификатор группы, для которой нужно загрузить фотографию. положительное
            число, обязательный
            параметр (положительное число, обязательный параметр).
            </param>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии на сервер. строка,
            обязательный параметр
            (строка, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveMarketAlbumPhoto
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPlacesCategoryAsync">
            <summary>
            Places Методы для работы с местами.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategoryAsync.AddAsync(VkNet.Model.RequestParams.PlacesAddParams)">
            <summary>
            Добавляет новое место в базу географических мест.
            </summary>
            <param name="placesAddParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного места (pid).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategoryAsync.CheckinAsync(VkNet.Model.RequestParams.PlacesCheckinParams)">
            <summary>
            Отмечает пользователя в указанном месте.
            </summary>
            <param name="placesCheckinParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной отметки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.checkin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Возвращает информацию о местах по их идентификаторам.
            </summary>
            <param name="places">
            Перечисленные через запятую идентификаторы мест список положительных чисел,
            разделенных запятыми, обязательный
            параметр
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов place, каждый из которых
            имеет следующие поля:
            id — идентификатор места;
            title — название места;
            latitude — географическая широта, заданная в градусах (от -90 до 90);
            longitude — географическая долгота, заданная в градусах (от -180 до 180);
            created — дата добавления места в формате unixtime.
            Также, при наличии соответствующей информации, в объект могут включаться поля
            checkins, updated, type, country,
            city, address.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategoryAsync.GetCheckinsAsync(VkNet.Model.RequestParams.PlacesGetCheckinsParams)">
            <summary>
            Возвращает список отметок пользователей в местах согласно заданным параметрам.
            </summary>
            <param name="placesGetCheckinsParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает количество отметок и массив объектов
            chekin, каждый из которых имеет
            следующие поля:
            id — идентификатор отметки;
            user_id — идентификатор отметившегося пользователя;
            date — дата добавления отметки в формате unixtime;
            latitude — географическая широта, заданная в градусах (от -90 до 90);
            longitude — географическая долгота, заданная в градусах (от -180 до 180);
            place_id — идентификатор места;
            text — текст сопроводительного сообщения;
            distance — расстояние от места до заданной точки.
            Если в запросе был задан параметр need_places, то в объекте могут дополнительно
            содержаться следующие поля:
            place_title — наименование места;
            place_country — идентификатор страны;
            place_city — идентификатор города;
            place_address — адрес;
            place_type — тип места;
            place_icon.
            Если не заданы параметры latitude и longitude или параметр place, то будет
            возвращена лента обновлений отметок
            друзей. При указании параметра timestamp будут возвращены только те отметки из
            ленты обновлений, которые были
            созданы после указанного значения timestamp. Если timestamp не указан, то
            отметки из ленты будут возвращены с
            учетом параметров offset и count (если они заданы).
            Если заданы параметры latitude и longitude, то будут возвращены все отметки,
            сделанные за последние 24 часа,
            координаты которых находятся недалеко от Вас. Если задан параметр friends_only,
            то будут возвращены только
            последние ближайшие отметки Ваших друзей.
            Если задан параметр place, то будут возвращены последние 20 отметок, сделанные
            в месте с идентификатором, указанном
            в параметре place.
            Если задан параметр uid, то будут возвращены последние 20 отметок, сделанные
            пользователем с идентификатором,
            указанном в параметре uid.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.getCheckins
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategoryAsync.GetTypesAsync">
            <summary>
            Возвращает список всех возможных типов мест.
            </summary>
            <returns>
            Возвращает массив всех возможных типов мест, каждый из объектов которого
            содержит поля tid, title и icon.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.getTypes
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategoryAsync.SearchAsync(VkNet.Model.RequestParams.PlacesSearchParams)">
            <summary>
            Возвращает список мест, найденных по заданным условиям поиска.
            </summary>
            <param name="placesSearchParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает общее количество найденных мест и массив
            объектов place, каждый из которых
            имеет следующие поля:
            id — идентификатор места;
            title — название места;
            latitude — географическая широта, заданная в градусах (от -90 до 90);
            longitude — географическая долгота, заданная в градусах (от -180 до 180);
            created — дата добавления места;
            type — тип места;
            icon — иконка (url изображения);
            checkins — количество чекинов;
            updated — дата последнего чекина;
            type — идентификатор типа места;
            country — идентификатор страны;
            city — идентификатор города;
            address — адрес;
            distance — расстояние от исходной точки.
            Если место прикреплено к сообществу, дополнительно возвращаются поля group_id и
            group_photo.
            Если не задан параметр radius, то по умолчанию он будет иметь значение 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.search
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPollsCategoryAsync">
            <summary>
            Асинхронные методы этого класса позволяют производить действия с опросами.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategoryAsync.GetByIdAsync(VkNet.Model.RequestParams.PollsGetByIdParams)">
            <summary>
            Возвращает детальную информацию об опросе по его идентификатору.
            </summary>
            <param name="params"> Параметры </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.GetById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategoryAsync.EditAsync(VkNet.Model.RequestParams.PollsEditParams)">
            <summary>
            Позволяет редактировать созданные опросы.
            </summary>
            <param name="params"> Параметры </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.Edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategoryAsync.AddVoteAsync(VkNet.Model.RequestParams.PollsAddVoteParams)">
            <summary>
            Отдает голос текущего пользователя за выбранный вариант ответа в указанном
            опросе.
            </summary>
            <param name="params"> Параметры </param>
            <returns>
            1 — если голос текущего пользователя был отдан за выбранный вариант ответа;
            0 — если текущий пользователь уже голосовал в указанном опросе
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.addVote
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategoryAsync.DeleteVoteAsync(VkNet.Model.RequestParams.PollsDeleteVoteParams)">
            <summary>
            Снимает голос текущего пользователя с выбранного варианта ответа в указанном
            опросе.
            </summary>
            <param name="params"> Параметры </param>
            <returns>
            1 — если голос текущего пользователя был снят с выбранного варианта ответа
            0 — если текущий пользователь еще не голосовал в указанном опросе или указан не
            выбранный им вариант ответа
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.DeleteVote
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategoryAsync.GetVotersAsync(VkNet.Model.RequestParams.PollsGetVotersParams)">
            <summary>
            Получает список идентификаторов пользователей, которые выбрали определенные
            варианты ответа в опросе.
            </summary>
            <param name="params"> Параметры </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.GetVoters
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategoryAsync.CreateAsync(VkNet.Model.RequestParams.Polls.PollsCreateParams)">
            <summary>
            Позволяет создавать опросы, которые впоследствии можно прикреплять к записям на
            странице пользователя или
            сообщества.
            </summary>
            <param name="params"> Параметры </param>
            <returns>
            В случае успешного создания опроса в качестве результата возвращается объект
            опроса.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.create
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ISearchCategoryAsync">
            <summary>
            Асинхронные методы для работы с поиском.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.ISearchCategoryAsync.GetHintsAsync(VkNet.Model.RequestParams.SearchGetHintsParams)">
            <summary>
            Метод позволяет получить результаты быстрого поиска по произвольной подстроке
            </summary>
            <param name="params"> Параметры запроса </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/search.getHints
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStatsCategoryAsync">
            <summary>
            Асинхронные методы для работы со статистикой.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStatsCategoryAsync.GetAsync(VkNet.Model.StatsGetParams)">
            <summary>
            Возвращает статистику сообщества или приложения.
            </summary>
            <param name = "getParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект с данными статистики.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stats.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStatsCategoryAsync.TrackVisitorAsync">
            <summary>
            Добавляет данные о текущем сеансе в статистику посещаемости приложения..
            </summary>
            <returns>
            В случае успешной обработки данных метод вернет <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stats.trackVisitor
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStatsCategoryAsync.GetPostReachAsync(System.Int64,System.Int64)">
            <summary>
            Возвращает статистику для записи на стене.
            </summary>
            <param name="ownerId">
            Идентификатор сообщества — владельца записи. Указывается
            со знаком «минус».
            </param>
            <param name="postId">
            Идентификатор записи. Обратите внимание — данные по статистике доступны только
            для 300
            последних(самых свежих) записей на стене сообщества.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Необходимо входить в число руководителей этого сообщества.
            Страница документации ВКонтакте https://vk.com/dev/stats.getPostReach
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStatusCategoryAsync">
            <summary>
            Асинхронные методы для работы со статусом пользователя или сообщества.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStatusCategoryAsync.GetAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Получает статус пользователя или сообщества.
            </summary>
            <param name="userId">
            Идентификатор пользователя или сообщества, информацию о статусе которого нужно
            получить.
            </param>
            <param name="groupId">
            Идентификатор сообщества, статус которого необходимо получить. положительное
            число (Положительное
            число).
            </param>
            <returns>
            В случае успеха возвращается статус пользователдя или сообщества.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Status
            Страница документации ВКонтакте http://vk.com/dev/status.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStatusCategoryAsync.SetAsync(System.String,System.Nullable{System.Int64})">
            <summary>
            Устанавливает новый статус текущему пользователю.
            </summary>
            <param name="text">
            Текст статуса, который необходимо установить текущему пользователю. Если
            параметр
            равен пустой строке, то статус текущего пользователя будет очищен.
            </param>
            <param name="groupId">
            Идентификатор сообщества, в котором будет установлен статус. По умолчанию
            статус устанавливается
            текущему пользователю.
            </param>
            <returns>
            Возвращает true, если статус был успешно установлен, false в
            противном случае.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Status
            Страница документации ВКонтакте http://vk.com/dev/status.set
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStorageCategoryAsync">
            <summary>
            Storage Методы для работы с переменными в приложении.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStorageCategoryAsync.GetAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает значение переменной, название которой передано в параметре key.
            </summary>
            <param name="keys">
            Список названий переменных, разделённых запятыми. Если указан этот параметр, то
            параметр key не учитывается. список
            слов, разделенных через запятую, количество элементов должно составлять не
            более 1000
            </param>
            <param name="userId">
            Id пользователя, переменная которого устанавливается, в случае если данные
            запрашиваются серверным методом.
            положительное число
            </param>
            <param name="global">
            Указывается 1, если необходимо работать с глобальными переменными, а не с
            переменными пользователя. флаг, может
            принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            Возвращает значение одной или нескольких переменных. Если переменная на сервере
            отсутствует, то будет возвращена
            пустая строка.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/storage.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStorageCategoryAsync.GetKeysAsync(System.Nullable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает названия всех переменных.
            </summary>
            <param name="userId">
            Id пользователя, названия переменных которого получаются, в случае если данные
            запрашиваются серверным методом.
            положительное число
            </param>
            <param name="global">
            Указывается 1, если необходимо работать с глобальными переменными, а не с
            переменными пользователя. флаг, может
            принимать значения 1 или 0, по умолчанию 0
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества названий
            переменных. По умолчанию 0. положительное
            число, по умолчанию 0
            </param>
            <param name="count">
            Количество названий переменных, информацию о которых необходимо получить.
            положительное число, максимальное
            значение 1000, по умолчанию 100
            </param>
            <returns>
            Возвращает массив названий переменных.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/storage.getKeys
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStorageCategoryAsync.SetAsync(System.String,System.String,System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Сохраняет значение переменной, название которой передано в параметре key.
            </summary>
            <param name="key">
            Название переменной. Может содержать символы латинского алфавита, цифры, знак
            тире, нижнее подчёркивание [a-zA-Z_
            &#092;-0-9]. строка, максимальная длина 100, обязательный параметр
            </param>
            <param name="value">
            Значение переменной, сохраняются только первые 4096 байта. строка
            </param>
            <param name="userId">
            Id пользователя, переменная которого устанавливается, в случае если данные
            запрашиваются серверным методом.
            положительное число
            </param>
            <param name="global">
            Указывается 1, если необходимо работать с глобальными переменными, а не с
            переменными пользователя. флаг, может
            принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            Возвращает 1 в случае удачного сохранения переменной.
            Для удаления переменной необходимо передать пустое значение в параметре value.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/storage.set
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStreamingCategoryAsync">
            <summary>
            Список методов секции Streaming
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategoryAsync.GetServerUrlAsync">
            <summary>
            Позволяет получить данные для подключения к Streaming API.
            </summary>
            <returns>
            Возвращает объект, который содержит следующие поля:
            endpoint (string) — хост для подключения к серверу;
            key (string) — ключ доступа. Ключ бессрочный и прекращает действовать только
            после получения нового ключа.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.getServerUrl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategoryAsync.GetSettingsAsync">
            <summary>
            Позволяет получить значение порога для Streaming API.
            </summary>
            <returns>
            Возвращает объект с единственным полем monthly_limit (string), которое содержит
            значение tier_1-tier_6 или
            unlimited и соответствует установленному порогу для приложения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.getSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategoryAsync.GetStatsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Позволяет получить статистику для подготовленных и доставленных событий
            Streaming API.
            </summary>
            <param name="type">
            Тип статистики. Возможные значения:
            received — события, полученные приложением;
            prepared — события, сгенерированные со стороны ВКонтакте.
            строка
            </param>
            <param name="interval">
            Интервалы статистики. Возможные значения:
            5m — пять минут. Максимальный период — 3 дня между start_time и end_time;
            1h — один час. Максимальный период — 7 дней между start_time и end_time;
            24h — сутки. Максимальный период — 31 день между start_time и end_time.
            строка, по умолчанию 5m
            </param>
            <param name="startTime">
            Время начала отсчёта в Unixtime. По умолчанию: end_time минус сутки.
            положительное число
            </param>
            <param name="endTime">
            Время окончания отсчёта в Unixtime. По умолчанию: текущее время. положительное
            число
            </param>
            <returns>
            Возвращает массив объектов, каждый из которых содержит поля:
            event_type (string) — тип событий. Возможные значения:
            post — записи на стене;
            comment — комментарии;
            share — репосты.
            stats (array) — значения статистики. Массив объектов, каждый из которых
            содержит оля:
            timestamp (integer) — время, соответствующее значению;
            value (integer) — значение.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.getStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategoryAsync.SetSettingsAsync(VkNet.Enums.SafetyEnums.MonthlyLimit)">
            <summary>
            Позволяет задать значение порога для Streaming API.
            </summary>
            <param name="monthlyTier">
            Значение порога в месяц. Возможные значения:
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.setSettings
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IUsersCategoryAsync">
            <summary>
            Асинхронные методы для работы с информацией о пользователях.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.SearchAsync(VkNet.Model.RequestParams.UserSearchParams)">
            <summary>
            Возвращает список пользователей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей, найденных
            в соответствии с заданными
            критериями.
            </returns>
            <exception cref="T:System.ArgumentException"> Query can not be <c> null </c> or empty. </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.IsAppUserAsync(System.Nullable{System.Int64})">
            <summary>
            Возвращает информацию о том, установил ли пользователь приложение.
            </summary>
            <param name="userId">
            Идентификатор пользователя. целое число, по умолчанию идентификатор текущего
            пользователя (Целое
            число, по умолчанию идентификатор текущего пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает 1 в случае, если пользователь установил у
            себя данное приложение, иначе 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.isAppUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.GetAsync(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase,System.Boolean)">
            <summary>
            Возвращает расширенную информацию о пользователях. Метод не требует авторизацию
            </summary>
            <param name="userIds">
            Идентификаторы пользователей, о которых необходимо
            получить информацию.
            </param>
            <param name="fields"> Поля профилей, которые необходимо возвратить. </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns> Список объектов с запрошенной информацией о пользователях. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.GetAsync(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase,System.Boolean)">
            <summary>
            Возвращает расширенную информацию о пользователях.
            </summary>
            <param name="screenNames">
            Короткие имена пользователей, о которых необходимо
            получить информацию.
            </param>
            <param name="fields"> Поля профилей, которые необходимо возвратить. </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns> Список объектов с запрошенной информацией о пользователях. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.GetSubscriptionsAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.Filters.GroupsFields,System.Boolean)">
            <summary>
            Возвращает список идентификаторов пользователей и групп, которые входят в
            список подписок пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, подписки которого необходимо
            получить
            </param>
            <param name="count"> Количество подписок, которые необходимо вернуть </param>
            <param name="offset">
            Смещение необходимое для выборки определенного
            подмножества подписок
            </param>
            <param name="fields">
            Список дополнительных полей для объектов user и group, которые необходимо
            вернуть.
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Пока возвращается только список групп.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.getSubscriptions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.GetFollowersAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase,System.Boolean)">
            <summary>
            Возвращает список идентификаторов пользователей, которые являются подписчиками
            пользователя.
            </summary>
            <param name="userId"> Идентификатор пользователя </param>
            <param name="count">
            Количество подписчиков, информацию о которых нужно
            получить
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного
            подмножества подписчиков
            </param>
            <param name="fields"> Список дополнительных полей, которые необходимо вернуть </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns> Список подписчиков </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.getFollowers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.ReportAsync(System.Int64,VkNet.Enums.SafetyEnums.ReportType,System.String)">
            <summary>
            Позволяет пожаловаться на пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, на которого осуществляется
            жалоба
            </param>
            <param name="type"> Тип жалобы </param>
            <param name="comment"> Комментарий к жалобе на пользователя </param>
            <returns> В случае успешной жалобы метод вернет true. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.report
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategoryAsync.GetNearbyAsync(VkNet.Model.RequestParams.UsersGetNearbyParams)">
            <summary>
            Индексирует текущее местоположение пользователя и возвращает список
            пользователей, которые находятся вблизи.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает список объектов user.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.getNearby
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IUtilsCategoryAsync">
            <summary>
            Асинхронные служебные методы.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.CheckLinkAsync(System.String,System.Boolean)">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на
            сайте ВКонтакте.
            </summary>
            <param name="url"> Внешняя ссылка, которую необходимо проверить. </param>
            <param name="skipAuthorization"> Без авторизации </param>
            <returns> Статус ссылки </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.checkLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.CheckLinkAsync(System.Uri,System.Boolean)">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на
            сайте ВКонтакте.
            </summary>
            <param name="url"> Внешняя ссылка, которую необходимо проверить. </param>
            <param name="skipAuthorization"> Без авторизации </param>
            <returns> Статус ссылки </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.checkLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.ResolveScreenNameAsync(System.String)">
            <summary>
            Определяет тип объекта (пользователь, сообщество, приложение) и его
            идентификатор по короткому имени ScreenName.
            </summary>
            <param name="screenName"> Короткое имя </param>
            <returns> Тип объекта </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.resolveScreenName
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.GetServerTimeAsync">
            <summary>
            Возвращает текущее время на сервере ВКонтакте в unixtime.
            </summary>
            <returns> Время на сервере ВКонтакте в unixtime </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.getServerTime
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.GetShortLinkAsync(System.Uri,System.Boolean)">
            <summary>
            Позволяет получить URL, сокращенный с помощью vk.cc.
            </summary>
            <returns> URL, сокращенный с помощью vk.cc </returns>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.DeleteFromLastShortenedAsync(System.String)">
            <summary>
            Удаляет сокращенную ссылку из списка пользователя.
            </summary>
            <param name="key"> сокращенная ссылка (часть URL после "vk.cc/"). </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.deleteFromLastShortened
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.GetLastShortenedLinksAsync(System.UInt64,System.UInt64)">
            <summary>
            Получает список сокращенных ссылок для текущего пользователя.
            </summary>
            <param name="count"> количество ссылок, которые необходимо получить. </param>
            <param name="offset"> сдвиг для получения определенного подмножества ссылок. </param>
            <returns>
            Возвращает количество ссылок в поле count (integer) и массив объектов items,
            описывающих ссылки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.getLastShortenedLinks
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategoryAsync.GetLinkStatsAsync(VkNet.Model.RequestParams.LinkStatsParams)">
            <summary>
            Возвращает статистику переходов по сокращенной ссылке.
            </summary>
            <param name="params"> Параметры запроса </param>
            <returns> </returns>
        </member>
        <member name="T:VkNet.Abstractions.IVideoCategoryAsync">
            <summary>
            Асинхронные методы для работы с видеофайлами.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetAsync(VkNet.Model.RequestParams.VideoGetParams)">
            <summary>
            Возвращает информацию о видеозаписях.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей с
            дополнительным полем comments, содержащим
            число комментариев  у видеозаписи.
            Если был задан параметр extended=1, возвращаются дополнительные поля:
            privacy_view — настройки приватности в формате настроек приватности; (приходит
            только для текущего пользователя)
            privacy_comment — настройки приватности в формате настроек приватности;
            (приходит только для текущего пользователя)
            can_comment — может ли текущий пользователь оставлять комментарии к ролику (1 —
            может, 0 — не может);
            can_repost — может ли текущий пользователь скопировать ролик с помощью функции
            «Рассказать друзьям» (1 — может, 0 —
            не может);
            likes — информация об отметках «Мне нравится»:
            user_likes — есть ли отметка «Мне нравится» от текущего пользователя;
            count — число отметок «Мне нравится»;
            repeat — зацикливание воспроизведения видеозаписи (1 — зацикливается, 0 — не
            зацикливается).
            Если в Вашем приложении используется  прямая авторизация, возвращается
            дополнительное поле files, содержащее ссылку
            на файл с видео (если ролик размещен на сервере ВКонтакте) или ссылку на
            внешний ресурс (если ролик встроен с
            какого-либо видеохостинга).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.EditAsync(VkNet.Model.RequestParams.VideoEditParams)">
            <summary>
            Редактирует данные видеозаписи.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.AddAsync(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Добавляет видеозапись в список пользователя.
            </summary>
            <param name="targetId">
            Идентификатор пользователя или сообщества, в которое нужно добавить видео.
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо
            указывать со знаком "-" — например,
            target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число (Целое число).
            </param>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число,
            обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.SaveAsync(VkNet.Model.RequestParams.VideoSaveParams)">
            <summary>
            Возвращает адрес сервера (необходимый для загрузки) и данные видеозаписи.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает объект, который имеет поля upload_url, video_id, title, description,
            owner_id.
            Метод может быть вызван не более 5000 раз в сутки для одного сервиса.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.DeleteAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Удаляет видеозапись со страницы пользователя.
            </summary>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="targetId">
            Идентификатор пользователя или сообщества, для которого нужно удалить
            видеозапись.
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо
            указывать со знаком "-" — например,
            target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.RestoreAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную видеозапись.
            </summary>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="ownerId">
            Идентификатор владельца видеозаписи (пользователь или сообщество). Обратите
            внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.SearchAsync(VkNet.Model.RequestParams.VideoSearchParams)">
            <summary>
            Возвращает список видеозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей.
            Если в Вашем приложении используется  прямая авторизация, возвращается
            дополнительное поле files, содержащее ссылку
            на файл с видео (если ролик размещен на сервере ВКонтакте) или ссылку на
            внешний ресурс (если ролик встроен с
            какого-либо видеохостинга).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetAlbumsAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список альбомов видеозаписей пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор владельца альбомов (пользователь или сообщество). По умолчанию —
            идентификатор
            текущего пользователя. целое число, по умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию
            идентификатор текущего пользователя).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества альбомов. По
            умолчанию — 0.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Количество альбомов, информацию о которых нужно вернуть. По умолчанию — не
            больше 50, максимум —
            100). положительное число, по умолчанию 50, максимальное значение 100
            (Положительное число, по умолчанию 50,
            максимальное значение 100).
            </param>
            <param name="extended">
            1 – позволяет получать поля count, photo_320, photo_160 и updated_time для
            каждого альбома. Если
            альбом пустой, то поля photo_320 и photo_160 возвращены не будут. По умолчанию
            – 0. флаг, может принимать значения
            1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="needSystem">
            1 — возвращать системные альбомы. флаг, может принимать значения 1 или 0, по
            умолчанию 0
            (Флаг, может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <returns>
            После успешного выполнения возвращает общее количество альбомов с
            видеозаписями, и массив объектов album, каждый из
            которых содержит следующие поля:
            id — идентификатор альбома;
            owner_id — идентификатор владельца альбома;
            title — название альбома.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.getAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.AddAlbumAsync(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Privacy})">
            <summary>
            Создает пустой альбом видеозаписей.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (если необходимо создать альбом в сообществе).
            положительное число
            (Положительное число).
            </param>
            <param name="title"> Название альбома. строка (Строка). </param>
            <param name="privacy">
            Уровень доступа к альбому в специальном формате.
            Приватность доступна для альбомов с видео в профиле пользователя. список строк,
            разделенных через запятую (Список
            строк, разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает  идентификатор созданного альбома
            (album_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.addAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.EditAlbumAsync(System.Int64,System.String,System.Nullable{System.Int64},VkNet.Enums.SafetyEnums.Privacy)">
            <summary>
            Редактирует название альбома видеозаписей.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (если нужно отредактировать альбом, принадлежащий
            сообществу).
            положительное число (Положительное число).
            </param>
            <param name="albumId">
            Идентификатор альбома. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="title">
            Новое название для альбома. строка, обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <param name="privacy">
            Уровень доступа к альбому в специальном формате.
            Приватность доступна для альбомов с видео в профиле пользователя. целое число
            (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.editAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.DeleteAlbumAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет альбом видеозаписей.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (если альбом, который необходимо удалить, принадлежит
            сообществу).
            положительное число (Положительное число).
            </param>
            <param name="albumId">
            Идентификатор альбома. положительное число
            (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.deleteAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.VideoGetCommentsParams)">
            <summary>
            Возвращает список комментариев к видеозаписи.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает общее количество комментариев и массив
            объектов comment, каждый из которых
            содержит следующие поля:
            id — идентификатор комментария;
            from_id — идентификатор автора комментария;
            date — дата добавления комментария в формате unixtime;
            text — текст комментария;
            likes — информация об отметках «Мне нравится» текущего комментария (если был
            задан параметр need_likes), объект с
            полями:
            count — число пользователей, которым понравился комментарий,
            user_likes — наличие отметки «Мне нравится» от текущего пользователя
            (1 — есть, 0 — нет),
            can_like — информация о том, может ли текущий пользователь поставить отметку
            «Мне нравится»
            (1 — может, 0 — не может).
            Если был передан параметр start_comment_id, будет также возвращено поле
            real_offset – итоговое смещение данного
            подмножества комментариев (оно может быть отрицательным, если был указан
            отрицательный offset).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.VideoCreateCommentParams)">
            <summary>
            Cоздает новый комментарий к видеозаписи.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.createComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.DeleteCommentAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет комментарий к видеозаписи.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            целое число, по
            умолчанию идентификатор текущего пользователя (Целое число, по умолчанию
            идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.RestoreCommentAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленный комментарий к видеозаписи.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор удаленного комментария. целое число, обязательный параметр (Целое
            число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c> (0, если комментарий с
            таким идентификатором не является
            удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.restoreComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.EditCommentAsync(System.Int64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к видеозаписи.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="message">
            Новый текст комментария (является обязательным, если не задан параметр
            attachments). строка
            (Строка).
            </param>
            <param name="attachments">
            Новый список объектов, приложенных к комментарию и разделённых символом ",".
            Поле attachments представляется в
            формате:
            &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id&gt;_&lt;
            media_id&gt;
            &lt;type&gt; — тип медиа-вложения:
            photo — фотография
            video — видеозапись
            audio — аудиозапись
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения
            &lt;media_id&gt; — идентификатор медиа-вложения.
            Например:
            photo100172_166443618,photo66748_265827614
            Параметр является обязательным, если не задан параметр message. список строк,
            разделенных через запятую (Список
            строк, разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.ReportAsync(System.Int64,VkNet.Enums.ReportReason,System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Позволяет пожаловаться на видеозапись.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит видеозапись.
            целое число,
            обязательный параметр (Целое число, обязательный параметр).
            </param>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Тип жалобы:
            0 – это спам
            1 – детская порнография
            2 – экстремизм
            3 – насилие
            4 – пропаганда наркотиков
            5 – материал для взрослых
            6 – оскорбление положительное число (Положительное число).
            </param>
            <param name="comment"> Комментарий для жалобы. строка (Строка). </param>
            <param name="searchQuery">
            Поисковой запрос, если видеозапись была найдена
            через поиск. строка (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.report
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.ReportCommentAsync(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на комментарий к видеозаписи.
            </summary>
            <param name="ownerId">
            Идентификатор владельца видеозаписи, к которой оставлен комментарий. целое
            число, обязательный
            параметр (Целое число, обязательный параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Тип жалобы:
            0 – это спам
            1 – детская порнография
            2 – экстремизм
            3 – насилие
            4 – пропаганда наркотиков
            5 – материал для взрослых
            6 – оскорбление положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.reportComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetAlbumByIdAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Позволяет получить информацию об альбоме с видео.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит альбом. целое
            число, по умолчанию
            идентификатор текущего пользователя (Целое число, по умолчанию идентификатор
            текущего пользователя).
            </param>
            <param name="albumId">
            Идентификатор альбома. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает объект, который содержит следующие поля:
            id — идентификатор альбома;
            owner_id — идентификатор владельца альбома;
            title — название альбома;
            count — число видеозаписей в альбоме;
            photo_320 — url обложки альбома с шириной 320px;
            photo_160 — url обложки альбома с шириной 160px;
            updated_time — время последнего обновления в формате unixtime.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.getAlbumById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.ReorderAlbumsAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет изменить порядок альбомов с видео.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит альбом.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="albumId">
            Идентификатор альбома, который нужно переместить. положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="before">
            Идентификатор альбома, перед которым нужно поместить текущий. положительное
            число (Положительное
            число).
            </param>
            <param name="after">
            Идентификатор альбома, после которого нужно поместить текущий. положительное
            число (Положительное
            число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.reorderAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.ReorderVideosAsync(VkNet.Model.RequestParams.VideoReorderVideosParams)">
            <summary>
            Позволяет переместить видеозапись в альбоме.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.reorderVideos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.AddToAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет добавить видеозапись в альбом.
            </summary>
            <param name="targetId">
            Идентификатор владельца альбома, в который нужно добавить видео.
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо
            указывать со знаком "-" — например,
            target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по умолчанию идентификатор текущего
            пользователя).
            </param>
            <param name="albumId">
            Идентификатор альбома, в который нужно добавить видео (0 соответствует  общему
            списку
            видеозаписей «без альбома»). целое число (Целое число).
            </param>
            <param name="albumIds">
            Идентификаторы альбомов, в которые нужно добавить видео. список целых чисел,
            разделенных
            запятыми (Список целых чисел, разделенных запятыми).
            </param>
            <param name="ownerId">
            Идентификатор владельца видеозаписи.
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо
            указывать со знаком "-" — например,
            owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, обязательный параметр
            (Целое число, обязательный параметр).
            </param>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.addToAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.RemoveFromAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Позволяет убрать видеозапись из альбома.
            </summary>
            <param name="targetId">
            Идентификатор владельца альбома. Обратите внимание, идентификатор сообщества в
            параметре
            target_id необходимо указывать со знаком "-" — например, target_id=-1
            соответствует идентификатору сообщества
            ВКонтакте API (club1)  целое число, по умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию
            идентификатор текущего пользователя).
            </param>
            <param name="albumId">
            Идентификатор альбома, из которого нужно убрать видео. целое число (Целое
            число).
            </param>
            <param name="albumIds">
            Идентификаторы альбомов, из которых нужно убрать видео. список целых чисел,
            разделенных запятыми
            (Список целых чисел, разделенных запятыми).
            </param>
            <param name="ownerId">
            Идентификатор владельца видеозаписи. Обратите внимание, идентификатор
            сообщества в параметре
            owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору сообщества
            ВКонтакте API (club1)  целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.removeFromAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetAlbumsByVideoAsync(System.Nullable{System.Int64},System.Int64,System.Int64,System.Nullable{System.Boolean})">
            <summary>
            Возвращает список альбомов, в которых находится видеозапись.
            </summary>
            <param name="targetId">
            Идентификатор пользователя или сообщества, для которого нужно получить список
            альбомов, содержащих видеозапись.
            Обратите внимание, идентификатор сообщества в параметре target_id необходимо
            указывать со знаком "-" — например,
            target_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по умолчанию идентификатор текущего
            пользователя).
            </param>
            <param name="ownerId">
            Идентификатор владельца видеозаписи.
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо
            указывать со знаком "-" — например,
            owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, обязательный параметр
            (Целое число, обязательный параметр).
            </param>
            <param name="videoId">
            Идентификатор видеозаписи. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="extended">
            1 — возвращать расширенную информацию об альбомах. флаг, может принимать
            значения 1 или 0, по
            умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <returns>
            Возвращает список идентификаторов альбомов, в которых видеозапись находится у
            пользователя или сообщества с
            идентификатором target_id. Если был передан параметр extended=1, возвращается
            список объектов альбомов с
            дополнительной информацией о каждом из них.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.getAlbumsByVideo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetCatalogAsync(VkNet.Model.RequestParams.VideoGetCatalogParams)">
            <summary>
            Позволяет получить представление каталога видео.
            </summary>
            <returns>
            После успешного выполнения возвращает массив объектов — блоков видеокаталога.
            Каждый из объектов содержит массив
            объектов — элементов блока и дополнительную информацию для отображения блока.
            Данные для отображения блока видеокаталога
            name заголовок блока.
            строка id идентификатор блока. Возвращается строка для предопределенных блоков.
            Для других возвращается число.
            Предопределенные блоки:
            my — видеозаписи пользователя;
            feed — записи сообществ и друзей, содержащие видеозаписи, а также новые
            видеозаписи, добавленные ими;
            ugc — популярные видеозаписи;
            series — сериалы и телешоу.
            строка или число can_hide наличие возможности скрыть блок.
            флаг, может принимать значения 1 или 0 type тип блока. Может принимать
            значения:
            channel — видеозаписи сообщества;
            category — подборки видеозаписей.
            строка next параметр для получения следующей страницы результатов. Необходимо
            передать его значение в from в
            следующем вызове, чтобы получить содержимое каталога, следующее за полученным в
            текущем вызове.
            строка
            Элемент блока видеокаталога
            id идентификатор элемента.
            положительное число owner_id идентификатор владельца элемента.
            int (числовое значение) title заголовок.
            строка type тип элемента. Может принимать значения:
            video — видеоролик;
            album — альбом.
            строка
            type=video. Дополнительные поля для элемента-видеоролика
            duration длительность в секундах.
            положительное число description описание.
            строка date дата добавления.
            положительное число views число просмотров.
            положительное число comments число комментариев.
            положительное число photo_130 URL изображения-обложки видео с размером
            130x98px.
            строка photo_320 URL изображения-обложки видео с размером 320x240px.
            строка photo_640 URL изображения-обложки видео с размером 640x480px (если
            размер есть).
            строка can_add наличие возможности добавить видео в свой список.
            флаг, может принимать значения 1 или 0 can_edit наличие возможности
            редактировать видео.
            флаг, может принимать значения 1 или 0
            type=album. Дополнительные поля для элемента-альбома
            count число видеозаписей в альбоме.
            положительное число photo_320 URL изображения-обложки альбома с размером
            544x300px.
            строка photo_160 URL изображения-обложки альбома с размером 272x150px.
            строка updated_time время последнего обновления альбома.
            положительное число
            Если был передан параметр extended=1, возвращаются дополнительные объекты
            profiles и groups, содержащие информацию
            о пользователях и сообществах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.getCatalog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.GetCatalogSectionAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Позволяет получить отдельный блок видеокаталога.
            </summary>
            <param name="sectionId">
            Значение id, полученное с блоком в методе video.getCatalog. строка,
            обязательный параметр
            (Строка, обязательный параметр).
            </param>
            <param name="from">
            Значение next, полученное с блоком в методе video.getCatalog строка,
            обязательный параметр (Строка,
            обязательный параметр).
            </param>
            <param name="count">
            Число элементов блока, которое нужно вернуть. положительное число, по умолчанию
            10, максимальное
            значение 16 (Положительное число, по умолчанию 10, максимальное значение 16).
            </param>
            <param name="extended">
            1 — возвращать дополнительную информацию о пользователях и сообществах в полях
            profiles и
            groups. флаг, может принимать значения 1 или 0, по умолчанию 0 (Флаг, может
            принимать значения 1 или 0, по
            умолчанию 0).
            </param>
            <returns>
            После успешного выполнения возвращает массив элементов блока видеокаталога и
            поле next для текущего блока.
            Элемент блока видеокаталога
            id идентификатор элемента.
            положительное число owner_id идентификатор владельца элемента.
            int (числовое значение) title заголовок.
            строка type тип элемента. Может принимать значения:
            video — видеоролик;
            album — альбом.
            строка
            type=video. Дополнительные поля для элемента-видеоролика
            duration длительность в секундах.
            положительное число description описание.
            строка date дата добавления.
            положительное число views число просмотров.
            положительное число comments число комментариев.
            положительное число photo_130 URL изображения-обложки видео с размером
            130x98px.
            строка photo_320 URL изображения-обложки видео с размером 320x240px.
            строка photo_640 URL изображения-обложки видео с размером 640x480px (если
            размер есть).
            строка can_add наличие возможности добавить видео в свой список.
            флаг, может принимать значения 1 или 0 can_edit наличие возможности
            редактировать видео.
            флаг, может принимать значения 1 или 0
            type=album. Дополнительные поля для элемента-альбома
            count число видеозаписей в альбоме.
            положительное число photo_320 URL изображения-обложки альбома с размером
            544x300px.
            строка photo_160 URL изображения-обложки альбома с размером 272x150px.
            строка updated_time время последнего обновления альбома.
            положительное число
            Если был передан параметр extended=1, возвращаются дополнительные объекты
            profiles и groups, содержащие информацию
            о пользователях и сообществах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.getCatalogSection
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategoryAsync.HideCatalogSectionAsync(System.Int64)">
            <summary>
            Скрывает для пользователя раздел видеокаталога.
            </summary>
            <param name="sectionId">
            Значение id, полученное с блоком, который необходимо скрыть, в методе
            video.getCatalog
            обязательный параметр, целое число (Обязательный параметр, целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/video.hideCatalogSection
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IWallCategoryAsync">
            <summary>
            Асинхронные методы для работы со стеной пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.GetAsync(VkNet.Model.RequestParams.WallGetParams,System.Boolean)">
            <summary>
            Возвращает список записей со стены пользователя или сообщества.
            </summary>
            <param name="params"> Входные параметры. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            В случае успеха возвращается запрошенный список записей со стены.
            </returns>
            <exception cref="T:System.ArgumentException">
            OwnerID must be negative in case
            filter equal to Suggests;ownerId
            </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.WallGetCommentsParams,System.Boolean)">
            <summary>
            Возвращает список комментариев к записи на стене.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов комментариев.
            Если был задан параметр need_likes=1, у объектов комментариев возвращается
            дополнительное поле likes:
            count — число пользователей, которым понравился комментарий;
            user_likes — наличие отметки «Мне нравится» от текущего пользователя
            (1 — есть, 0 — нет);
            can_like — информация о том, может ли текущий пользователь поставить отметку
            «Мне нравится»
            (1 — может, 0 — не может).
            Если был передан параметр start_comment_id, будет также возвращено поле
            real_offset – итоговое смещение данного
            подмножества комментариев (оно может быть отрицательным, если был указан
            отрицательный offset).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Int64},VkNet.Enums.Filters.ProfileFields,System.Boolean)">
            <summary>
            Возвращает список записей со стен пользователей или сообществ по их
            идентификаторам.
            </summary>
            <param name="posts">
            Перечисленные через запятую идентификаторы, которые представляют собой идущие
            через знак подчеркивания id
            владельцев стен и id самих записей на стене.
            Пример значения posts:
            93388_21539,93388_20904,-1_340364 список строк, разделенных через запятую,
            обязательный параметр (Список строк,
            разделенных через запятую, обязательный параметр).
            </param>
            <param name="extended">
            1 - возвращает объекты пользователей и групп, необходимые для отображения
            записей. флаг, может
            принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="copyHistoryDepth">
            Определяет размер массива copy_history, возвращаемого в ответе, если запись
            является репостом записи с другой
            стены.
            Например, copy_history_depth=1 — copy_history будет содержать один элемент с
            информацией о записи, прямым репостом
            которой является текущая.
            copy_history_depth=2 — copy_history будет содержать два элемента, добавляется
            информация о записи, репостом которой
            является первый элемент, и так далее (при условии, что иерархия репостов
            требуемой глубины для текущей записи
            существует). целое число, по умолчанию 2 (Целое число, по умолчанию 2).
            </param>
            <param name="fields">
            Список дополнительных полей для профилей и  групп, которые необходимо вернуть.
            См. описание полей объекта user и
            описание полей объекта group.
            Обратите внимание, этот параметр учитывается только при extended=1. список
            строк, разделенных через запятую (Список
            строк, разделенных через запятую).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов записей со стены.
            Если был задан параметр extended=1, ответ содержит три отдельных списка:
            items — содержит объекты записей со стены;
            profiles — содержит объекты пользователей с дополнительными полями sex, photo,
            photo_medium_rec и online;
            groups — содержит объекты сообществ.
            Если запись является репостом записи с другой стены, в ответе дополнительно
            возвращается массив copy_history
            записей со стены, репостом которых является текущая.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.PostAsync(VkNet.Model.RequestParams.WallPostParams)">
            <summary>
            Публикует новую запись на своей или чужой стене.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной записи (post_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.post
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.RepostAsync(System.String,System.String,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Копирует объект на стену пользователя или сообщества.
            </summary>
            <param name="object">
            Строковый идентификатор объекта, который необходимо разместить на стене,
            например, wall66748_3675
            или wall-1_340364. строка, обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <param name="message">
            Сопроводительный текст, который будет добавлен к записи с объектом. строка
            (Строка).
            </param>
            <param name="groupId">
            Идентификатор сообщества, на стене которого будет размещена запись с объектом.
            Если не указан,
            запись будет размещена на стене текущего пользователя. положительное число
            (Положительное число).
            </param>
            <param name="markAsAds"> Строка (Строка). </param>
            <returns>
            После успешного выполнения возвращает объект со следующими полями:
            success
            post_id — идентификатор созданной записи;
            reposts_count — количество репостов объекта с учетом осуществленного;
            likes_count — число отметок «Мне нравится» у объекта.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.repost
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.EditAsync(VkNet.Model.RequestParams.WallEditParams)">
            <summary>
            Редактирует запись на стене.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.DeleteAsync(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Удаляет запись со стены.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится запись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число
            (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.RestoreAsync(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную запись на стене пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находилась
            удаленная запись.
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо
            указывать со знаком "-" — например,
            owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по умолчанию идентификатор текущего
            пользователя).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число
            (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.WallCreateCommentParams)">
            <summary>
            Добавляет комментарий к записи на стене.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает идентификатор добавленного комментария
            (comment_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.createComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.DeleteCommentAsync(System.Nullable{System.Int64},System.Int64)">
            <summary>
            Удаляет комментарий текущего пользователя к записи на своей или чужой стене.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя, на чьей стене находится комментарий к записи.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.RestoreCommentAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает комментарий текущего пользователя к записи на своей или чужой
            стене.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится
            комментарий к записи.
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо
            указывать со знаком "-" — например,
            owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по умолчанию идентификатор текущего
            пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария на стене. целое число, обязательный параметр (Целое
            число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.restoreComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.SearchAsync(VkNet.Model.RequestParams.WallSearchParams,System.Boolean)">
            <summary>
            Метод, позволяющий осуществлять поиск по стенам пользователей.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов записей на стене.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.GetRepostsAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Позволяет получать список репостов заданной записи.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится запись.
            Если параметр не
            задан, то он считается равным идентификатору текущего пользователя. Обратите
            внимание, идентификатор сообщества в
            параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору
            сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по
            умолчанию идентификатор текущего пользователя).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число
            (Положительное число).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества записей.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество записей, которое необходимо получить. положительное число, по
            умолчанию 20, максимальное
            значение 1000 (Положительное число, по умолчанию 20, максимальное значение
            1000).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля:
            items — содержит массив записей-репостов;
            profiles — содержит объекты пользователей с дополнительными полями sex, online,
            photo, photo_medium_rec,
            screen_name;
            groups — содержит информацию о сообществах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.getReposts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.PinAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Закрепляет запись на стене (запись будет отображаться выше остальных).
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится запись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.pin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.UnpinAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Отменяет закрепление записи на стене.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится запись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.unpin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.EditCommentAsync(System.Int64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Редактирует комментарий на стене пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор владельца стены. целое число, по умолчанию идентификатор текущего
            пользователя
            (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария, который необходимо отредактировать. положительное
            число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="message"> Новый текст комментария. строка (Строка). </param>
            <param name="attachments">
            Новые вложения к комментарию. список строк, разделенных через запятую (Список
            строк,
            разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.ReportPostAsync(System.Int64,System.Int64,System.Nullable{VkNet.Enums.ReportReason})">
            <summary>
            Позволяет пожаловаться на запись.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит запись. целое
            число, обязательный
            параметр (Целое число, обязательный параметр).
            </param>
            <param name="postId">
            Идентификатор записи. положительное число, обязательный параметр (Положительное
            число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы:
            0 — спам;
            1 — детская порнография;
            2 — экстремизм;
            3 — насилие;
            4 — пропаганда наркотиков;
            5 — материал для взрослых;
            6 — оскорбление.
            положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.reportPost
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.ReportCommentAsync(System.Int64,System.Int64,System.Nullable{VkNet.Enums.ReportReason})">
            <summary>
            Позволяет пожаловаться на комментарий к записи.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит комментарий.
            целое число,
            обязательный параметр (Целое число, обязательный параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы:
            0 — спам;
            1 — детская порнография;
            2 — экстремизм;
            3 — насилие;
            4 — пропаганда наркотиков;
            5 — материал для взрослых;
            6 — оскорбление.
            положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.reportComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.EditAdsStealthAsync(VkNet.Model.RequestParams.EditAdsStealthParams)">
            <summary>
            Позволяет отредактировать скрытую запись.
            </summary>
            <param name="params"> Параметры запроса </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.editAdsStealth
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.PostAdsStealthAsync(VkNet.Model.RequestParams.PostAdsStealthParams)">
            <summary>
            Позволяет создать скрытую запись,
            которая не попадает на стену сообщества и в дальнейшем может быть использована
            для создания рекламного объявления типа "Запись в сообществе".
            </summary>
            <param name="params"> Параметры запроса </param>
            <returns>
            Идентификатор созданной записи
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.postAdsStealth
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.OpenCommentsAsync(System.Int64,System.Int64)">
            <summary>
            Включает комментирование записи
            Работает только с конкретными записями, комментирование которых было
            выключено с помощью wall.closeComments
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится запись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.openComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategoryAsync.CloseCommentsAsync(System.Int64,System.Int64)">
            <summary>
            Выключает комментирование записи
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, на стене которого находится запись.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <param name="postId">
            Идентификатор записи на стене. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.closeComments
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IWidgetsCategoryAsync">
            <summary>
            Widgets Методы для работы с виджетами на внешних сайтах.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IWidgetsCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.GetCommentsParams)">
            <summary>
            Получает список комментариев к странице, оставленных через Виджет комментариев.
            </summary>
            <param name="getCommentsParams">
            Входные параметры запроса.
            </param>
            <returns>
            В случае успеха возвращает объект со следующими полями:
            count — общее количество комментариев первого уровня к странице (без учета
            ограничений из входного параметра
            count).
            posts — список комментариев первого уровня. Каждый элемент списка имеет
            структуру, схожую с объектами post из
            результатов метода wall.get. Помимо этого:
            В случае, если среди необходимых полей было указано replies, в поле
            comments.replies будет содержаться список
            комментариев второго уровня. Каждый элемент этого списка имеет структуру,
            схожую с объектами comment из результатов
            метода wall.getComments.
            В случае, если были указаны любые другие необходимые поля анкет, в каждом
            элементе post и comment будет поле user,
            содержащее соответствующую информацию об авторе комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/widgets.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWidgetsCategoryAsync.GetPagesAsync(System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Получает список страниц приложения/сайта, на которых установлен Виджет
            комментариев или «Мне нравится».
            </summary>
            <param name="widgetApiId">
            Идентификатор приложения/сайта, с которым инициализируются виджеты. целое число
            </param>
            <param name="order">
            Тип сортировки страниц. Возможные значения: date, comments, likes,
            friend_likes. строка, по умолчанию friend_likes
            </param>
            <param name="period">
            Период выборки. Возможные значения: day, week, month, alltime. строка, по
            умолчанию week
            </param>
            <param name="offset">
            Смещение необходимое для выборки определенного подмножества комментариев. По
            умолчанию 0. положительное число, по
            умолчанию 0
            </param>
            <param name="count">
            Количество возвращаемых записей. положительное число, по умолчанию 10,
            минимальное значение 10, максимальное
            значение 200
            </param>
            <returns>
            В случае успеха возвращает объект со следующими полями:
            count — общее количество страниц (без учета ограничений входного параметра
            count)
            pages — список объектов-страниц
            Каждый объект, описывающий страницу, имеет следующие поля:
            id — идентификатор страницы в системе;
            title — заголовок страницы (берется из мета-тегов на странице или задается
            параметром pageTitle при инициализации)
            description — краткое описание страницы (берется из мета-тегов на странице или
            задается параметром pageDescription
            при инициализации);
            photo — объект, содержащий фотографию-миниатюру страницы (берется из мета-тегов
            на странице или задается параметром
            pageImage при инициализации)
            url — абсолютный адрес страницы;
            likes — объект, содержащий поле count — количество отметок «Мне нравится» к
            странице. Для получения списка
            пользователей, отметивших страницу можно использовать метод likes.getList с
            параметром type равным site_page;
            comments — объект, содержащий поле count — количество комментариев к странице
            внутри виджета. Для получения списка
            комментариев можно использовать метод widgets.getComments;
            date — дата первого обращения к виджетам на странице
            page_id — внутренний идентификатор страницы в приложении/на сайте (в случае,
            если при инициализации виджетов
            использовался параметр page_id);
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/widgets.getPages
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAccountCategory">
            <summary>
            Методы этого класса позволяют производить действия с аккаунтом пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetCounters(VkNet.Enums.Filters.CountersFilter)">
            <summary>
            Возвращает ненулевые значения счетчиков пользователя.
            </summary>
            <param name="filter">
            Счетчики, информацию о которых нужно вернуть (friends, messages, photos,
            videos, notes, gifts, events, groups,
            notifications, sdk, app_requests).
            sdk - возвращает количество запросов в приложениях.
            app_requests - возвращает количество непрочитанных запросов в приложениях.
            список слов, разделенных через запятую
            (Список слов, разделенных через запятую).
            </param>
            <returns>
            Возвращает объект, который может содержать поля friends, messages, photos,
            videos, notes, gifts, events, groups,
            notifications, sdk, app_requests.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getCounters
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SetNameInMenu(System.String,System.Nullable{System.Int64})">
            <summary>
            Устанавливает короткое название приложения (до 17 символов), которое выводится
            пользователю в левом меню.
            </summary>
            <param name="userId">
            Идентификатор пользователя. положительное число, по умолчанию идентификатор
            текущего пользователя,
            обязательный параметр (Положительное число, по умолчанию идентификатор текущего
            пользователя, обязательный
            параметр).
            </param>
            <param name="name"> Короткое название приложения. строка (Строка). </param>
            <returns>
            Возвращает 1 в случае успешной установки короткого названия.
            Если пользователь не установил приложение в левое меню, метод вернет ошибку 148
            (Access to the menu of the user
            denied). Избежать этой ошибки можно с помощью метода account.getAppPermissions.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setNameInMenu
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SetOnline(System.Nullable{System.Boolean})">
            <summary>
            Помечает текущего пользователя как online на 15 минут.
            </summary>
            <param name="voip">
            Возможны ли видеозвонки для данного устройства флаг, может принимать значения 1
            или 0 (Флаг, может
            принимать значения 1 или 0).
            </param>
            <returns>
            В случае успешного выполнения метода будет возвращён код 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SetOffline">
            <summary>
            Помечает текущего пользователя как offline.
            </summary>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setOffline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.RegisterDevice(VkNet.Model.RequestParams.AccountRegisterDeviceParams)">
            <summary>
            Подписывает устройство на базе iOS, Android или Windows Phone на получение
            Push-уведомлений.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает 1 в случае успешного выполнения метода.
            На iOS и Windows Phone push-уведомления будут отображены без какой либо
            обработки.
            На Android будут приходить события в следующем формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.registerDevice
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.UnregisterDevice(System.String,System.Nullable{System.Boolean})">
            <summary>
            Отписывает устройство от Push уведомлений.
            </summary>
            <param name="deviceId">
            Уникальный идентификатор устройства. строка, доступен начиная с версии 5.31
            (Строка, доступен
            начиная с версии 5.31).
            </param>
            <param name="sandbox">
            Флаг предназначен для iOS устройств. 1 — отписать устройство, использующего
            sandbox сервер для
            отправки push-уведомлений, 0 — отписать устройство, не использующее sandbox
            сервер флаг, может принимать значения 1
            или 0, по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <returns>
            Возвращает <c> true </c> в случае успешного выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.unregisterDevice
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SetSilenceMode(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Отключает push-уведомления на заданный промежуток времени.
            </summary>
            <param name="deviceId"> Идентификатор устройства для сервиса push уведомлений. </param>
            <param name="time">
            Время в секундах на которое требуется отключить уведомления. (-1 - отключить
            навсегда)
            </param>
            <param name="peerId">
            Идентификатор чата, для которого следует отключить
            уведомления.
            </param>
            <param name="sound">
            1 - включить звук в данном диалоге, 0 - отключить звук (параметр работает
            только если указан в
            peer_id передан идентификатор групповой беседы или пользователя)
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setSilenceMode
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetPushSettings(System.String)">
            <summary>
            Позволяет получать настройки Push уведомлений.
            </summary>
            <param name="deviceId">
            Уникальный идентификатор устройства. строка, доступен начиная с версии 5.31
            (Строка, доступен
            начиная с версии 5.31).
            </param>
            <returns>
            Возвращает объект, содержащий поля:
            disabled — отключены ли уведомления.
            disabled_until — unixtime-значение времени, до которого временно отключены
            уведомления.
            conversations — список, содержащий настройки конкретных диалогов, и их
            количество первым элементом.
            settings — объект с настройками Push-уведомлений в специальном формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getPushSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SetPushSettings(System.String,VkNet.Model.PushSettings,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Изменяет настройку Push-уведомлений.
            </summary>
            <param name="deviceId">
            Уникальный идентификатор устройства. строка, обязательный параметр (Строка,
            обязательный
            параметр).
            </param>
            <param name="settings">
            Сериализованный JSON-объект, описывающий настройки уведомлений в специальном
            формате данные в
            формате JSON (Данные в формате JSON).
            </param>
            <param name="key"> Ключ уведомления. строка (Строка). </param>
            <param name="value">
            Новое значение уведомления в специальном формате. список слов, разделенных
            через запятую (Список
            слов, разделенных через запятую).
            </param>
            <returns>
            Возвращает 1 в случае успешного выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setPushSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetAppPermissions(System.Int64)">
            <summary>
            Получает настройки текущего пользователя в данном приложении.
            </summary>
            <param name="userId">
            Идентификатор пользователя, информацию о настройках которого необходимо
            получить. По умолчанию —
            текущий пользователь. положительное число, по умолчанию идентификатор текущего
            пользователя, обязательный параметр
            (Положительное число, по умолчанию идентификатор текущего пользователя,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает битовую маску настроек текущего
            пользователя в данном приложении.
            Пример Если Вы хотите получить права на Доступ к друзьям и Доступ к статусам
            пользователя, то Ваша битовая маска
            будет равна: 2   1024 = 1026.
            Если, имея битовую маску 1026, Вы хотите проверить, имеет ли она доступ к
            друзьям — Вы можете сделать 1026 &amp; 2.
            Например alert(1026 &amp; 2);
            см. Список возможных настроек прав доступа.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getAppPermissions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetActiveOffers(System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает список активных рекламных предложений (офферов), выполнив которые
            пользователь сможет получить
            соответствующее количество голосов на свой счёт внутри приложения.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества офферов.
            положительное число, по
            умолчанию 0 (Положительное число, по умолчанию 0).
            </param>
            <param name="count">
            Количество офферов, которое необходимо получить положительное число, по
            умолчанию 100, максимальное
            значение 100 (Положительное число, по умолчанию 100, максимальное значение
            100).
            </param>
            <returns>
            Возвращает массив, состоящий из общего количества старгетированных на текущего
            пользователя специальных предложений
            (первый элемент), и списка объектов с информацией о предложениях.
            В случае, если на пользователя не старгетировано ни одного специального
            предложения, массив будет содержать элемент
            0 (количество специальных предложений).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getActiveOffers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.BanUser(System.Int64)">
            <summary>
            Добавляет пользователя в черный список.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно добавить в черный список.
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успеха метод вернет <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.banUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.UnbanUser(System.Int64)">
            <summary>
            Убирает пользователя из черного списка.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно убрать из черного списка.
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успеха метод вернет <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.unbanUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetBanned(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список пользователей, находящихся в черном списке.
            </summary>
            <param name="offset">
            Смещение необходимое для выборки определенного подмножества черного списка.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество записей, которое необходимо вернуть. положительное число, по
            умолчанию 20, максимальное
            значение 200 (Положительное число, по умолчанию 20, максимальное значение 200).
            </param>
            <returns>
            Возвращает набор объектов пользователей, находящихся в черном списке.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetInfo(VkNet.Enums.Filters.AccountFields)">
            <summary>
            Возвращает информацию о текущем аккаунте.
            </summary>
            <param name="fields">
            Список полей, которые необходимо вернуть. Возможные значения: (country,
            http_required,
            own_posts_default, no_wall_replies, intro, lang, По умолчанию будут возвращены
            все поля. список слов, разделенных
            через запятую (Список слов, разделенных через запятую).
            </param>
            <returns>
            Метод возвращает объект, содержащий следующие поля:
            country – строковой код страны, определенный по IP адресу, с которого сделан
            запрос;
            https_required – 1 - пользователь установил на сайте настройку "Всегда
            использовать безопасное соединение"; 0 -
            безопасное соединение не требуется;
            own_posts_default – 1 - на стене пользователя по-умолчанию должны отображаться
            только собственные записи.
            Соответствует настройке на сайте "Показывать только мои записи", 0 - на стене
            пользователя должны отображаться все
            записи;
            no_wall_replies – 1 - пользователь отключил комментирование записей на стене, 0
            - комментирование записей
            разрешено;
            intro – битовая маска отвечающая за прохождение обучения использованию
            приложения;
            lang – числовой идентификатор текущего языка пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SetInfo(System.String,System.String)">
            <summary>
            Позволяет редактировать информацию о текущем аккаунте.
            </summary>
            <param name="name"> Имя настройки. </param>
            <param name="value"> Значение настройки. </param>
            <returns>
            В результате успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.setInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.ChangePassword(System.String,System.String,System.String,System.String)">
            <summary>
            Позволяет сменить пароль пользователя после успешного восстановления доступа к
            аккаунту через СМС, используя метод
            auth.restore.
            </summary>
            <param name="restoreSid">
            Идентификатор сессии, полученный при восстановлении доступа используя метод
            auth.restore. (В
            случае если пароль меняется сразу после восстановления доступа) строка
            (Строка).
            </param>
            <param name="changePasswordHash">
            Хэш, полученный при успешной OAuth авторизации по коду полученному по СМС (В
            случае
            если пароль меняется сразу после восстановления доступа) строка (Строка).
            </param>
            <param name="oldPassword"> Текущий пароль пользователя. строка (Строка). </param>
            <param name="newPassword">
            Новый пароль, который будет установлен в качестве текущего. строка, минимальная
            длина 6,
            обязательный параметр (Строка, минимальная длина 6, обязательный параметр).
            </param>
            <returns>
            В результате выполнения этого метода будет возвращен объект с полем token,
            содержащим новый токен, и полем secret в
            случае, если токен был nohttps.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.changePassword
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.GetProfileInfo">
            <summary>
            Возвращает информацию о текущем профиле.
            </summary>
            <returns> Информация о текущем профиле в виде Model.User </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.getProfileInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SaveProfileInfo(System.Int32)">
            <summary>
            Редактирует информацию текущего профиля.
            </summary>
            <param name="cancelRequestId">
            Идентификатор заявки на смену имени, которую
            необходимо отменить.
            </param>
            <returns> Результат отмены заявки. </returns>
            <remarks>
            Метод вынесен как отдельный, потому что если в запросе передан параметр
            <paramref name="cancelRequestId" />,
            все остальные параметры игнорируются.
            </remarks>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.saveProfileInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAccountCategory.SaveProfileInfo(VkNet.Model.ChangeNameRequest@,VkNet.Model.RequestParams.AccountSaveProfileInfoParams)">
            <summary>
            Редактирует информацию текущего профиля.
            </summary>
            <param name="changeNameRequest">
            Если в параметрах передавалось имя или фамилия пользователя,
            в этом параметре будет возвращен объект типа ChangeNameRequest
            </param>
            <param name="params"> The parameters. </param>
            <returns>
            Результат отмены заявки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/account.saveProfileInfo
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAdsCategory">
            <summary>
            Методы этого класса позволяют производить действия с рекламными кабинетам
            пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.AddOfficeUsers(System.Int64,System.String)">
            <summary>
            Добавляет администраторов и/или наблюдателей в рекламный кабинет.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих добавляемых администраторов. Описание объектов user_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив значений - ответов на каждый запрос в массиве data. Соответствующее значение в выходном массиве равно true, если администратор успешно добавлен, и false в другом случае.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.addOfficeUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CheckLink(System.Int64,VkNet.Enums.SafetyEnums.AdsLinkType,System.String,System.Nullable{System.Int64})">
            <summary>
            Проверяет ссылку на рекламируемый объект.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "linkType">
            Вид рекламируемого объекта:
            community — сообщество;
            post — запись в сообществе;
            application — приложение ВКонтакте;
            video — видеозапись;
            site — внешний сайт.
            обязательный параметр, строка
            </param>
            <param name = "linkUrl">
            Ссылка на рекламируемый объект. обязательный параметр, строка
            </param>
            <param name = "campaignId">
            Id кампании, в которой будет создаваться объявление. целое число
            </param>
            <returns>
            Возвращается структура со следующими полями:
            status — статус ссылки:
            allowed — ссылку допустимо использовать в рекламных объявлениях;
            disallowed — ссылку недопустимо использовать для указанного вида рекламируемого объекта;
            in_progress — ссылка проверяется, необходимо немного подождать.
            description (если status равен disallowed, необязательное поле) — описание причины недопустимости использования ссылки.
            redirect_url (если конечная ссылка отличается от исходной и если status равен allowed) — конечная ссылка.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.checkLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CreateAds(System.Int64,System.String)">
            <summary>
            Создает рекламные объявления.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих создаваемые объявления. Описание объектов ad_specification см. ниже.
            Пример значения data: [{
            "campaign_id": 123456,
            "ad_format": 1,
            "cost_type": 0,
            "cpc": 2.00,
            "category1_id" : 5,
            "title": "Test Title",
            "link_url" : "https://mysite.com",
            "name": "My ad"
            }] обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив объектов - ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве имеет свойство id, соответствующее id созданного объявления (или 0 в случае неудачи), а также, возможно, поля error_code и error_desc, описывающие ошибку, при ее возникновении. Наличие одновременно ненулевого id и error_code говорит о том, что объявление было создано, однако, возможно, не все параметры установлены (например, объявление не запущено).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CreateCampaigns(System.Int64,System.String)">
            <summary>
            Создает рекламные кампании.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих создаваемые кампании. Описание объектов campaign_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на запросы в массиве data. Соответствующий объект в выходном массиве содержит id созданной кампании (ноль в случае неудачи), и поля error_code и error_desc в случае возникновения ошибки. Ненулевой id и наличие error_code 602 говорит о том, что кампания создана, но, возможно, некоторые поля не были ей присвоены по причине их некорректности.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CreateClients(System.Int64,System.String)">
            <summary>
            Создаёт клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Id рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих создаваемые кампании. Описание объектов client_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на запросы в массиве data. Соответствующий объект в выходном массиве содержит id созданного клиента (ноль в случае неудачи), и поля error_code и error_desc в случае возникновения ошибки. Ненулевой id и наличие error_code 602 говорит о том, что клиент создан, но, возможно, некоторые поля не были ему присвоены по причине их некорректности.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CreateLookalikeRequest(System.Int64,System.String,System.Nullable{System.Int64},System.Object)">
            <summary>
            Создаёт запрос на поиск похожей аудитории.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "sourceType">
            Тип источника исходной аудитории. На данный момент может принимать единственное значение retargeting_group. строка, обязательный параметр
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            идентификатор клиента, для которого будет создаваться аудитория. целое число
            </param>
            <param name = "retargetingGroupId">
            Только для источника типа retargeting_group: идентификатор аудитории ретаргетинга.
            </param>
            <returns>
            Поле request_id, в котором указан идентификатор созданного запроса на поиск похожей аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createLookalikeRequest
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CreateTargetGroup(VkNet.Model.RequestParams.Ads.CreateTargetGroupParams)">
            <summary>
            Создает аудиторию для ретаргетинга рекламных объявлений на пользователей, которые посетили сайт рекламодателя (просмотрели информации о товаре, зарегистрировались и т.д.).
            </summary>
            <param name = "createTargetGroupParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект со следующими полями:
            id — идентификатор аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.CreateTargetPixel(System.Int64,System.String,System.String,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Создаёт пиксель ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "name">
            Название пикселя — строка до 64 символов. обязательный параметр, строка
            </param>
            <param name = "domain">
            Домен сайта, на котором будет размещен пиксель. строка
            </param>
            <param name = "categoryId">
            Идентификатор категории сайта, на котором будет размещен пиксель. Для получения списка возможных идентификаторов следует использовать метод ads.getSuggestions (раздел interest_categories_v2). обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого будет создаваться пиксель. целое число
            </param>
            <returns>
            Возвращает объект со следующими полями:
            id — идентификатор пикселя
            pixel — код для размещения на сайте рекламодателя
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.createTargetPixel
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.DeleteAds(System.Int64,System.String)">
            <summary>
            Архивирует рекламные объявления.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий идентификаторы объявлений. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос. Каждый ответ является либо 0, что означает успешное удаление, либо код ошибки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.DeleteCampaigns(System.Int64,System.String)">
            <summary>
            Архивирует рекламные кампании.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий id удаляемых кампаний. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос. Каждый ответ является либо 0, что означает успешное удаление, либо код ошибки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.DeleteClients(System.Int64,System.String)">
            <summary>
            Архивирует клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий id удаляемых клиентов. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос. Каждый ответ является либо 0, что означает успешное удаление, либо код ошибки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.DeleteTargetGroup(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет аудиторию ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор аудитории. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого будет удаляться аудитория. целое число
            </param>
            <returns>
            В случае успеха метод возвратит 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.DeleteTargetPixel(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет пиксель ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetPixelId">
            Идентификатор пикселя. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого будет удаляться пиксель. целое число
            </param>
            <returns>
            В случае успеха метод возвратит 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.deleteTargetPixel
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetAccounts">
            <summary>
            Возвращает список рекламных кабинетов.
            </summary>
            <returns>
            Возвращает массив объектов, описывающих рекламные кабинеты. Каждый объект содержит следующие поля:
            account_id
            integerидентификатор рекламного кабинета. account_type
            stringтип рекламного кабинета. Возможные значения:
            general — обычный;
            agency — агентский. account_status
            integer, [0,1]статус рекламного кабинета. Возможные значения:
            1 — активен;
            0 — неактивен. access_role
            stringправа пользователя в рекламном кабинете. Возможные значения:
            admin — главный администратор;
            manager — администратор;
            reports — наблюдатель.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAccounts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetAds(VkNet.Model.RequestParams.Ads.GetAdsParams)">
            <summary>
            Возвращает список рекламных объявлений.
            </summary>
            <param name = "getAdsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает массив объектов, описывающих объявления. Каждый объект содержит следующие поля:
            id
            integerидентификатор объявления. campaign_id
            integerидентификатор кампании. ad_format
            integerформат объявления. Возможные значения:
            1 — изображение и текст;
            2 — большое изображение;
            3 — эксклюзивный формат;
            4 — продвижение сообществ или приложений, квадратное изображение;
            5 — приложение в новостной ленте (устаревший);
            6 — мобильное приложение;
            9 — запись в сообществе. cost_type
            integer, [0,1]тип оплаты. Возможные значения:
            0 — оплата за переходы;
            1 — оплата за показы. cpc
            integer(если cost_type = 0) цена за переход в копейках. cpm
            integer(если cost_type = 1) цена за 1000 показов в копейках. impressions_limit
            integer(если задано) ограничение количества показов данного объявления на одного пользователя. Может присутствовать для некоторых форматов объявлений, для которых разрешена установка точного значения. impressions_limited
            integer, [1](если задано) признак того, что количество показов объявления на одного пользователя ограничено. Может присутствовать для некоторых объявлений, для которых разрешена установка ограничения, но не разрешена установка точного значения. 1 — не более 100 показов на одного пользователя. ad_platform(если значение применимо к данному формату объявления) рекламные площадки, на которых будет показываться объявление. Возможные значения:
            (если ad_format равен 1)
            0 — ВКонтакте и сайты-партнёры;
            1 — только ВКонтакте.
            (если ad_format равен 9)
            all — все площадки;
            desktop — полная версия сайта;
            mobile — мобильный сайт и приложения. ad_platform_no_wall
            integer, [1]1 — для объявления задано ограничение «Не показывать на стенах сообществ». all_limit
            integerобщий лимит объявления в рублях. 0 — лимит не задан. category1_id
            integerID тематики или подраздела тематики объявления. См. ads.getCategories. category2_id
            integerID тематики или подраздела тематики объявления. Дополнительная тематика. status
            integerстатус объявления. Возможные значения:
            0 — объявление остановлено;
            1 — объявление запущено;
            2 — объявление удалено. name
            stringназвание объявления. approved
            integerстатус модерации объявления. Возможные значения:
            0 — объявление не проходило модерацию;
            1 — объявление ожидает модерации;
            2 — объявление одобрено;
            3 — объявление отклонено. video
            integer, [1]1 — объявление является видеорекламой. disclaimer_medical
            integer, [1]1 — включено отображение предупреждения:
            «Есть противопоказания. Требуется консультация специалиста.» disclaimer_specialist
            integer, [1]1 — включено отображение предупреждения:
            «Необходима консультация специалистов.» disclaimer_supplements
            integer, [1]1 — включено отображение предупреждения:
            «БАД. Не является лекарственным препаратом.» events_retargeting_groups
            arrayТолько для ad_format = 9. Описание событий, собираемых в группы ретаргетинга. Массив объектов, где ключом является id группы ретаргетинга, а значением - массив событий. Допустимые значений для событий:
            1 — просмотр промопоста;
            2 — переход по ссылке или переход в сообщество;
            3 — переход в сообщество;
            4 — подписка на сообщество;
            5 — отписка от новостей сообщества;
            6 — скрытие или жалоба;
            10 — запуск видео;
            11 — досмотр видео до 3с;
            12 — досмотр видео до 25%;
            13 — досмотр видео до 50%;
            14 — досмотр видео до 75%;
            15 — досмотр видео до 100%;
            20 — лайк продвигаемой записи;
            21 — репост продвигаемой записи.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetAdsLayout(VkNet.Model.RequestParams.Ads.GetAdsLayoutParams)">
            <summary>
            Возвращает описания внешнего вида рекламных объявлений.
            </summary>
            <param name = "getAdsLayoutParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает массив объектов, описывающих объявления. Каждый объект содержит следующие поля:
            id
            integer&gt;идентификатор объявления. campaign_id
            integer&gt;идентификатор кампании. ad_format
            integerформат объявления. Возможные значения:
            1 — изображение и текст;
            2 — большое изображение;
            3 — эксклюзивный формат;
            4 — продвижение сообществ или приложений, квадратное изображение;
            5 — приложение в новостной ленте (устаревший);
            6 — мобильное приложение;
            7 — специальный формат приложений;
            8 — специальный формат сообществ;
            9 — запись в сообществе;
            10 — витрина приложений. cost_type
            integer, [0,1]тип оплаты. Возможные значения:
            0 — оплата за переходы;
            1 — оплата за показы. video
            integer, [1]1 — объявление является видеорекламой. title
            stringзаголовок объявления. description
            stringописание объявления. link_url
            stringссылка на рекламируемый объект. link_domain
            stringдомен рекламируемого сайта. preview_link
            stringссылка, перейдя по которой можно просмотреть рекламное объявление так, как оно выглядит на сайте. Ссылка доступна в течение 30 минут после выполнения метода ads.getAdsLayout. image_src
            stringurl изображения объявления. image_src_2x
            stringurl изображения двойного разрешения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAdsLayout
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetAdsTargeting(VkNet.Model.RequestParams.Ads.GetAdsTargetingParams)">
            <summary>
            Возвращает параметры таргетинга рекламных объявлений
            </summary>
            <param name = "getAdsTargetingParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает массив объектов - описаний таргетинга объявлений.
            Отрицательные id в поле cities означают id регионов, взятых с обратным знаком.
            Поле count содержит размер целевой аудитории на момент сохранения объявления.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getAdsTargeting
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetBudget(System.Int64)">
            <summary>
            Возвращает текущий бюджет рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает единственное число — оставшийся бюджет в указанном рекламном кабинете.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getBudget
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetCampaigns(System.Int64,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список кампаний рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "campaignIds">
            Фильтр выводимых рекламных кампаний.
            Сериализованный JSON-массив, содержащий id кампаний. Выводиться будут только кампании, присутствующие в campaign_ids и являющиеся кампаниями указанного рекламного кабинета. Если параметр равен строке null, то выводиться будут все кампании. строка
            </param>
            <param name = "clientId">
            Обязателен для рекламных агентств, в остальных случаях не используется. Идентификатор клиента, у которого запрашиваются рекламные кампании. целое число
            </param>
            <param name = "includeDeleted">
            Флаг, задающий необходимость вывода архивных объявлений.
            0 — выводить только активные кампании;
            1 — выводить все кампании.
            флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращает массив объектов campaign, каждый из которых содержит следующие поля:
            id — идентификатор кампании
            type — тип кампании
            normal — обычная кампания, в которой можно создавать любые объявления, кроме мобильной рекламы и записей в сообществе
            vk_apps_managed — кампания, в которой можно рекламировать только администрируемые Вами приложения и у которой есть отдельный бюджет
            mobile_apps — кампания, в которой можно рекламировать только мобильные приложения
            promoted_posts — кампания, в которой можно рекламировать только записи в сообществе
            name — название кампании
            status — статус кампании
            0 — кампания остановлена
            1 — кампания запущена
            2 — кампания удалена
            day_limit — дневной лимит кампании в рублях
            0 — лимит не задан
            all_limit — общий лимит кампании в рублях
            0 — лимит не задан
            start_time — время запуска кампании в формате unixtime
            0 — время не задано
            stop_time — время остановки кампании в формате unixtime
            0 — время не задано
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetCategories(System.String)">
            <summary>
            Позволяет получить возможные тематики рекламных объявлений.
            </summary>
            <param name = "lang">
            Язык, на котором нужно вернуть результаты. Список поддерживаемых языков Вы можете найти на странице Запросы к API. строка
            </param>
            <returns>
            После успешного выполнения возвращает два массива объектов — v1 и v2, каждый из которых содержит объекты, описывающие тематики в следующем формате:
            id — идентификатор тематики;
            name — название тематики;
            subcategories[subcategory] (если есть хотя бы один подраздел) — список подразделов. Массив объектов, каждый из которых содержит следующие поля:
            id — идентификатор подраздела;
            name — название подраздела.
            Массив v1 включает устаревшие тематики. Актуальный список содержится в массиве v2.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getCategories
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetClients(System.Int64)">
            <summary>
            Возвращает список клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает массив объектов client — клиентов агентства с номером account_id, каждый из которых содержит следующие поля:
            id — идентификатор клиента;
            name — название клиента;
            day_limit — дневной лимит клиента в рублях;
            all_limit — общий лимит клиента в рублях.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetDemographics(VkNet.Model.RequestParams.Ads.GetDemographicsParams)">
            <summary>
            Возвращает демографическую статистику по рекламным объявлениям или кампаниям.
            </summary>
            <param name = "getDemographicsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Каждый запрашиваемый объект имеет следующие поля:
            id — id объекта из параметра ids
            type — тип объекта из параметра ids_type
            stats — список структур описывающих статистику объекта за один временной период (конкретный временной период присутствует в списке, если по нему есть какая-то статистика)
            Структура в списке stats имеет следующие поля:
            day (если period равен day) — день в формате YYYY-MM-DD
            month (если period равен month) — месяц в формате YYYY-MM
            overall (если period равен overall) — 1
            sex — список структур, описывающих статистику по полу
            age — список структур, описывающих статистику по возрасту
            sex_age — список структур, описывающих статистику по полу и возрасту
            cities — список структур, описывающих статистику по городам
            Структура в списках sex, age, sex_age, cities имеет следующие поля:
            impressions_rate — часть аудитории, просмотревшая объявление, от 0 до 1
            clicks_rate — часть аудитории, кликнувшая по объявлению, от 0 до 1
            value — значение демографического показателя, имеет разные возможные значения для разных показателей
            sex (f — женщины, m — мужчины)
            age — один из следующих промежутков: 12-18, 18-21, 21-24, 24-27, 27-30, 30-35, 35-45, 45-100
            sex_age — комбинация значений sex и age, разделённых точкой с запятой, пример: m;21-24
            cities — id города или other для остальных городов
            name — наглядное название значения указанного в value (только для городов)
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getDemographics
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetFloodStats(System.Int64)">
            <summary>
            Возвращает информацию о текущем состоянии счетчика — количество оставшихся запусков методов и время до следующего обнуления счетчика в секундах.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает объект, содержащий следующие поля:
            left — количество оставшихся методов;
            refresh — время до следующего обновления в секундах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getFloodStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetLookalikeRequests(VkNet.Model.RequestParams.Ads.GetLookalikeRequestsParams)">
             <summary>
             Возвращает список запросов на поиск похожей аудитории.
             </summary>
             <param name = "getLookalikeRequestsParams">
             Входные параметры запроса.
             </param>
             <returns>
             Если limit не равен 0, то возвращается объект с двумя полями:
            
             count — количество запросов на поиск похожей аудитории в данном кабинете.
             items — список объектов-запросов на поиск похожей аудитории запрошенного размера с запрошенным сдвигом.
             При limit равном 0, возвращается только поле count.
             Описание запроса на поиск похожей аудитории – объект со следующими полями:
             id — идентификатор запроса на поиск похожей аудитории. Является уникальным только в рамках конкретного кабинета (клиента в случае агентства).
             create_time — timestamp даты создания запроса.
             update_time — timestamp даты последнего обновления статуса запроса.
             status — текущий статус запроса, может принимать следующие значения: search_in_progress, search_done, search_failed, save_in_progress, save_done, save_failed.
             scheduled_delete_time —  timestamp даты запланированного удаления запроса.
             source_type — тип источника исходной аудитории для поиска похожей аудитории. Может принимать только значение retargeting_group.
             source_retargeting_group_id — при source_type равном retargeting_group в данном поле указан идентификатор аудитории ретаргетинга с исходной аудиторией.
             source_name — имя источника исходной аудитории. При source_type равном retargeting_group в данном поле указано название аудитории ретаргетинга на момент создания запроса.
             audience_count — размер исходной аудитории.
             save_audience_levels — Список доступных размеров аудитории для сохранения. Присутствует только после успешного поиска похожей аудитории. Поля:
             level — используется в качестве параметра level в ads.saveLookalikeRequestResult
             audience_count — размер похожей аудитории в данной опции.
             </returns>
             <remarks>
             Страница документации ВКонтакте http://vk.com/dev/ads.getLookalikeRequests
             </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetOfficeUsers(System.Int64)">
            <summary>
            Возвращает список администраторов и наблюдателей рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает массив объектов - описаний пользователей рекламного кабинета. Каждый объект содержит массив описаний прав доступа к конкретным клиентам. Описание содержит два поля: client_id — id клиента и role — строка admin, manager или reports. Для admin client_id не указывается.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getOfficeUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetPostsReach(System.Int64,System.String,System.String)">
            <summary>
            Возвращает подробную статистику по охвату рекламных записей из объявлений и кампаний для продвижения записей сообщества.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "idsType">
            Тип запрашиваемых объектов, которые перечислены в параметре ids:
            ad — объявления;
            campaign — кампании.
            обязательный параметр, строка
            </param>
            <param name = "ids">
            Перечисленные через запятую id запрашиваемых объявлений или кампаний, в зависимости от того, что указано в параметре ids_type. Максимум 100 объектов. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив объектов, описывающих охват. Каждый объект содержит следующие поля:
            id
            integerID объекта из параметра ids. reach_subscribers
            integerохват подписчиков. reach_total
            integerсуммарный охват. links
            integerпереходы по ссылке. to_group
            integerпереходы в сообщество. join_group
            integerвступления в сообщество. report
            integerколичество жалоб на запись. hide
            integerколичество скрытий записи. unsubscribe
            integerколичество отписавшихся участников. video_views_start*
            integerколичество стартов просмотра видео. video_views_3s*
            integerколичество досмотров видео до 3 секунд. video_views_25p*
            integerколичество досмотров видео до 25 процентов. video_views_50p*
            integerколичество досмотров видео до 50 процентов. video_views_75p*
            integerколичество досмотров видео до 75 процентов. video_views_100p*
            integerколичество досмотров видео до 100 процентов.
            * — поля с данными по статистике видео возвращаются только для объявлений или кампаний с видео, созданных после 26 января 2017 года.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getPostsReach
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetRejectionReason(System.Int64,System.Int64)">
            <summary>
            Возвращает причину, по которой указанному объявлению было отказано в прохождении премодерации.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "adId">
            Идентификатор рекламного объявления. обязательный параметр, целое число
            </param>
            <returns>
            Возвращает объект, который может содержать поле comment, содержащее текстовый комментарий модератора, и/или массив rules, содержащий описание нарушенных объявлением правил. Ответ обязательно содержит хотя бы одно из полей comment или rules. Каждый элемент массива rules состоит из поля title (текстового пояснения) и массива paragraphs, каждый элемент которого содержит отдельный пункт правил. Элементы массива paragraphs могут содержать простую html-разметку.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getRejectionReason
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetStatistics(VkNet.Model.RequestParams.Ads.GetStatisticsParams)">
            <summary>
            Возвращает статистику показателей эффективности по рекламным объявлениям, кампаниям, клиентам или всему кабинету.
            </summary>
            <param name = "getStatisticsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Каждый запрашиваемый объект имеет следующие поля:
            id — id объекта из параметра ids
            type — тип объекта из параметра ids_type
            stats — список структур описывающих статистику объекта за один временной период (конкретный временной период присутствует в списке, если по нему есть какая-то статистика)
            Структура в списке stats имеет следующие поля:
            day (если period равен day) — день в формате YYYY-MM-DD
            month (если period равен month) — день в формате YYYY-MM
            overall (если period равен overall) — 1
            spent — потраченные средства
            impressions — просмотры
            clicks — клики
            reach (если ids_type равен ad или campaign и period равен day или month) — охват
            video_views (если ids_type равен ad) — просмотры видеоролика (для видеорекламы)
            video_views_half (если ids_type равен ad) — просмотры половины видеоролика (для видеорекламы)
            video_views_full (если ids_type равен ad) — просмотры целого видеоролика (для видеорекламы)
            video_clicks_site (если ids_type равен ad) — переходы на сайт рекламодателя из видеорекламы (для видеорекламы)
            join_rate (если ids_type равен ad или campaign) — вступления в группу, событие, подписки на публичную страницу или установки приложения (только если в объявлении указана прямая ссылка на соответствующую страницу ВКонтакте)
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getStatistics
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetSuggestions(VkNet.Model.RequestParams.Ads.GetSuggestionsParams)">
            <summary>
            Возвращает набор подсказок для различных параметров таргетинга.
            </summary>
            <param name = "getSuggestionsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает список объектов (подсказок), удовлетворяющих запросу.
            Для разделов countries, positions, interest_categories, religions, user_devices, user_os, user_browsers ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор объекта
            name — название объекта
            Для раздела regions ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор региона
            name — название региона
            type (необязательное) — название типа региона (область, автономный округ, край)
            Для разделов cities, districts, streets ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор объекта
            name — название объекта
            parent — название города или страны, в котором находится объект
            Для раздела schools ответ возвращается в виде массива объектов со следующими полями:
            id — идентификатор учебного заведения
            name — название учебного заведения
            desc — полное название учебного заведения
            type — тип учебного заведения
            school — школа
            university — университет
            faculty — факультет
            chair — кафедра
            parent — название города, в котором находится учебное заведение
            Для раздела interests ответ возвращается в виде массива строк.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getSuggestions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetTargetGroups(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список аудиторий ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находятся аудитории. целое число
            </param>
            <param name = "extended">
            Если 1, в результатах будет указан код для размещения на сайте.
            Устаревший параметр. Используется только для старых групп ретаргетинга, которые пополнялись без помощи пикселя. Для новых аудиторий его следует опускать. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращает массив объектов, описывающих группы ретаргетинга. Каждый объект содержит следующие поля:
            id (integer) — идентификатор аудитории;
            name (string) — название аудитории ретаргетинга;
            last_updated (integer) — дата и время последнего пополнения аудитории в формате Unixtime;
            is_audience (integer, 1) — 1, если группа является аудиторией (т.е.может быть пополнена при помощи пикселя);
            is_shared (integer, 1) — 1, если группа является копией (см. метод ads.shareTargetGroup);
            audience_count (integer) — приблизительное количество пользователей, входящих в аудиторию;
            lifetime (integer) — количество дней, через которое пользователи, добавляемые в аудиторию ретаргетинга, будут автоматически исключены из неё;
            file_source (integer, 1) — признак пополнения аудитории через файл;
            api_source (integer, 1) — признак пополнения аудитории через метод ads.importTargetContacts;
            lookalike_source (integer, 1) — признак аудитории, полученной при помощи Look-a-Like.
            pixel (string) — код для размещения на сайте рекламодателя. Возвращается, если параметр extended = 1 (только для старых групп).
            domain (string) — домен сайта, где размещен код учета пользователей (только для старых групп).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getTargetGroups
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetTargetPixels(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает список пикселей ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находятся пиксели. целое число
            </param>
            <returns>
            Возвращает массив объектов, каждый из которых содержит следующие поля:
            target_pixel_id (integer) — идентификатор пикселя;
            name (string) — название пикселя;
            last_updated (integer) — дата и время последнего использования пикселя в формате Unixtime;
            domain (string) — домен сайта, где размещен пиксель;
            category_id (integer) — идентификатор категории сайта, где размещён пиксель (см. раздел interest_categories метода ads.getSuggestions);
            pixel (string) — код для размещения на сайте рекламодателя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getTargetPixels
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetTargetingStats(VkNet.Model.RequestParams.Ads.GetTargetingStatsParams)">
            <summary>
            Возвращает размер целевой аудитории таргетинга, а также рекомендованные значения CPC и CPM.
            </summary>
            <param name = "getTargetingStatsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект, описывающий целевую аудиторию и содержащий следующие поля:
            audience_count (integer) — размер целевой аудитории
            recommended_cpc (number) — рекомендованная цена для объявлений за клики, указана в рублях с копейками в дробной части.
            recommended_cpm (number)— рекомендованная цена для объявлений за показы, указана в рублях с копейками в дробной части.
            Обратите внимание, минимальный размер целевой аудитории — 100 человек. Если заданным критериям соответствует меньшее количество пользователей, размер аудитории будет считаться равным нулю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getTargetingStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetUploadUrl(System.Int64)">
            <summary>
            Возвращает URL-адрес для загрузки фотографии рекламного объявления.
            </summary>
            <param name = "adFormat">
            Формат объявления:
            1 — изображение и текст;
            2 — большое изображение;
            3 — эксклюзивный формат;
            4 — продвижение сообществ или приложений, квадратное изображение;
            5 — приложение в новостной ленте (устаревший);
            6 — мобильное приложение;
            9 — запись в сообществе.
            обязательный параметр, целое число
            </param>
            <returns>
            Возвращает url-адрес для загрузки изображения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getUploadURl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.GetVideoUploadUrl">
            <summary>
            Возвращает URL-адрес для загрузки видеозаписи рекламного объявления.
            </summary>
            <returns>
            Возвращает url-адрес для загрузки видеоролика.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.getVideoUploadURl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.ImportTargetContacts(System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Импортирует список контактов рекламодателя для учета зарегистрированных во ВКонтакте пользователей в аудитории ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор аудитории таргетинга. обязательный параметр, целое число
            </param>
            <param name = "contacts">
            Список телефонов, email адресов или идентификаторов пользователей, указанных через запятую. Также принимаются их MD5-хеши. обязательный параметр, строка
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находится аудитория. целое число
            </param>
            <returns>
            Возвращает количество обработанных контактов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.importTargetContacts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.RemoveOfficeUsers(System.Int64,System.String)">
            <summary>
            Удаляет администраторов и/или наблюдателей из рекламного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "ids">
            Сериализованный JSON-массив, содержащий id удаляемых администраторов. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив значений - ответов на каждый запрос в массиве data. Соответствующее значение в выходном массиве равно true, если администратор успешно удален, и false в другом случае.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.removeOfficeUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.RemoveTargetContacts(System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Принимает запрос на исключение контактов рекламодателя из аудитории ретаргетинга.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор аудитории таргетинга. обязательный параметр, целое число
            </param>
            <param name = "contacts">
            Список телефонов, email адресов или идентификаторов пользователей, указанных через запятую. Также принимаются их MD5-хеши. обязательный параметр, строка
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находится аудитория. целое число
            </param>
            <returns>
            Возвращает 1 в случае успешного принятия заявки на исключение аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.removeTargetContacts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.SaveLookalikeRequestResult(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64})">
             <summary>
             Сохраняет результат поиска похожей аудитории.
             </summary>
             <param name = "accountId">
             Идентификатор рекламного кабинета. обязательный параметр, целое число
             </param>
             <param name = "requestId">
             Идентификатор запроса на поиск похожей аудитории. Получить список всех запросов на поиск похожей аудитории для данного кабинета можно с помощью ads.getLookalikeRequests обязательный параметр, целое число
             </param>
             <param name = "level">
             Уровень конкретного размера похожей аудитории для сохранения. Получить список всех доступных размеров аудиторий можно с помощью ads.getLookalikeRequests. обязательный параметр, целое число
             </param>
             <param name = "clientId">
             Только для рекламных агентств.
             идентификатор клиента, для которого будут сохраняться аудитория. целое число
             </param>
             <returns>
             Возвращает объект с полями:
            
             retargeting_group_id – идентификатор группы ретаргетинга, в которую будет сохранена запрошенная похожая аудитория.
             audience_count – размер запрошенной похожей аудитории.
             </returns>
             <remarks>
             Страница документации ВКонтакте http://vk.com/dev/ads.saveLookalikeRequestResult
             </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.ShareTargetGroup(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Предоставляет доступ к аудитории ретаргетинга другому рекламному кабинету. В результате выполнения метода возвращается идентификатор аудитории для указанного кабинета.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "targetGroupId">
            Идентификатор исходной аудитории. обязательный параметр, целое число
            </param>
            <param name = "clientId">
            Только для рекламных агентств.
            id клиента, в рекламном кабинете которого находится исходная аудитория. целое число
            </param>
            <param name = "shareWithClientId">
            Id клиента, рекламному кабинету которого необходимо предоставить доступ к аудитории. целое число
            </param>
            <returns>
            Возвращает объект со следующими полями:
            id — идентификатор аудитории.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.shareTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.UpdateAds(System.Int64,System.String)">
            <summary>
            Редактирует рекламные объявления.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих изменения в объявлениях. Описание объектов ad_edit_specification см. ниже обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве содержит идентификатор изменяемого объявления и, в случае возникновения ошибки, поля error_code и error_desc.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateAds
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.UpdateCampaigns(System.Int64,System.String)">
            <summary>
            Редактирует рекламные кампании.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих изменения в кампаниях. Описание объектов campaign_mod_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве содержит идентификатор изменяемого клиента и, в случае возникновения ошибки, поля error_code и error_desc.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateCampaigns
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.UpdateClients(System.Int64,System.String)">
            <summary>
            Редактирует клиентов рекламного агентства.
            </summary>
            <param name = "accountId">
            Идентификатор рекламного кабинета. обязательный параметр, целое число
            </param>
            <param name = "data">
            Сериализованный JSON-массив объектов, описывающих изменения в клиентах. Описание объектов client_mod_specification см. ниже. обязательный параметр, строка
            </param>
            <returns>
            Возвращает массив ответов на каждый запрос в массиве data. Соответствующий объект в выходном массиве содержит id изменяемого клиента и, в случае возникновения ошибки, поля error_code и error_desc.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateClients
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.UpdateTargetGroup(VkNet.Model.RequestParams.Ads.UpdateTargetGroupParams)">
            <summary>
            Редактирует аудиторию ретаргетинга.
            </summary>
            <param name = "updateTargetGroupParams">
            Входные параметры запроса.
            </param>
            <returns>
            В случае успеха метод возвратит 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateTargetGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAdsCategory.UpdateTargetPixel(VkNet.Model.RequestParams.Ads.UpdateTargetPixelParams)">
            <summary>
            Редактирует пиксель ретаргетинга.
            </summary>
            <param name = "updateTargetPixelParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/ads.updateTargetPixel
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAppsCategory">
            <summary>
            Методы для работы с приложениями.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.GetCatalog(VkNet.Model.RequestParams.AppGetCatalogParams,System.Boolean)">
            <summary>
            Возвращает список приложений, доступных для пользователей сайта через каталог
            приложений.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает общее число найденных приложений и массив
            объектов приложений.
            </returns>
            <remarks>
            К методу можно делать не более 60 запросов в минуту с одного IP или id.
            Страница документации ВКонтакте http://vk.com/dev/apps.getCatalog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.Get(VkNet.Model.RequestParams.AppGetParams,System.Boolean)">
            <summary>
            Возвращает данные о запрошенном приложении на платформе ВКонтакте
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает объект приложения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.SendRequest(VkNet.Model.RequestParams.AppSendRequestParams)">
            <summary>
            Позволяет отправить запрос другому пользователю в приложении, использующем
            авторизацию ВКонтакте.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            В случае удачного выполнения метод возвращает идентификатор созданного запроса,
            например:
            10013.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.sendRequest
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.DeleteAppRequests">
            <summary>
            Удаляет все уведомления о запросах, отправленных из текущего приложения.
            </summary>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.deleteAppRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.GetFriendsList(VkNet.Enums.SafetyEnums.AppRequestType,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Создает список друзей, который будет использоваться при отправке пользователем
            приглашений в приложение.
            </summary>
            <param name="type"> Tип создаваемого списка друзей. </param>
            <param name="extended">
            Параметр, определяющий необходимость возвращать расширенную информацию о
            пользователях.
            0 — возвращаются только идентификаторы;
            1 — будут дополнительно возвращены имя и фамилия. флаг, может принимать
            значения 1 или 0, по умолчанию 0 (Флаг,
            может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <param name="count"> Количество пользователей в создаваемом списке. </param>
            <param name="offset">
            Смещение относительно первого пользователя для выборки определенного
            подмножества.
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть. См. подробное
            описание.
            </param>
            <returns>
            После успешного выполнения возвращает список пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.getFriendsList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.GetLeaderboard(VkNet.Enums.SafetyEnums.AppRatingType,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает рейтинг пользователей в игре.
            </summary>
            <param name="type">
            Level — рейтинг по уровням,
            points — рейтинг по очкам, начисленным за выполнение миссий.
            score — рейтинг по очкам, начисленным напрямую (apps.getScore). строка,
            обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <param name="global">
            1 — глобальный рейтинг по всем игрокам,
            0 — рейтинг по друзьям пользователя флаг, может принимать значения 1 или 0, по
            умолчанию 1 (Флаг, может принимать
            значения 1 или 0, по умолчанию 1).
            </param>
            <param name="extended">
            1 — дополнительно возвращает информацию о пользователе. флаг, может принимать
            значения 1 или 0,
            по умолчанию 0 (Флаг, может принимать значения 1 или 0, по умолчанию 0).
            </param>
            <returns>
            После успешного выполнения возвращает список друзей с текущим уровнем и
            количеством очков в игре, отсортированный
            по убыванию текущего уровня или количества очков.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.getLeaderboard
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAppsCategory.GetScore(System.Int64)">
            <summary>
            Метод возвращает количество очков пользователя в этой игре.
            </summary>
            <param name="userId">
            Идентификатор пользователя. положительное число, по умолчанию идентификатор
            текущего пользователя,
            обязательный параметр (Положительное число, по умолчанию идентификатор текущего
            пользователя, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает число очков для пользователя.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/apps.getScore
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAppWidgetsCategory">
            <inheritdoc />
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.GetAppImageUploadServer(VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetAppImageUploadServerAsync(VkNet.Enums.SafetyEnums.AppWidgetImageType)"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.GetAppImages(System.Int32,System.Int32,VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetAppImagesAsync(System.Int32,System.Int32,VkNet.Enums.SafetyEnums.AppWidgetImageType)"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.GetGroupImageUploadServer(VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetGroupImageUploadServerAsync(VkNet.Enums.SafetyEnums.AppWidgetImageType)"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.GetGroupImages(System.Int32,System.Int32,VkNet.Enums.SafetyEnums.AppWidgetImageType)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetGroupImagesAsync(System.Int32,System.Int32,VkNet.Enums.SafetyEnums.AppWidgetImageType)"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.GetImagesById(System.String)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.GetImagesByIdAsync(System.String)"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.SaveAppImage(System.String,System.String)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.SaveAppImageAsync(System.String,System.String)"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.SaveGroupImage">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.SaveGroupImageAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.IAppWidgetsCategory.Update">
            <inheritdoc cref="M:VkNet.Abstractions.Category.IAppWidgetsCategoryAsync.UpdateAsync"/>
        </member>
        <member name="T:VkNet.Abstractions.IAudioCategory">
            <inheritdoc />
            <summary>
            Методы для работы с аудиозаписями.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Add(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Копирует аудиозапись на страницу пользователя или группы.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи.
            </param>
            <param name="groupId">
            Идентификатор сообщества (если аудиозапись необходимо скопировать в список
            сообщества).
            </param>
            <param name="albumId">
            Идентификатор альбома, в который нужно переместить аудиозапись.
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной аудиозаписи.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.CreatePlaylist(System.Int64,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Создает пустой плейлист.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="title">
            Название плейлиста.
            </param>
            <param name="description">
            Описание плейлиста.
            </param>
            <param name="audioIds">
            Идентификаторы аудиозаписей, которые необходимо добавить в альбом, в виде
            {owner_id}_{audio_id}.
            </param>
            <returns>
            После успешного выполнения возвращает <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Delete(System.Int64,System.Int64)">
            <summary>
            Удаляет аудиозапись со страницы пользователя или сообщества.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи (пользователь или сообщество).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.DeletePlaylist(System.Int64,System.Int64)">
            <summary>
            Удаляет альбом аудиозаписей.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Edit(VkNet.Model.RequestParams.AudioEditParams)">
            <summary>
            Редактирует данные аудиозаписи на странице пользователя или сообщества.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает id текста, введенного пользователем
            (lyrics_id), если текст не был введен, вернет 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.EditPlaylist(System.Int64,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Редактирует плейлист.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <param name="title">
            Новое название для плейлиста.
            </param>
            <param name="description">
            Новое описание для плейлиста.
            </param>
            <param name="audioIds">
            Идентификаторы аудиозаписей, в виде {owner_id}_{audio_id}.
            Чтобы добавить аудиозаписи необходимо перечислить
            идентификаторы всех имеющихся аудиозаписей в плейлисте + новые.
            Не указывайте идентификаторы аудиозаписей, которые необходимо удалить.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Get(VkNet.Model.RequestParams.AudioGetParams)">
            <summary>
            Возвращает список аудиозаписей пользователя или сообщества.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>.
            Обратите внимание, что ссылки на mp3 привязаны к ip-адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetPlaylists(System.Int64,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список плейлистов пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества плейлистов.
            </param>
            <param name="count">
            Количество плейлистов, которое необходимо вернуть. По умолчанию -неизвестно-, максимальное значение -неизвестно-.
            </param>
            <returns>
            После успешного выполнения возвращает общее количество альбомов с аудиозаписями
            и массив объектов <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetPlaylistById(System.Int64,System.Int64)">
            <summary>
            Возвращает <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/> пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества.
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <returns>
            После успешного выполнения возвращает <see cref="T:VkNet.Model.Attachments.AudioPlaylist"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetBroadcastList(VkNet.Enums.Filters.AudioBroadcastFilter,System.Nullable{System.Boolean})">
            <summary>
            Возвращает список друзей и сообществ пользователя, которые транслируют музыку в
            статус.
            </summary>
            <param name="filter">
            Определяет, какие типы объектов необходимо получить.
            </param>
            <param name="active">
            true — будут возвращены только друзья и сообщества, которые транслируют музыку в
            данный момент.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.User"/> и <see cref="T:VkNet.Model.Group"/> с
            дополнительным полем status_audio — объект аудиозаписи, установленной в статус
            (если аудиозапись транслируется в текущей момент).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getBroadcastList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetById(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает информацию об аудиозаписях.
            </summary>
            <param name="audios">
            Идентификаторы аудиозаписей, информацию о которых необходимо вернуть, в виде
            {owner_id}_{audio_id}.
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов <see cref="T:VkNet.Model.Attachments.Audio"/>. Обратите внимание,
            что ссылки на аудиозаписи привязаны
            к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetCount(System.Int64)">
            <summary>
            Возвращает количество аудиозаписей пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор владельца аудиозаписей (пользователь или сообщество). Обратите
            внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1).
            </param>
            <returns>
            После успешного выполнения возвращает число, равное количеству аудиозаписей на
            странице пользователя или сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getCount
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetLyrics(System.Int64)">
            <summary>
            Возвращает текст аудиозаписи.
            </summary>
            <param name="lyricsId">
            Идентификатор текста аудиозаписи, информацию о котором необходимо вернуть.
            </param>
            <returns>
            После успешного выполнения возвращает объект <see cref="T:VkNet.Model.Lyrics"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getLyrics
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetPopular(System.Boolean,System.Nullable{VkNet.Enums.AudioGenre},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список аудиозаписей из раздела "Популярное".
            </summary>
            <param name="onlyEng">
            true – возвращать только зарубежные аудиозаписи. false – возвращать все аудиозаписи.
            </param>
            <param name="genre">
            Идентификатор жанра из списка жанров.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества аудиозаписей.
            </param>
            <param name="count">
            Количество возвращаемых аудиозаписей. Максимальное
            значение 1000, по умолчанию 100.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>. Обратите внимание,
            что ссылки на аудиозаписи привязаны
            к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getPopular
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetRecommendations(System.String,System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список рекомендуемых аудиозаписей на основе списка воспроизведения
            заданного пользователя или на основе
            одной выбранной аудиозаписи.
            </summary>
            <param name="targetAudio">
            Идентификатор аудиозаписи, на основе которой будет строиться список
            рекомендаций.
            Используется вместо параметра uid. Идентификатор представляет из себя
            разделённые знаком подчеркивания id
            пользователя, которому принадлежит аудиозапись, и id самой аудиозаписи. Если
            аудиозапись принадлежит сообществу, то
            в качестве первого параметра используется -id сообщества.
            </param>
            <param name="userId">
            Идентификатор пользователя для получения списка рекомендаций на основе его
            набора аудиозаписей (по
            умолчанию — идентификатор текущего пользователя).
            </param>
            <param name="offset">
            Смещение относительно первой найденной аудиозаписи для выборки определенного
            подмножества.
            </param>
            <param name="count">
            Количество возвращаемых аудиозаписей. Максимальное значение 1000, по умолчанию 100.
            </param>
            <param name="shuffle">
            true — включен случайный порядок.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>. Обратите внимание,
            что ссылки на аудиозаписи привязаны к ip адресу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getRecommendations
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.GetUploadServer">
            <summary>
            Возвращает адрес сервера для загрузки аудиозаписей.
            </summary>
            <returns>
            После успешного выполнения возвращает обьект <see cref="T:System.Uri"/>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.getUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.AddToPlaylist(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Перемещает аудиозаписи в плейлист.
            </summary>
            <param name="ownerId">
            Идентификатор владельца (пользователь или сообщество).
            </param>
            <param name="playlistId">
            Идентификатор плейлиста.
            </param>
            <param name="audioIds">
            Идентификаторы аудиозаписей, которые требуется переместить, в виде {owner_id}_{audio_id}.
            </param>
            <returns>
            После успешного выполнения список идентификаторов аудиозаписей.
            Обратите внимание, в одном альбоме не может быть более 1000 аудиозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте -неизвестно-
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Reorder(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Изменяет порядок аудиозаписи, перенося ее между аудиозаписями, идентификаторы
            которых переданы параметрами after и before.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи, которую нужно переместить.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи (пользователь или сообщество). По умолчанию
            — идентификатор текущего пользователя.
            </param>
            <param name="before">
            Идентификатор аудиозаписи, перед которой нужно поместить композицию.
            </param>
            <param name="after">
            Идентификатор аудиозаписи, после  которой нужно поместить композицию.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.reorder
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Restore(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает аудиозапись после удаления.
            </summary>
            <param name="audioId">
            Идентификатор аудиозаписи.
            </param>
            <param name="ownerId">
            Идентификатор владельца аудиозаписи (пользователь или сообщество). По умолчанию
            — идентификатор текущего пользователя.
            </param>
            <returns>
            В случае успешного восстановления аудиозаписи возвращает объект <see cref="T:VkNet.Model.Attachments.Audio"/>.
            Если время хранения удаленной аудиозаписи истекло (обычно это 20 минут), сервер
            вернет ошибку 202 (Cache expired).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Save(System.String,System.String,System.String)">
            <summary>
            Сохраняет аудиозаписи после успешной загрузки.
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки аудиофайла
            на сервер.
            </param>
            <param name="artist"> Автор композиции. По умолчанию берется из ID3 тегов. </param>
            <param name="title"> Название композиции. По умолчанию берется из ID3 тегов. </param>
            <returns> Возвращает обьект загруженной аудиозаписи. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.Search(VkNet.Model.RequestParams.AudioSearchParams)">
            <summary>
            Возвращает список аудиозаписей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params"> Критерии поиска </param>
            <returns>
            Список объектов <see cref="T:VkNet.Model.Attachments.Audio"/>.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Audio
            Страница документации ВКонтакте http://vk.com/dev/audio.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAudioCategory.SetBroadcast(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Транслирует аудиозапись в статус пользователю или сообществу.
            </summary>
            <param name="audio">
            Идентификатор аудиозаписи, которая будет отображаться в статусе, в формате
            {owner_id}_{audio_id}.
            Например, 1_190442705. Если параметр не указан, аудиостатус указанных сообществ
            и пользователя будет удален.
            </param>
            <param name="targetIds">
            Перечисленные через запятую идентификаторы сообществ и пользователя, которым
            будет транслироваться аудиозапись. Идентификаторы сообществ должны быть заданы в
            формате "-gid", где gid - идентификатор
            сообщества. Например, 1,-34384434. По умолчанию аудиозапись транслируется
            текущему пользователю. (Количество элементов должно составлять не более 20).
            </param>
            <returns>
            Возвращает идентификаторы пользователя и сообществ для которых был установлен статус.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/audio.setBroadcast
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IAuthCategory">
            <summary>
            Методы для работы с авторизацией.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategory.CheckPhone(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Проверяет правильность введённого номера.
            </summary>
            <param name="phone">
            Номер телефона регистрируемого пользователя. строка, обязательный параметр
            (Строка, обязательный
            параметр).
            </param>
            <param name="clientId">
            Идентификатор Вашего приложения. целое число (Целое
            число).
            </param>
            <param name="clientSecret">
            Секретный ключ приложения, доступный в разделе редактирования приложения.
            строка,
            обязательный параметр (Строка, обязательный параметр).
            </param>
            <param name="authByPhone">
            Флаг, может принимать значения 1 или 0 (Флаг, может
            принимать значения 1 или 0).
            </param>
            <returns>
            В случае, если номер пользователя является правильным, будет возвращён
            <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/auth.checkPhone
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategory.Signup(VkNet.Model.RequestParams.AuthSignupParams)">
            <summary>
            Регистрирует нового пользователя по номеру телефона.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/auth.signup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategory.Confirm(VkNet.Model.RequestParams.AuthConfirmParams)">
            <summary>
            Завершает регистрацию нового пользователя, начатую методом auth.signup, по
            коду, полученному через SMS.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/auth.confirm
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IAuthCategory.Restore(System.String,System.String)">
            <summary>
            Позволяет восстановить доступ к аккаунту, используя код, полученный через SMS.
            </summary>
            <param name="phone"> Номер телефона пользователя. </param>
            <param name="lastName"> Фамилия пользователя. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/auth.restore
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IBoardCategory">
            <summary>
            Методы для работы со темами группы.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.GetTopics(VkNet.Model.RequestParams.BoardGetTopicsParams,System.Boolean)">
            <summary>
            Возвращает список тем в обсуждениях указанной группы.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c> то пропустить авторизацию. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.getTopics" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.GetComments(VkNet.Model.RequestParams.BoardGetCommentsParams,System.Boolean)">
            <summary>
            Возвращает список сообщений в указанной теме.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c> то пропустить авторизацию. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.getComments" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.AddTopic(VkNet.Model.RequestParams.BoardAddTopicParams)">
            <summary>
            Создает новую тему в списке обсуждений группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.addTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.DeleteTopic(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Удаляет тему в обсуждениях группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.deleteTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.CloseTopic(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Закрывает тему в списке обсуждений группы (в такой теме невозможно оставлять
            новые сообщения).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.closeTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.OpenTopic(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Открывает ранее закрытую тему (в ней станет возможно оставлять новые
            сообщения).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.openTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.FixTopic(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Закрепляет тему в списке обсуждений группы (такая тема при любой сортировке
            выводится выше остальных).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.fixTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.UnFixTopic(VkNet.Model.RequestParams.BoardTopicParams)">
            <summary>
            Отменяет прикрепление темы в списке обсуждений группы (тема будет выводиться
            согласно выбранной сортировке).
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.unfixTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.EditTopic(VkNet.Model.RequestParams.BoardEditTopicParams)">
            <summary>
            Изменяет заголовок темы в списке обсуждений группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.editTopic
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.CreateComment(VkNet.Model.RequestParams.BoardCreateCommentParams)">
            <summary>
            Добавляет новый комментарий в обсуждении.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.createComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.DeleteComment(VkNet.Model.RequestParams.BoardCommentParams)">
            <summary>
            Удаляет сообщение в обсуждениях сообщества.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте
            <see href="https://new.vk.com/dev/board.deleteComment" />.
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.EditComment(VkNet.Model.RequestParams.BoardEditCommentParams)">
            <summary>
            Редактирует одно из сообщений в обсуждении сообщества..
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IBoardCategory.RestoreComment(VkNet.Model.RequestParams.BoardCommentParams)">
            <summary>
            Восстанавливает удаленное сообщение темы в обсуждениях группы.
            </summary>
            <param name="params"> Входные параметры. </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/board.restoreComment
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IDatabaseCategory">
            <summary>
            Методы для получения справочной информации (страны, города, школы, учебные
            заведения и т.п.).
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetCountries(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{VkNet.Enums.Iso3166},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список стран.
            </summary>
            <param name="needAll"> Флаг - вернуть список всех стран. </param>
            <param name="codes">
            Перечисленные через запятую двухбуквенные коды стран в стандарте ISO 3166-1
            alpha-2
            http://vk.com/dev/country_codes
            </param>
            <param name="offset">
            Отступ, необходимый для выбора определенного подмножества
            стран.
            </param>
            <param name="count">
            Количество стран, которое необходимо вернуть (по умолчанию 100, максимальное
            значение 1000).
            </param>
            <remarks>
            Если не заданы параметры needAll и code, то возвращается краткий список стран,
            расположенных наиболее близко к
            стране
            текущего пользователя. Если задан параметр needAll, то будет возвращен список
            всех стран. Если задан параметр code,
            то будут возвращены только страны с перечисленными ISO 3166-1 alpha-2 кодами.
            Страница документации ВКонтакте http://vk.com/dev/database.getCountries
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetRegions(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список регионов.
            </summary>
            <param name="countryId"> Идентификатор страны. </param>
            <param name="query"> Строка поискового запроса. </param>
            <param name="count"> Количество регионов, которое необходимо вернуть. </param>
            <param name="offset">
            Отступ, необходимый для выбора определенного подмножества
            регионов.
            </param>
            <returns> Список регионов. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getRegions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetStreetsById(System.Int32[])">
            <summary>
            Возвращает информацию об улицах по их идентификаторам.
            </summary>
            <param name="streetIds"> Идентификаторы улиц. </param>
            <returns> Информация об улицах. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getStreetsById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetCountriesById(System.Int32[])">
            <summary>
            Возвращает информацию о странах по их идентификаторам.
            </summary>
            <param name="countryIds"> Идентификаторы стран. </param>
            <returns> Информация о странах. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getCountriesById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetCities(VkNet.Model.RequestParams.Database.GetCitiesParams)">
            <summary>
            Возвращает список городов.
            </summary>
            <param name="getCitiesParams"> Параметры запроса database.getCities </param>
            <returns> Cписок городов </returns>
            <remarks>
            Возвращает коллекцию городов, каждый из которых содержит поля City.Id
            При наличии информации о регионе и/или области, в которых находится данный
            город, в объекте могут дополнительно
            включаться поля City.Area
            Если не задан параметр <paramref name="getCitiesParams.query.query" />, то будет возвращен
            список самых крупных городов в
            заданной стране.
            Если задан параметр <paramref name="getCitiesParams.query.query" />, то будет возвращен
            список городов, которые релевантны
            поисковому запросу.
            Страница документации ВКонтакте http://vk.com/dev/database.getCities
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetCitiesById(System.Int32[])">
            <summary>
            Возвращает информацию о городах по их идентификаторам.
            </summary>
            <param name="cityIds"> Идентификаторы городов. </param>
            <returns> Информация о городах. </returns>
            <remarks>
            Идентификаторы городов могут быть получены с помощью методов UsersCategory.Get,
            places.getById, places.search, places.getCheckins.
            Страница документации ВКонтакте http://vk.com/dev/database.getCitiesById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetUniversities(System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список высших учебных заведений.
            </summary>
            <param name="countryId">
            Идентификатор страны, учебные заведения которой
            необходимо вернуть.
            </param>
            <param name="cityId">
            Идентификатор города, учебные заведения которого
            необходимо вернуть.
            </param>
            <param name="query"> Строка поискового запроса. Например, СПБ. </param>
            <param name="offset">
            Отступ, необходимый для получения определенного
            подмножества учебных заведений.
            </param>
            <param name="count"> Количество учебных заведений, которое необходимо вернуть. </param>
            <returns> Список высших учебных заведений, удовлетворяющих заданным условиям. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getUniversities
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetSchools(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список школ.
            </summary>
            <param name="cityId"> Идентификатор города, школы которого необходимо вернуть. </param>
            <param name="query"> Строка поискового запроса. Например, гимназия. </param>
            <param name="offset">
            Отступ, необходимый для получения определенного
            подмножества школ.
            </param>
            <param name="count"> Количество школ, которое необходимо вернуть. </param>
            <returns> Cписок школ. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getSchools
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetFaculties(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список факультетов.
            </summary>
            <param name="universityId">
            Идентификатор университета, факультеты которого
            необходимо получить.
            </param>
            <param name="count">
            Отступ, необходимый для получения определенного
            подмножества факультетов.
            </param>
            <param name="offset"> Количество факультетов которое необходимо получить. </param>
            <returns> Cписок факультетов. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getFaculties
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetSchoolClasses(System.Int64)">
            <summary>
            Возвращает список классов, характерных для школ определенной страны.
            </summary>
            <param name="countryId">
            Идентификатор страны, доступные классы в которой
            необходимо вернуть.
            </param>
            <returns>
            Возвращает массив, каждый элемент которого представляет собой пару:
            идентификатор и строковое обозначение
            класса.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getSchoolClasses
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDatabaseCategory.GetChairs(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список кафедр университета по указанному факультету.
            </summary>
            <param name="facultyId">
            Идентификатор факультета, кафедры которого необходимо
            получить.
            </param>
            <param name="count"> Количество кафедр которое необходимо получить. </param>
            <param name="offset">
            Отступ, необходимый для получения определенного
            подмножества кафедр.
            </param>
            <returns>
            Возвращает массив, каждый элемент которого представляет собой пару:
            идентификатор и строковое обозначение класса.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/database.getChairs
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IDocsCategory">
            <summary>
            Методы для работы с документами (получение списка, загрузка, удаление и т.д.)
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.Get(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{VkNet.Enums.DocFilter})">
            <summary>
            Возвращает расширенную информацию о документах пользователя или сообщества.
            </summary>
            <param name="count">
            Количество документов, информацию о которых нужно вернуть. По умолчанию — все
            документы.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества документов.
            Положительное число.
            </param>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежат документы.
            Целое число, по
            умолчанию идентификатор текущего пользователя.
            </param>
            <param name="type"> Фильтр по типу документа. </param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.GetById(System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.Document})">
            <summary>
            Возвращает информацию о документах по их идентификаторам.
            </summary>
            <param name="docs">
            Идентификаторы документов, информацию о которых нужно
            вернуть.
            </param>
            <returns> После успешного выполнения возвращает список объектов документов. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.GetUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки документов.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (если необходимо загрузить документ в список
            документов сообщества).
            Если документ нужно загрузить в список пользователя, метод вызывается без
            дополнительных параметров. Положительное
            число
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.GetWallUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки документов в папку Отправленные, для
            последующей отправки документа на стену
            или личным сообщением.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, в которое нужно загрузить документ. Положительное
            число.
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getWallUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.Save(System.String,System.String,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Сохраняет документ после его успешной загрузки на сервер.
            </summary>
            <param name="file">
            JSON-объект с полем file, возвращаемый после успешной загрузки документа
            сервер. Обязательный
            параметр.
            </param>
            <param name="title"> Название документа. </param>
            <param name="tags"> Метки для поиска. </param>
            <param name="captchaSid">
            Id капчи (только если для вызова метода необходимо
            ввести капчу)
            </param>
            <param name="captchaKey">
            Текст капчи (только если для вызова метода необходимо
            ввести капчу)
            </param>
            <returns> Возвращает массив с загруженными объектами. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.Delete(System.Int64,System.Int64)">
            <summary>
            Удаляет документ пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит документ. Целое
            число,
            обязательный параметр
            </param>
            <param name="docId">
            Идентификатор документа. Положительное число, обязательный
            параметр
            </param>
            <returns> После успешного выполнения возвращает 1. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.Add(System.Int64,System.Int64,System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Копирует документ в документы текущего пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит документ. Целое
            число,
            обязательный параметр
            </param>
            <param name="docId">
            Идентификатор документа. Положительное число, обязательный
            параметр
            </param>
            <param name="accessKey">
            Ключ доступа документа. Этот параметр следует передать, если вместе с
            остальными данными о
            документе было возвращено поле access_key.
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> Текст капчи, который ввел пользователь </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного
            документа (did).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.GetTypes(System.Int64)">
            <summary>
            Возвращает доступные типы документы для пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежат документы.
            целое число, по
            умолчанию идентификатор текущего пользователя, обязательный параметр (Целое
            число, по умолчанию идентификатор
            текущего пользователя, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов type.
            Объект type — тип документов.
            id идентификатор типа.
            положительное число name название типа.
            строка count число документов;
            int (числовое значение).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.getTypes
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.Search(System.String,System.Boolean,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает результаты поиска по документам.
            </summary>
            <param name="query">
            Строка поискового запроса. Например, зеленые тапочки. строка, обязательный
            параметр, максимальная
            длина 512 (Строка, обязательный параметр, максимальная длина 512).
            </param>
            <param name="searchOwn"> 1 — искать среди собственных документов пользователя. </param>
            <param name="count">
            Количество документов, информацию о которых нужно вернуть. положительное число
            (Положительное
            число).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества документов.
            положительное число
            (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов документов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.Edit(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Редактирует документ пользователя или группы.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит документ.
            Обратите внимание, идентификатор сообщества в параметре owner_id необходимо
            указывать со знаком "-" — например,
            owner_id=-1 соответствует идентификатору сообщества ВКонтакте API (club1)
            целое число, по умолчанию идентификатор
            текущего пользователя, обязательный параметр (Целое число, по умолчанию
            идентификатор текущего пользователя,
            обязательный параметр).
            </param>
            <param name="docId">
            Идентификатор документа. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="title">
            Название документа. строка, максимальная длина 128 (Строка, максимальная длина
            128).
            </param>
            <param name="tags">
            Метки для поиска. список слов, разделенных через запятую (Список слов,
            разделенных через запятую).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/docs.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IDocsCategory.GetMessagesUploadServer(System.Nullable{System.Int64},VkNet.Enums.SafetyEnums.DocMessageType)">
            <summary>
            Получает адрес сервера для загрузки документа в личное сообщение.
            </summary>
            <param name="peerId"> идентификатор назначения </param>
            <param name="type">
            тип документа. Возможные значения:
            doc — обычный документ;
            audio_message — голосовое сообщение.
            </param>
            <returns> </returns>
        </member>
        <member name="T:VkNet.Abstractions.IExecuteCategory">
            <summary>
            Методы этого класса позволяют производить действия с универсальным методом.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IExecuteCategory.Execute(System.String)">
            <summary>
            Универсальный метод, который позволяет запускать последовательность других
            методов, сохраняя и фильтруя
            промежуточные результаты.
            </summary>
            <param name="code">
            Код алгоритма в VKScript - формате, похожем на JavaSсript или ActionScript
            (предполагается совместимость с
            ECMAScript).
            Алгоритм должен завершаться командой return %выражение%. Операторы должны быть
            разделены точкой с запятой.
            </param>
            <returns>
            Возвращает данные, запрошенные алгоритмом.
            При работе с методом execute структура ответа в XML ближе к JSON и может
            незначительно отличаться от стандартного
            представления других методов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/execute
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IExecuteCategory.Execute``1(System.String)">
            <summary>
            Универсальный метод, который позволяет запускать последовательность других
            методов, сохраняя и фильтруя
            промежуточные результаты.
            </summary>
            <param name="code">
            Код алгоритма в VKScript - формате, похожем на JavaSсript или ActionScript
            (предполагается совместимость с
            ECMAScript).
            Алгоритм должен завершаться командой return %выражение%. Операторы должны быть
            разделены точкой с запятой.
            </param>
            <returns>
            Возвращает данные, запрошенные алгоритмом.
            При работе с методом execute структура ответа в XML ближе к JSON и может
            незначительно отличаться от стандартного
            представления других методов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/execute
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IExecuteCategory.StoredProcedure``1(System.String,VkNet.Utils.VkParameters)">
            <summary>
            Универсальный метод, который позволяет запускать хранимые процедуры.
            </summary>
            <param name="procedureName"> Имя хранимой процедуры </param>
            <param name="vkParameters"> Параметры хранимой процедуры </param>
            <returns>
            Возвращает данные, запрошенные алгоритмом.
            При работе с методом execute структура ответа в XML ближе к JSON и может
            незначительно отличаться от стандартного
            представления других методов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/execute
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IFaveCategory">
            <summary>
            Методы работы с закладками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.GetUsers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список пользователей, добавленных текущим пользователем в закладки.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества пользователей. По
            умолчанию — 0.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Количество пользователей, информацию о которых необходимо вернуть.
            положительное число, по
            умолчанию 50 (Положительное число, по умолчанию 50).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.GetPhotos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Возвращает фотографии, на которых текущий пользователь поставил отметку "Мне
            нравится".
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества фотографий.
            По умолчанию 0. положительное число (Положительное число).
            </param>
            <param name="count">
            Число фотографий, информацию о которых необходимо вернуть. положительное число,
            по умолчанию 50
            (Положительное число, по умолчанию 50).
            </param>
            <param name="photoSizes">
            Параметр, указывающий нужно ли возвращать ли доступные размеры фотографии в
            специальном
            формате. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения
            1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов фотографий.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getPhotos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.GetPosts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Возвращает записи, на которых текущий пользователь поставил отметку "Мне
            нравится".
            </summary>
            <param name="offset">
            Смещение, необходимо для выборки определенного подмножества записей.
            По умолчанию — 0.
            (Положительное число).
            </param>
            <param name="count">
            Количество записей, информацию о которых нужно вернуть (но не более 100).
            (Положительное число, по умолчанию 50).
            </param>
            <param name="extended">
            1 — в ответе будут возвращены дополнительные поля profiles и groups, содержащие
            информацию о пользователях и
            сообществах.
            По умолчанию: 0.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов записей на стене.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getPosts
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.GetVideos(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Возвращает список видеозаписей, на которых текущий пользователь поставил
            отметку "Мне нравится".
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества видеозаписей.
            (Положительное число).
            </param>
            <param name="count">
            Количество видеозаписей, информацию о которых необходимо вернуть.
            (Положительное число, по умолчанию 50).
            </param>
            <param name="extended">
            1 — в ответе будут возвращены дополнительные поля profiles и groups, содержащие
            информацию о пользователях и
            сообществах.
            По умолчанию: 0.
            </param>
            <returns>
            После успешного выполнения возвращает список объектов видеозаписей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getVideos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.GetLinks(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает ссылки, добавленные в закладки текущим пользователем.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества ссылок.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество ссылок, информацию о которых необходимо вернуть. положительное
            число, по умолчанию 50
            (Положительное число, по умолчанию 50).
            </param>
            <returns>
            После успешного выполнения возвращает общее количество ссылок и массив объектов
            link, каждый из которых содержит
            поля id, URL, title, description, photo_50 и photo_100.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getLinks
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.AddUser(System.Int64)">
            <summary>
            Добавляет пользователя в закладки.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно добавить в закладки. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.addUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.RemoveUser(System.Int64)">
            <summary>
            Удаляет пользователя из закладок.
            </summary>
            <param name="userId">
            Идентификатор пользователя, которого нужно удалить из закладок. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.removeUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.AddGroup(System.Int64)">
            <summary>
            Добавляет сообщество в закладки.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, которое нужно добавить в закладки. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.addGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.RemoveGroup(System.Int64)">
            <summary>
            Удаляет сообщество из закладок.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, которое нужно удалить из закладок. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.removeGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.AddLink(System.Uri,System.String)">
            <summary>
            Добавляет ссылку в закладки.
            </summary>
            <param name="link">
            Адрес добавляемой ссылки. Поддерживаются только внутренние ссылки на
            http://vk.com/. строка,
            обязательный параметр (Строка, обязательный параметр).
            </param>
            <param name="text"> Текст ссылки. строка (Строка). </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.addLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.RemoveLink(System.String)">
            <summary>
            Удаляет ссылку из закладок.
            </summary>
            <param name="linkId">
            Идентификатор ссылки, которую нужно удалить, полученный методом fave.getLinks.
            строка,
            обязательный параметр (Строка, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.removeLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IFaveCategory.GetMarketItems(System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает товары, добавленные в закладки текущим пользователем.
            </summary>
            <param name="count">
            Число товаров, информацию о которых необходимо вернуть. положительное число, по
            умолчанию 50
            (Положительное число, по умолчанию 50).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества товаров.
            положительное число, по
            умолчанию 0 (Положительное число, по умолчанию 0).
            </param>
            <param name="extended">
            1 — будут возвращены дополнительные поля likes, can_comment, can_repost,
            photos. По умолчанию
            данные поля не возвращается. флаг, может принимать значения 1 или 0 (Флаг,
            может принимать значения 1 или 0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов товаров.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/fave.getMarketItems
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IFriendsCategory">
            <inheritdoc cref="T:VkNet.Abstractions.IFriendsCategoryAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.Get(VkNet.Model.RequestParams.FriendsGetParams,System.Boolean)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetAsync(VkNet.Model.RequestParams.FriendsGetParams,System.Boolean)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetAppUsers">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetAppUsersAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetOnline(VkNet.Model.RequestParams.FriendsGetOnlineParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetOnlineAsync(VkNet.Model.RequestParams.FriendsGetOnlineParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetMutual(VkNet.Model.RequestParams.FriendsGetMutualParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetMutualAsync(VkNet.Model.RequestParams.FriendsGetMutualParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.AreFriends(System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.AreFriendsAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.AddList(System.String,System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.AddListAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.DeleteList(System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.DeleteListAsync(System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetLists(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetListsAsync(System.Nullable{System.Int64},System.Nullable{System.Boolean})"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.EditList(System.Int64,System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.EditListAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.DeleteAllRequests">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.DeleteAllRequestsAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.Add(System.Int64,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.AddAsync(System.Int64,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.Delete(System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.DeleteAsync(System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.Edit(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.EditAsync(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetRecent(System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetRecentAsync(System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetRequests(VkNet.Model.RequestParams.FriendsGetRequestsParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetRequestsAsync(VkNet.Model.RequestParams.FriendsGetRequestsParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetRequestsExtended(VkNet.Model.RequestParams.FriendsGetRequestsParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetRequestsExtendedAsync(VkNet.Model.RequestParams.FriendsGetRequestsParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetSuggestions(VkNet.Enums.SafetyEnums.FriendsFilter,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetSuggestionsAsync(VkNet.Enums.SafetyEnums.FriendsFilter,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.GetByPhones(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.GetByPhonesAsync(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields)"/>
        </member>
        <member name="M:VkNet.Abstractions.IFriendsCategory.Search(VkNet.Model.RequestParams.FriendsSearchParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IFriendsCategoryAsync.SearchAsync(VkNet.Model.RequestParams.FriendsSearchParams)"/>
        </member>
        <member name="T:VkNet.Abstractions.IGiftsCategory">
            <summary>
            Методы для работы с подарками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IGiftsCategory.Get(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Возвращает список полученных подарков пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, для которого необходимо
            получить список подарков.
            </param>
            <param name="count"> Количество подарков, которое нужно вернуть. </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного
            подмножества подарков.
            </param>
            <returns>
            В случае успешного вступления в группу метод вернёт <c> true </c>, иначе
            <c> false </c>.
            Возвращает список объектов gift_item, каждый из которых содержит следующие
            поля:
            id — идентификатор полученного подарка;
            from_id — идентификатор пользователя, который отправил подарок, или 0, если
            отправитель скрыт;
            message — текст сообщения, приложенного к подарку;
            date — время отправки подарка в формате unixtime;
            gift — объект подарка в следующем формате:
            id — номер подарка;
            thumb_256 — url изображения подарка размером 256x256px;
            thumb_96 — url изображения подарка размером 96x96px;
            thumb_48 — url изображения подарка размером 48x48px;
            privacy — значение приватности подарка(только для текущего пользователя;
            возможные значения: 0 — имя отправителя и
            сообщение видно всем; 1 — имя отправителя видно всем, сообщение видно только
            получателю; 2 — имя отправителя
            скрыто, сообщение видно только получателю).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/gifts.get
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IGroupsCategory">
            <summary>
            Методы для работы с сообществами (группами).
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Join(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Данный метод позволяет вступить в группу, публичную страницу, а также
            подтвердить участие во встрече.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число
            (Положительное число).
            </param>
            <param name="notSure">
            Опциональный параметр, учитываемый, если group_id принадлежит встрече. 1 —
            Возможно пойду. 0 —
            Точно пойду. По умолчанию 0. строка (Строка).
            </param>
            <returns>
            В случае успешного вступления метод вернёт 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.join
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Leave(System.Int64)">
            <summary>
            Позволяет покинуть сообщество.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.leave
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Get(VkNet.Model.RequestParams.GroupsGetParams,System.Boolean)">
            <summary>
            Возвращает список сообществ указанного пользователя.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов сообществ id, в
            которых состоит пользователь user_id.
            Если был задан параметр extended=1,  возвращает список объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.String,VkNet.Enums.Filters.GroupsFields,System.Boolean)">
            <summary>
            Возвращает информацию о заданном сообществе или о нескольких сообществах.
            </summary>
            <param name="groupIds">
            Идентификаторы или короткие имена сообществ. Максимальное число идентификаторов
            — 500. список
            строк, разделенных через запятую (Список строк, разделенных через запятую).
            </param>
            <param name="groupId">
            Идентификатор или короткое имя сообщества. строка
            (Строка).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть. Возможные значения:
            city, country, place, description,
            wiki_page, members_count, counters, start_date, finish_date, can_post,
            can_see_all_posts, activity, status,
            contacts, links, fixed_post, verified, site,ban_info.
            Обратите внимание, для получения некоторых полей требуется право доступа
            groups. Подробнее см. описание полей
            объекта group список строк, разделенных через запятую (Список строк,
            разделенных через запятую).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает массив объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetMembers(VkNet.Model.RequestParams.GroupsGetMembersParams,System.Boolean)">
            <summary>
            Возвращает список участников сообщества.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Возвращает общее количество участников сообщества count и список
            идентификаторов пользователей items.
            Если был передан параметр filter=managers, возвращается дополнительное поле
            role, которое содержит уровень
            полномочий руководителя:
            moderator — модератор;
            editor — редактор;
            administrator — администратор;
            creator — создатель сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getMembers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.IsMember(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Возвращает информацию о том, является ли пользователь участником сообщества.
            </summary>
            <param name="groupId">
            Идентификатор или короткое имя сообщества. строка, обязательный параметр
            (Строка, обязательный
            параметр).
            </param>
            <param name="userId">
            Идентификатор пользователя. положительное число
            (Положительное число).
            </param>
            <param name="userIds">
            Идентификаторы пользователей, не более 500. список положительных чисел,
            разделенных запятыми
            (Список положительных чисел, разделенных запятыми).
            </param>
            <param name="extended">
            1  — вернуть ответ в расширенной форме. По умолчанию — 0. флаг, может принимать
            значения 1 или 0
            (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            возвращает <c> true </c> в случае, если пользователь с идентификатором user_id
            является участником сообщества с
            идентификатором group_id, иначе 0.
            При использовании параметра extended Возвращает объект, который содержит поля:
            member — является ли пользователь участником сообщества;
            и может содержать поля:
            request — есть ли непринятая заявка от пользователя на вступление в группу
            (такую заявку можно отозвать методом
            groups.leave);
            invitation — приглашён ли пользователь в группу или встречу.
            При передаче нескольких идентификаторов Возвращает результат в виде массива
            объектов, в которых есть поля user_id и
            member.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.isMember
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Search(VkNet.Model.RequestParams.GroupsSearchParams,System.Boolean)">
            <summary>
            Осуществляет поиск сообществ по заданной подстроке.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов group.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetInvites(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Данный метод возвращает список приглашений в сообщества и встречи текущего
            пользователя.
            </summary>
            <param name="offset">
            Смещение, необходимое для выборки определённого подмножества приглашений.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество приглашений, которое необходимо вернуть. положительное число, по
            умолчанию 20
            (Положительное число, по умолчанию 20).
            </param>
            <param name="extended">
            1 — вернуть дополнительную информацию о пользователях, отправлявших
            приглашения. По умолчанию —
            0. флаг, может принимать значения 1 или 0 (Флаг, может принимать значения 1 или
            0).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов сообществ с
            дополнительным полем invited_by, содержащим
            идентификатор пользователя, который отправил приглашение.
            Если был передан параметр extended=1, дополнительно будет возвращен список
            profiles пользователей, отправивших
            приглашения. Каждый объект в списке содержит поля id, first_name, last_name.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getInvites
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.BanUser(VkNet.Model.RequestParams.GroupsBanUserParams)">
            <summary>
            Добавляет пользователя в черный список сообщества.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.banUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetBanned(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.GroupsFields,System.Nullable{System.Int64})">
            <summary>
            Возвращает список забаненных пользователей в сообществе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества черного списка.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество пользователей, которое необходимо вернуть. положительное число, по
            умолчанию 20,
            максимальное значение 200 (Положительное число, по умолчанию 20, максимальное
            значение 200).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть.
            Доступные значения: sex, bdate, city, country, photo_50, photo_100,
            photo_200_orig, photo_200, photo_400_orig,
            photo_max, photo_max_orig, online, online_mobile, lists, domain, has_mobile,
            contacts, connections, site,
            education, universities, schools, can_post, can_see_all_posts, can_see_audio,
            can_write_private_message, status,
            last_seen, common_count, relation, relatives, counters список строк,
            разделенных через запятую (Список строк,
            разделенных через запятую).
            </param>
            <param name="ownerId"> целое число </param>
            <returns>
            После успешного выполнения возвращает список объектов user с дополнительным
            полем ban_info.
            Объект ban_info — информация о внесении в черный список сообщества.
            admin_id идентификатор администратора, который добавил пользователя в черный
            список.
            положительное число date дата добавления пользователя в черный список в формате
            Unixtime.
            положительное число reason причина добавления пользователя в черный список.
            Возможные значения:
            0 — другое (по умолчанию);
            1 — спам;
            2 — оскорбление участников;
            3 — нецензурные выражения;
            4 — сообщения не по теме.
            int (числовое значение) comment текст комментария.
            строка end_date дата окончания блокировки (0 — блокировка вечная).
            int (числовое значение).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.UnbanUser(System.Int64,System.Int64)">
            <summary>
            Убирает пользователя из черного списка сообщества.
            </summary>
            <param name="groupId"> Идентификатор сообщества </param>
            <param name="userId">
            Идентификатор пользователя, которого нужно убрать из
            черного списка
            </param>
            <returns> После успешного выполнения возвращает <c> true </c>. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.unbanUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.EditManager(VkNet.Model.RequestParams.GroupsEditManagerParams)">
            <summary>
            Позволяет назначить/разжаловать руководителя в сообществе или изменить уровень
            его полномочий.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editManager
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetSettings(System.UInt64)">
            <summary>
            Позволяет получать данные, необходимые для отображения страницы редактирования
            данных сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, данные которого необходимо получить. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения метод вернет объект, содержащий данные
            сообщества, которые позволят отобразить форму
            редактирования для метода groups.edit.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Edit(VkNet.Model.RequestParams.GroupsEditParams)">
            <summary>
            Редактирует сообщество.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            В случае успеха возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.EditPlace(System.Int64,VkNet.Model.Place)">
            <summary>
            Позволяет редактировать информацию о месте группы.
            Для удаления информации о местоположении нужно передать только group_id.
            Для обновления данных о местоположении необходимо указать как минимум id
            страны, широту и долготу.
            </summary>
            <param name="groupId">
            Идентификатор группы, информацию о месте которой нужно
            отредактировать.
            </param>
            <param name="place"> Местоположение. </param>
            <remarks>
            Для того, чтобы воспользоваться этим методом Вы должны быть администратором
            группы.
            Страница документации ВКонтакте https://vk.com/dev/groups.editPlace
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetInvitedUsers(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список пользователей, которые были приглашены в группу.
            </summary>
            <param name="groupId">
            Идентификатор группы, список приглашенных в которую пользователей нужно
            вернуть. положительное
            число, обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определённого подмножества пользователей.
            положительное число
            (Положительное число).
            </param>
            <param name="count">
            Количество пользователей, информацию о которых нужно вернуть. положительное
            число, по умолчанию 20
            (Положительное число, по умолчанию 20).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть.
            Доступные значения: nickname, domain, sex, bdate, city, country, timezone,
            photo_50, photo_100, photo_200_orig,
            has_mobile, contacts, education, online, relation, last_seen, status,
            can_write_private_message, can_see_all_posts,
            can_post, universities список строк, разделенных через запятую (Список строк,
            разделенных через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (Строка).
            </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getInvitedUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Invite(System.Int64,System.Int64,System.Nullable{System.Int64},System.String)">
            <summary>
            Позволяет приглашать друзей в группу.
            </summary>
            <param name="groupId">
            Идентификатор группы, в которую необходимо выслать приглашение положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="userId">
            Идентификатор пользователя, которому необходимо выслать приглашение
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> Код введенный пользователем </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.invite
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.AddLink(System.Int64,System.Uri,System.String)">
            <summary>
            Позволяет добавлять ссылки в сообщество.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, в которое добавляется ссылка положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="link">
            Адрес ссылки строка, обязательный параметр (Строка,
            обязательный параметр).
            </param>
            <param name="text"> Текст ссылки строка (Строка). </param>
            <returns>
            В случае успешного выполнения возвращает объект со следующими полями:
            id — идентификатор ссылки;
            url — URL ссылки;
            name — название ссылки в блоке сообщества;
            edit_title — возвращается 1, если можно редактировать название ссылки (для
            внешних ссылок);
            desc — описание ссылки;
            image_processing — возвращается 1, если превью находится в процессе обработки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.addLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.DeleteLink(System.Int64,System.UInt64)">
            <summary>
            Позволяет удалить ссылки из сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, ссылки которого нужно удалить положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="linkId">
            Идентификатор ссылки, которую необходимо удалить положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <returns>
            В случае успешного выполнения метод возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.deleteLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.EditLink(System.Int64,System.UInt64,System.String)">
            <summary>
            Позволяет редактировать ссылки в сообществе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, в которое добавляется ссылка положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="linkId">
            Идентификатор редактируемой ссылки положительное число, обязательный параметр
            (Положительное
            число, обязательный параметр).
            </param>
            <param name="text"> Новое описание ссылки строка (Строка). </param>
            <returns>
            В случае успешного редактирования ссылки метод возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.ReorderLink(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Позволяет менять местоположение ссылки в списке.
            </summary>
            <param name="groupId">
            Идентификатор группы, внутри которой перемещается ссылка положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="linkId">
            Идентификатор ссылки, которую необходимо переместить положительное число,
            обязательный параметр
            (Положительное число, обязательный параметр).
            </param>
            <param name="after">
            Идентификатор ссылки после которой необходимо разместить перемещаемую ссылку. 0
            – если ссылку нужно
            разместить в начале списка. положительное число (Положительное число).
            </param>
            <returns>
            В случае успешного выполнение метод возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.reorderLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.RemoveUser(System.Int64,System.Int64)">
            <summary>
            Позволяет исключить пользователя из группы или отклонить заявку на вступление.
            </summary>
            <param name="groupId">
            Идентификатор группы, из которой необходимо исключить
            пользователя.
            </param>
            <param name="userId"> Идентификатор пользователя, которого нужно исключить. </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/groups.removeUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.ApproveRequest(System.Int64,System.Int64)">
            <summary>
            Позволяет одобрить заявку в группу от пользователя.
            </summary>
            <param name="groupId">
            Идентификатор группы, заявку в которую необходимо
            одобрить.
            </param>
            <param name="userId">
            Идентификатор пользователя, заявку которого необходимо
            одобрить.
            </param>
            <returns>
            В случае успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/groups.approveRequest
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.Create(System.String,System.String,VkNet.Enums.SafetyEnums.GroupType,System.Nullable{VkNet.Enums.Filters.GroupSubType},System.Nullable{System.UInt32})">
            <summary>
            Создает новое сообщество.
            </summary>
            <param name="title">
            Название сообщества. строка, обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <param name="description">
            Описание сообщества, (не учитывается при
            type=public). строка (Строка).
            </param>
            <param name="type">
            Тип создаваемого сообщества:
            group — группа;
            event — мероприятие;
            public — публичная страница.
            строка, по умолчанию group (Строка, по умолчанию group).
            </param>
            <param name="subtype">
            Вид публичной страницы (только при type=public):
            1 — место или небольшая компания;
            2 — компания, организация или веб-сайт;
            3 — известная личность или коллектив;
            4 — произведение или продукция.
            положительное число (Положительное число).
            </param>
            <param name="publicCategory">
            Категория публичной страницы (только для type =
            public).
            </param>
            <returns>
            Возвращает идентификатор созданного сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.create
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetRequests(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Возвращает список заявок на вступление в сообщество.
            </summary>
            <param name="groupId">
            Идентификатор сообщества (указывается без знака «минус»). положительное число,
            обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества результатов. По
            умолчанию — 0.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Число результатов, которые необходимо вернуть. положительное число, по
            умолчанию 20, максимальное
            значение 200 (Положительное число, по умолчанию 20, максимальное значение 200).
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть. См. подробное
            описание.
            Доступные значения: sex, bdate, city, country, photo_50, photo_100,
            photo_200_orig, photo_200, photo_400_orig,
            photo_max, photo_max_orig, online, online_mobile, domain, has_mobile, contacts,
            connections, site, education,
            universities, schools, can_post, can_see_all_posts, can_see_audio,
            can_write_private_message, status, last_seen,
            common_count, relation, relatives, counters, screen_name, maiden_name,
            timezone, occupation,activities, interests,
            music, movies, tv, books, games, about, quotes список строк, разделенных через
            запятую (Список строк, разделенных
            через запятую).
            </param>
            <returns>
            Возвращает список идентификаторов пользователей, отправивших заявки на
            вступление в сообщество.
            Если было передано значение в параметре fields, возвращается список объектов
            пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getRequests
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetCatalog(System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает список сообществ выбранной категории каталога.
            </summary>
            <param name="categoryId">
            Идентификатор категории, полученный в методе groups.getCatalogInfo.
            положительное число
            (Положительное число).
            </param>
            <param name="subcategoryId">
            Идентификатор подкатегории, полученный в методе groups.getCatalogInfo.
            положительное число,
            максимальное значение 99 (Положительное число, максимальное значение 99).
            </param>
            <returns>
            Возвращает список объектов сообществ в соответствии с выбранной категорией
            каталога.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCatalog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetCatalogInfo(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список категорий для каталога сообществ.
            </summary>
            <param name="extended">
            1 — вернуть информацию о количестве сообществ в категории и три сообщества для
            предпросмотра.
            По умолчанию 0. флаг, может принимать значения 1 или 0, по умолчанию 0,
            доступен начиная с версии 5.37 (Флаг, может
            принимать значения 1 или 0, по умолчанию 0, доступен начиная с версии 5.37).
            </param>
            <param name="subcategories">
            1 — вернуть информацию об подкатегориях.
            По умолчанию 0. флаг, может принимать значения 1 или 0, по умолчанию 0,
            доступен начиная с версии 5.37 (Флаг, может
            принимать значения 1 или 0, по умолчанию 0, доступен начиная с версии 5.37).
            </param>
            <returns>
            После успешного выполнения возвращает поле enabled (0 — каталог недоступен для
            пользователя, 1 — каталог доступен),
            и, если enabled=1, массив categories объектов — категорий товаров.
            Объект массива categories — категория каталога товаров.
            id идентификатор категории.
            положительное число name название категории.
            строка subcategories поле возвращается при использовании subcategories=1.
            Массив объектов-подкатегорий. Каждый из
            объектов содержит поля id и name, содержащие идентификатор и название
            подкатегории.
            Дополнительные поля (extended=1)
            page_count количество сообществ в категории.
            положительное число page_previews массив объектов сообществ для предпросмотра.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCatalogInfo
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.AddCallbackServer(System.UInt64,System.String,System.String,System.String)">
            <summary>
            Добавляет сервер для Callback API в сообщество.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="url"> URL сервера. </param>
            <param name="title"> Название сервера. </param>
            <param name="secretKey"> Секретный ключ. </param>
            <returns>
            После успешного выполнения возвращает идентификатор добавленного сервера в поле
            server_id (integer).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.addCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.DeleteCallbackServer(System.UInt64,System.UInt64)">
            <summary>
            Удаляет сервер для Callback API из сообщества.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverId"> идентификатор сервера, который нужно удалить. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.deleteCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.EditCallbackServer(System.UInt64,System.UInt64,System.String,System.String,System.String)">
            <summary>
            Редактирует данные сервера для Callback API в сообществе.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverId">
            идентификатор сервера, данные которого нужно
            отредактировать
            </param>
            <param name="url"> URL сервера. </param>
            <param name="title"> Название сервера. </param>
            <param name="secretKey"> Секретный ключ. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetCallbackConfirmationCode(System.UInt64)">
            <summary>
            Позволяет получить строку, необходимую для подтверждения адреса сервера в
            Callback API.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <returns>
            Возвращает строку, которую необходимо использовать в качестве ответа на
            уведомление с типом "confirmation"
            для подтверждения адреса сервера в Callback API.
            Обратите внимание, что код, возвращаемый методом, можно использовать только для
            настройки сервера средствами API.
            В настройках Вашего сообщества на сайте ВКонтакте код будет отличаться.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.editCallbackServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetCallbackServers(System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Получает информацию о серверах для Callback API в сообществе.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverIds">
            Идентификаторы серверов, данные о которых нужно получить.
            По умолчанию возвращаются все серверы.
            </param>
            <returns>
            Возвращает число серверов в поле count (integer) и массив объектов items с
            данными о серверах.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCallbackServers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetCallbackSettings(System.UInt64,System.UInt64)">
            <summary>
            Позволяет получить настройки уведомлений Callback API для сообщества.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="serverId"> Идентификатор сервера. </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getCallbackSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.SetCallbackSettings(VkNet.Model.RequestParams.CallbackServerParams)">
            <summary>
            Позволяет задать настройки уведомлений о событиях в Callback API.
            </summary>
            <param name="params">
            Параметры настройки уведомлений о событиях в Callback
            API.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.setCallbackSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetLongPollServer(System.UInt64)">
            <summary>
            Возвращает данные для подключения к Bots Longpoll API.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            key (string) — ключ;
            server (string) — url сервера;
            ts (integer) — timestamp.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.getLongPollServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.DisableOnline(System.UInt64)">
            <summary>
            Выключает статус «онлайн» в сообществе.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.disableOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.EnableOnline(System.UInt64)">
            <summary>
            Включает статус «онлайн» в сообществе.
            </summary>
            <param name = "groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/groups.enableOnline
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IGroupsCategory.GetBotsLongPollHistory(VkNet.Model.RequestParams.BotsLongPollHistoryParams)">
            <summary>
            Возвращаем обновления событий группы
            </summary>
            <param name="params">Параметры запроса к BotsLongPoll API</param>
            <returns>
            Новые события в группе
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/bots_longpoll
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ILeadsCategory">
            <summary>
            Leads При подключении к сервису рекламных акций партнёр получает доступ в
            специальный раздел для создания и
            управления рекламными акциями (офферами).
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategory.CheckUser(VkNet.Model.RequestParams.Leads.CheckUserParams)">
            <summary>
            Проверяет, доступна ли рекламная акция пользователю.
            </summary>
            <param name="checkUserParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект, содержащий поля:
            result — признак того, может ли пользователь начать акцию (true/false), а
            также, в случае auto_start=1, признак
            успешного старта акции,
            reason — в случае result=false, описание причины, по которой пользователь не
            может начать акцию,
            start_link — в случае result=true и auto_start=0, ссылка, по которой должен
            перейти пользователь для начала акции.
            sid — в случае result=true и auto_start=1, идентификатор сессии начатой акции.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.checkUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategory.Complete(System.String,System.String,System.String)">
            <summary>
            Завершает начатую пользователем рекламную акцию, используя сессию и секретный
            ключ.
            </summary>
            <param name="vkSid">
            Cессия, полученная GET параметром при старте акции. строка, обязательный
            параметр
            </param>
            <param name="secret">
            Секретный ключ, доступный в интерфейсе тестирования рекламной акции. строка,
            обязательный параметр
            </param>
            <param name="comment">
            Комментарий строка
            </param>
            <returns>
            При успешном завершении оффера будет возвращен объект, содержащий следующие
            поля:
            limit — ограничение, установленное у текущего оффера;
            spent — количество потраченных на акцию голосов;
            cost — стоимость одной выполненной акции;
            test_mode — режим транзакции (1 — тестовый, 0 — реальный);
            success — результат выполнения транзакции (всегда равно 1).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.complete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategory.GetStats(System.UInt64,System.String,System.String,System.String)">
            <summary>
            Возвращает статистику по рекламной акции.
            </summary>
            <param name="leadId">
            Идентификатор рекламной акции, доступный в интерфейсе тестирования рекламных
            акций. положительное число,
            обязательный параметр
            </param>
            <param name="secret">
            Секретный ключ, доступный в интерфейсе тестирования рекламной акции. строка
            </param>
            <param name="dateStart">
            Идентификатор дня, начиная с которого необходимо вернуть статистику в формате
            Y-m-d (8-и значное число). Например,
            2011-09-17. строка
            </param>
            <param name="dateEnd">
            Идентификатор дня, до которого необходимо вернуть статистику в формате Y-m-d
            (8-и значное число). Например,
            2011-09-19. строка
            </param>
            <returns>
            При успешном завершении оффера будет возвращен объект, содержащий следующие
            поля:
            limit — ограничения в голосах на текущую рекламную акцию;
            spent — количество голосов, уже потраченных на рекламную акцию;
            cost — стоимость (в голосах) одного прохождения;
            impressions — количество показов акций;
            started — количество начатых акций;
            completed — количество пройденных акций;
            days — данное поле возвращается, только если переданы входные параметры
            date_start и date_end.
            Параметр days Объект days содержит следующие поля:
            impressions — показы;
            started — начатые акции;
            completed — законченные акции;
            spent — потрачено голосов.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.getStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategory.GetUsers(VkNet.Model.RequestParams.Leads.GetUsersParams)">
            <summary>
            Возвращает список последних действий пользователей по рекламной акции.
            </summary>
            <param name="getUsersParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов entry, каждый из которых
            содержит поля:
            uid — идентификатор пользователя;
            aid — идентификатор приложения, из которого было выполнено действие;
            sid — идентификатор сессии;
            date — время действия в формате unixtime;
            start_date — время начала действия в формате unixtime для status = 1;
            status — 0 - начало действия, 1 - завершение действия, 2 - блокирование
            пользователя;
            test_mode — 0 - рабочий режим, 1 - тестовый режим;
            comment — текст комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.getUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategory.MetricHit(System.String)">
            <summary>
            Засчитывает событие метрики.
            </summary>
            <param name="data">
            Данные метрики, полученные в личном кабинете рекламной акции. обязательный
            параметр
            </param>
            <returns>
            Возвращает объект, содержащий поля:
            result - равен true в случае успеха, и false в обратном случае,
            redirect_link - возвращается в случае, когда пользователя нужно перенаправить
            по указанной ссылке.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.metricHit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILeadsCategory.Start(VkNet.Model.RequestParams.Leads.StartParams)">
            <summary>
            Создаёт новую сессию для прохождения рекламной акции для пользователя.
            </summary>
            <param name="startParams">
            Входные параметры запроса.
            </param>
            <returns>
            При успешном старте рекламной акции будет возвращен объект содержащий следующие
            поля:
            test_mode — режим транзакции (1 — тестовый, 0 — реальный);
            vk_sid — сессия рекламной акции.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/leads.start
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ILikesCategory">
            <summary>
            API для работы с лайками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategory.GetList(VkNet.Model.RequestParams.LikesGetListParams,System.Boolean)">
            <summary>
            Получает список идентификаторов пользователей или сообществ, которые добавили
            заданный объект в свой список Мне
            нравится.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Возвращает список идентификаторов пользователей или сообществ, которые добавили
            заданный объект в свой список Мне
            нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.getList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategory.GetListEx(VkNet.Model.RequestParams.LikesGetListParams)">
            <summary>
            Получает список идентификаторов пользователей или сообществ, которые добавили
            заданный объект в свой список Мне
            нравится.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает список пользователей и сообществ, которые добавили заданный объект в
            свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.getList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategory.Add(VkNet.Model.RequestParams.LikesAddParams)">
            <summary>
            Добавляет указанный объект в список Мне нравится текущего пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            В случае успеха возвращает объект с полем likes, в котором находится текущее
            количество пользователей, которые
            добавили данный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategory.Delete(VkNet.Enums.SafetyEnums.LikeObjectType,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String)">
            <summary>
            Удаляет указанный объект из списка Мне нравится текущего пользователя
            </summary>
            <param name="type"> Тип объекта LikeObjectType </param>
            <param name="itemId">
            Идентификатор объекта. положительное число, обязательный
            параметр
            </param>
            <param name="ownerId">
            Идентификатор владельца объекта. целое число, по умолчанию идентификатор
            текущего пользователя
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> Текст, который ввел пользователь </param>
            <returns>
            В случае успеха возвращает объект с полем likes, в котором находится текущее
            количество пользователей, которые
            добавили данный объект в свой список Мне нравится.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ILikesCategory.IsLiked(System.Boolean@,VkNet.Enums.SafetyEnums.LikeObjectType,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Проверяет, находится ли объект в списке Мне нравится заданного пользователя.
            </summary>
            <param name="copied"> Сделан ли репост текущим пользователем. </param>
            <param name="type"> Тип объекта LikeObjectType </param>
            <param name="itemId">
            Идентификатор объекта. положительное число, обязательный
            параметр
            </param>
            <param name="userId">
            Идентификатор пользователя, у которого необходимо проверить наличие объекта в
            списке «Мне
            нравится». Если параметр не задан, то считается, что он равен идентификатору
            текущего пользователя. положительное
            число, по умолчанию идентификатор текущего пользователя
            </param>
            <param name="ownerId">
            Идентификатор владельца Like-объекта. Если параметр не задан, то считается, что
            он равен
            идентификатору текущего пользователя. целое число, по умолчанию идентификатор
            текущего пользователя
            </param>
            <returns>
            В случае успеха возвращает одно из следующих числовых значений:
            false — указанный Like-объект не входит в список Мне нравится пользователя с
            идентификатором user_id.
            true — указанный Like-объект находится в списке Мне нравится пользователя с
            идентификатором user_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/likes.isLiked
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IMarketsCategory">
            <inheritdoc />
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Get(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.GetAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.GetByIdAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Search(VkNet.Model.RequestParams.Market.MarketSearchParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.SearchAsync(VkNet.Model.RequestParams.Market.MarketSearchParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.GetAlbums(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.GetAlbumsAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.GetAlbumById(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.GetAlbumByIdAsync(System.Int64,System.Collections.Generic.IEnumerable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.CreateComment(VkNet.Model.RequestParams.Market.MarketCreateCommentParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.Market.MarketCreateCommentParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.GetComments(VkNet.Model.RequestParams.Market.MarketGetCommentsParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.Market.MarketGetCommentsParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.DeleteComment(System.Int64,System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.DeleteCommentAsync(System.Int64,System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.RestoreComment(System.Int64,System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.RestoreCommentAsync(System.Int64,System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.EditComment(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.EditCommentAsync(System.Int64,System.Int64,System.String,System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.ReportComment(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.ReportCommentAsync(System.Int64,System.Int64,VkNet.Enums.ReportReason)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Report(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.ReportAsync(System.Int64,System.Int64,VkNet.Enums.ReportReason)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Add(VkNet.Model.RequestParams.Market.MarketProductParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.AddAsync(VkNet.Model.RequestParams.Market.MarketProductParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Edit(VkNet.Model.RequestParams.Market.MarketProductParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.EditAsync(VkNet.Model.RequestParams.Market.MarketProductParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Delete(System.Int64,System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.DeleteAsync(System.Int64,System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.Restore(System.Int64,System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.RestoreAsync(System.Int64,System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.ReorderItems(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.ReorderItemsAsync(System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.ReorderAlbums(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.ReorderAlbumsAsync(System.Int64,System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.AddAlbum(System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.AddAlbumAsync(System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.EditAlbum(System.Int64,System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.EditAlbumAsync(System.Int64,System.Int64,System.String,System.Nullable{System.Int64},System.Boolean)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.DeleteAlbum(System.Int64,System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.DeleteAlbumAsync(System.Int64,System.Int64)"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.RemoveFromAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.RemoveFromAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.AddToAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.AddToAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IMarketsCategory.GetCategories(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IMarketsCategoryAsync.GetCategoriesAsync(System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="T:VkNet.Abstractions.IMessagesCategory">
            <summary>
            Методы для работы с личными сообщениями. Для моментального получения входящих
            сообщений используйте LongPoll сервер.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.AddChatUser(System.Int64,System.Int64)">
            <summary>
            Добавляет в мультидиалог нового пользователя.
            </summary>
            <param name="chatId">
            Идентификатор беседы. положительное число, обязательный параметр, максимальное
            значение 100000000
            </param>
            <param name="userId">
            Идентификатор пользователя, которого необходимо включить в беседу.
            положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.addChatUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.AllowMessagesFromGroup(System.Int64,System.String)">
            <summary>
            Позволяет разрешить отправку сообщений от сообщества текущему пользователю.
            </summary>
            <param name="groupId">
            Идентификатор сообщества. положительное число, обязательный параметр
            </param>
            <param name="key">
            Произвольная строка. Этот параметр можно использовать для идентификации
            пользователя.
            Его значение будет возвращено в событии message_allow Callback API. строка
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.allowMessagesFromGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.CreateChat(System.Collections.Generic.IEnumerable{System.UInt64},System.String)">
            <summary>
            Создаёт беседу с несколькими участниками.
            </summary>
            <param name="title">
            Название беседы. строка
            </param>
            <param name="userIds">
            Идентификаторы пользователей, которых нужно включить в мультидиалог.
            Должны быть в друзьях у текущего пользователя. список положительных чисел,
            разделенных запятыми
            </param>
            <returns>
            После успешного выполнения возвращает  идентификатор созданного чата (chat_id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.createChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Delete(System.Collections.Generic.IEnumerable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Удаляет сообщение.
            </summary>
            <param name="messageIds">
            Список идентификаторов сообщений, разделённых через запятую. список
            положительных чисел, разделенных запятыми
            </param>
            <param name="spam">
            Пометить сообщения как спам. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <param name="deleteForAll">
            1 — если сообщение нужно удалить для получателей (если с момента отправки
            сообщения прошло не более 24 часов ).
            флаг, может принимать значения 1 или 0, по умолчанию
            </param>
            <returns>
            После успешного выполнения возвращает 1 для каждого удаленного сообщения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.DeleteChatPhoto(System.UInt64@,System.UInt64,System.Nullable{System.UInt64})">
            <summary>
            Позволяет удалить фотографию мультидиалога.
            </summary>
            <param name="messageId"> Идентификатор отправленного системного сообщения; </param>
            <param name="chatId">
            Идентификатор беседы. положительное число, обязательный параметр, максимальное
            значение 100000000
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            message_id — идентификатор отправленного системного сообщения;
            chat — объект мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.deleteChatPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.DenyMessagesFromGroup(System.Int64)">
            <summary>
            Позволяет запретить отправку сообщений от сообщества текущему пользователю.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            https://vk.com/dev/messages.denyMessagesFromGroup
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.EditChat(System.Int64,System.String)">
            <summary>
            Изменяет название беседы.
            </summary>
            <param name="chatId">
            Идентификатор беседы. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <param name="title">
            Новое название для беседы. строка, обязательный параметр (Строка, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.editChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetById(System.Collections.Generic.IEnumerable{System.UInt64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Возвращает сообщения по их идентификаторам.
            </summary>
            <param name="messageIds">
            Идентификаторы сообщений. Максимум 100 идентификаторов. список положительных
            чисел, разделенных запятыми, обязательный параметр
            </param>
            <param name="fields">
            Список дополнительных полей для пользователей и сообществ. список слов,
            разделенных через запятую
            </param>
            <param name="previewLength">
            Количество символов, по которому нужно обрезать сообщение. Укажите 0, если Вы
            не хотите обрезать сообщение. (по умолчанию сообщения не обрезаются).
            положительное число, по умолчанию 0
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в
            поле count и массив объектов, описывающих  сообщения, в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Search(VkNet.Model.RequestParams.MessagesSearchParams)">
            <summary>
            Возвращает список найденных личных сообщений текущего пользователя по введенной
            строке поиска.
            </summary>
            <param name="params">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в
            поле count и массив объектов, описывающих личные сообщения, в поле items.
            Обратите внимание, даже при использовании параметра offset максимальное число
            доступных результатов — 10000.
            Если extended = 1, в поле items возвращается массив объектов бесед.
            Дополнительно возвращаются массивы profiles и groups, содержащие объекты
            пользователей и сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Send(VkNet.Model.RequestParams.MessagesSendParams)">
            <summary>
            Посылает личное сообщение.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращается идентификатор отправленного сообщения.
            </returns>
            <exception cref="T:System.ArgumentException"> Message can not be <c> null </c>. </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.send
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.SendToUserIds(VkNet.Model.RequestParams.MessagesSendParams)">
            <summary>
            Посылает личное сообщение.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращается идентификатор отправленного сообщения.
            </returns>
            <exception cref="T:System.ArgumentException"> Message can not be <c> null </c>. </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.send
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Restore(System.UInt64,System.Nullable{System.UInt64})">
            <summary>
            Восстанавливает удаленное сообщение.
            </summary>
            <param name="messageId">
            Идентификатор сообщения, которое нужно восстановить.
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.MarkAsRead(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Помечает сообщения как прочитанные.
            </summary>
            <param name="peerId">
            Идентификатор чата или пользователя, если это диалог.
            строка (Строка).
            </param>
            <param name="startMessageId">
            При передаче этого параметра будут помечены как прочитанные все сообщения,
            начиная с
            данного. положительное число (Положительное число).
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.markAsRead
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.SetActivity(System.String,VkNet.Enums.SafetyEnums.MessageActivityType,System.Nullable{System.Int64},System.Nullable{System.UInt64})">
            <summary>
            Изменяет статус набора текста пользователем в диалоге.
            </summary>
            <param name="userId"> Идентификатор пользователя </param>
            <param name="peerId">
            Идентификатор назначения. Для групповой беседы: 2000000000 + id беседы. Для
            сообщества: -id
            сообщества.
            </param>
            <param name="type"> typing — пользователь начал набирать текст. </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает true, false в противном случае.
            Текст «N набирает сообщение...» отображается в течение 10 секунд после вызова
            метода, либо до момента отправки
            сообщения.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.setActivity
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetLastActivity(System.Int64)">
            <summary>
            Возвращает текущий статус и дату последней активности указанного пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, информацию о последней активности которого
            требуется получить. целое
            число, обязательный параметр (Целое число, обязательный параметр).
            </param>
            <returns>
            Возвращает объект, содержащий следующие поля:
            online — текущий статус пользователя (1 — в сети, 0 — не в сети);
            time — дата последней активности пользователя в формате unixtime.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getLastActivity
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetChat(System.Int64,VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Gets the chat.
            </summary>
            <param name="chatId"> The chat identifier. </param>
            <param name="fields"> The fields. </param>
            <param name="nameCase"> The name case. </param>
            <returns>
            После успешного выполнения возвращает объект (или список объектов)
            мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/messages.getChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetChat(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает информацию о беседе.
            </summary>
            <param name="chatIds">
            Список идентификаторов бесед. список целых чисел, разделенных запятыми (Список
            целых чисел,
            разделенных запятыми).
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть.
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone,
            photo_50, photo_100,
            photo_200_orig, has_mobile, contacts, education, online, counters, relation,
            last_seen, status,
            can_write_private_message, can_see_all_posts, can_post, universities список
            строк, разделенных через запятую
            (Список строк, разделенных через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает объект (или список объектов)
            мультидиалога.
            Если был задан параметр fields, поле users содержит список объектов
            пользователей с дополнительным полем
            invited_by, содержащим идентификатор пользователя, пригласившего в беседу.
            </returns>
            <exception cref="T:System.ArgumentException">
            At least one chat ID must be
            defined;chatIds
            </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getChat
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetChatPreview(System.String,VkNet.Enums.Filters.ProfileFields)">
            <summary>
            Получает данные для превью чата с приглашением по ссылке.
            </summary>
            <param name="link"> Ссылка-приглашение. </param>
            <param name="fields"> Список полей профилей, данные о которых нужно получить. </param>
            <returns> Возвращает объект представляющий описание чата </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/messages.getChatPreview
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetHistory(VkNet.Model.RequestParams.MessagesGetHistoryParams)">
            <summary>
            Возвращает историю сообщений текущего пользователя с указанным пользователя или
            групповой беседы.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            Возвращает историю сообщений с указанным пользователем или из
            указанной беседы
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.getHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.RemoveChatUser(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Исключает из мультидиалога пользователя, если текущий пользователь был
            создателем беседы либо пригласил исключаемого пользователя.
            </summary>
            <param name="chatId">
            Идентификатор беседы. положительное число, обязательный параметр, максимальное
            значение 100000000
            </param>
            <param name="userId">
            Идентификатор пользователя, которого необходимо исключить из беседы. Может быть
            меньше нуля в случае, если пользователь приглашён по email. целое число
            </param>
            <param name="memberId">
            Идентификатор участника, которого необходимо исключить из беседы. Для сообществ
            — идентификатор сообщества со знаком «минус». целое число, доступен начиная с
            версии 5.81
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.removeChatUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetLongPollServer(System.Boolean,System.UInt32,System.Nullable{System.UInt64})">
            <summary>
            Возвращает данные, необходимые для подключения к Long Poll серверу.
            Long Poll подключение позволит Вам моментально узнавать о приходе новых
            сообщений и других событий.
            </summary>
            <param name="lpVersion">
            Версия для подключения к Long Poll. Актуальная версия:
            2.
            </param>
            <param name="needPts">
            <c> true </c> — возвращать поле pts, необходимое для работы метода
            messages.getLongPollHistory
            </param>
            <param name="groupId">
            Айди группы, от которой получать данные
            </param>
            <returns>
            Возвращает объект, с помощью которого можно подключиться к серверу быстрых
            сообщений для мгновенного
            получения приходящих сообщений и других событий.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.getLongPollServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetLongPollHistory(VkNet.Model.RequestParams.MessagesGetLongPollHistoryParams)">
            <summary>
            Возвращает обновления в личных сообщениях пользователя.
            Для ускорения работы с личными сообщениями может быть полезно кешировать уже
            загруженные ранее сообщения на
            мобильном устройстве / ПК пользователя, чтобы не получать их повторно при
            каждом обращении.
            Этот метод помогает осуществить синхронизацию локальной копии списка сообщений
            с актуальной версией.
            </summary>
            <param name="params">
            Параметры запроса к LongPool серверу
            MessagesGetLongPollHistoryParams
            </param>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.getLongPollHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.SetChatPhoto(System.Int64@,System.String)">
            <summary>
            Позволяет установить фотографию мультидиалога, загруженную с помощью метода
            photos.getChatUploadServer.
            </summary>
            <param name="file">
            Содержимое поля response из ответа специального upload сервера, полученного в
            результате загрузки
            изображения на адрес, полученный методом photos.getChatUploadServer. строка,
            обязательный параметр (Строка,
            обязательный параметр).
            </param>
            <param name="messageId"> Идентификатор отправленного системного сообщения; </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            message_id — идентификатор отправленного системного сообщения;
            chat — объект мультидиалога.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.setChatPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.MarkAsImportant(System.Collections.Generic.IEnumerable{System.Int64},System.Boolean)">
            <summary>
            Помечает сообщения как важные либо снимает отметку.
            </summary>
            <param name="messageIds">
            Список идентификаторов сообщений, которые необходимо пометить.список
            положительных чисел,
            разделенных запятыми (Список положительных чисел, разделенных запятыми).
            </param>
            <param name="important">
            &#39;&#39;1&#39;&#39;, если сообщения необходимо пометить, как важные;&#39;
            &#39;0&#39;&#39;,
            если необходимо снять пометку.положительное число (Положительное число).
            </param>
            <returns>
            Возвращает список идентификаторов успешно помеченных сообщений.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.markAsImportant
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.SendSticker(VkNet.Model.RequestParams.MessagesSendStickerParams)">
            <summary>
            Отправляет стикер.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор отправленного сообщения
            (mid).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.sendSticker
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetHistoryAttachments(VkNet.Model.RequestParams.MessagesGetHistoryAttachmentsParams,System.String@)">
            <summary>
            Возвращает материалы диалога или беседы..
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="nextFrom"> Новое значение start_from. </param>
            <returns>
            После успешного выполнения возвращает массив объектов photo, video, audio или
            doc, в зависимости от значения
            media_type, а также дополнительное поле next_from, содержащее новое значение
            start_from.
            Если в media_type передано значение link, возвращает список объектов-ссылок:
            url URL ссылки.
            строка title заголовок сниппета.
            строка description описание сниппета.
            строка image_src URL изображения сниппета.
            строка.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.getHistoryAttachments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetInviteLink(System.UInt64,System.Boolean)">
            <summary>
            Получает ссылку для приглашения пользователя в беседу.
            </summary>
            <param name="peerId"> Идентификатор назначения. </param>
            <param name="reset">
            1 — сгенерировать новую ссылку, сбросив предыдущую.
            0 — получить предыдущую ссылку.
            </param>
            <returns>
            Возвращает объект с единственным полем link (string), которое содержит ссылку
            для приглашения в беседу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getInviteLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.IsMessagesFromGroupAllowed(System.UInt64,System.UInt64)">
            <summary>
            Возвращает информацию о том, разрешена ли отправка сообщений от сообщества
            пользователю.
            </summary>
            <param name="groupId"> Идентификатор сообщества. </param>
            <param name="userId"> Идентификатор пользователя. </param>
            <returns>
            Возвращает объект с единственным полем is_allowed (integer, [0,1]). Если
            отправка сообщений разрешена, поле
            содержит 1, иначе — 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.isMessagesFromGroupAllowed
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.JoinChatByInviteLink(System.String)">
            <summary>
            Позволяет присоединиться к чату по ссылке-приглашению.
            </summary>
            <param name="link"> Ссылка-приглашение. </param>
            <returns>
            Возвращает идентификатор чата в поле chat_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.joinChatByInviteLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.MarkAsAnsweredConversation(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Помечает беседу как отвеченную либо снимает отметку.
            </summary>
            <param name="peerId">
            Идентификатор беседы целое число, обязательный параметр
            </param>
            <param name="answered">
            <c> true </c> - беседа отмечена отвеченной, <c> false </c> - неотвеченной флаг,
            может принимать значения <c> true </c> или <c> false </c>, по умолчанию
            <c> true </c>
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.markAsAnsweredConversation
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.MarkAsImportantConversation(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Помечает беседу как важную либо снимает отметку.
            </summary>
            <param name="peerId"> Идентификатор беседы </param>
            <param name="important">
            <c> true </c>, если сообщения необходимо пометить, как важные;
            <c> false </c>, если необходимо снять пометку. положительное число
            (Положительное число).
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.markAsImportantConversation
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Edit(VkNet.Model.RequestParams.MessageEditParams)">
            <summary>
            Редактирует сообщение.
            </summary>
            <param name="params">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.DeleteConversation(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.Nullable{System.Int64})">
            <summary>
            Удаляет личные сообщения в беседе.
            </summary>
            <param name="userId">
            Идентификатор пользователя.
            Если требуется очистить историю беседы, используйте peer_id.
            </param>
            <param name="peerId">
            Идентификатор назначения.
            Для групповой беседы: 2000000000 + id беседы.
            Для сообщества: -id сообщества.
            </param>
            <param name="offset">
            Смещение, начиная с которого нужно удалить переписку (по умолчанию удаляются
            все сообщения,
            начиная с первого).
            </param>
            <param name="count">
            Как много сообщений нужно удалить. Обратите внимание что на метод наложено
            ограничение, за один вызов
            нельзя удалить больше 10000 сообщений, поэтому если сообщений в переписке
            больше - метод нужно вызывать несколько
            раз.
            </param>
            <param name="groupId">
            Идентификатор группы
            </param>
            <returns> После успешного выполнения возвращает <c> true </c>. </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.deleteConversation
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetConversationsById(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить беседу по её идентификатору.
            </summary>
            <param name="peerIds">
            Идентификаторы назначений, разделённые запятой.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            Возвращает общее число результатов в поле count (integer) и массив объектов
            бесед в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getConversationsById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetConversations(VkNet.Model.RequestParams.GetConversationsParams)">
            <summary>
            Возвращает список бесед пользователя.
            </summary>
            <param name="getConversationsParams">
            Входные параметры запроса.
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            count
            integerчисло результатов. items
            array беседы. Массив объектов, каждый из которых содержит поля:
            conversation (object) — объект беседы.
            last_message (object) — объект, описывающий последнее сообщение в беседе.
            unread_count
            integer число непрочитанных бесед. profiles
            array массив объектов пользователей. groups
            array массив объектов сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getConversations
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetConversationMembers(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить список участников беседы.
            </summary>
            <param name="peerId">
            Идентификатор назначения.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            Возвращает объет, который содержит следующие поля:
            count
            integerчисло участников беседы. items
            arrayучастники беседы. Массив объектов, каждый из которых содержит поля:
            member_id (integer) — идентификатор участника беседы;
            invited_by (integer) — идентификатор пользователя, который пригласил участника;
            join_date (integer) — дата добавления в беседу;
            is_admin (boolean) — является ли пользователь администратором. profiles
            arrayмассив объектов пользователей. groups
            arrayмассив объектов сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.getConversationMembers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetByConversationMessageId(System.Int64,System.Collections.Generic.IEnumerable{System.UInt64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Возвращает сообщения по их идентификаторам в рамках беседы.
            </summary>
            <param name="peerId">
            Идентификаторы назначений, разделённые запятой.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="conversationMessageIds">
            Идентификаторы сообщений. Максимум 100 идентификаторов. список положительных
            чисел, разделенных запятыми, обязательный параметр
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в
            поле count и массив объектов, описывающих  сообщения, в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.getByConversationMessageId
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.SearchConversations(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64})">
            <summary>
            Позволяет искать диалоги.
            </summary>
            <param name="q">
            Поисковой запрос. строка
            </param>
            <param name="fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть в
            ответе. список слов, разделенных через запятую
            </param>
            <param name="count">
            Максимальное число результатов для получения. положительное число, по умолчанию
            20
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля. флаг, может принимать значения 1 или 0
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            Возвращает общее число результатов в поле count (integer) и массив объектов
            диалогов в поле items.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.searchConversations
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Pin(System.Int64,System.Nullable{System.UInt64})">
            <summary>
            Закрепляет сообщение.
            </summary>
            <param name="peerId">
            Идентификатор назначения.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="messageId">
            Идентификатор сообщения, которое нужно закрепить. положительное число
            </param>
            <returns>
            Возвращает объект закрепленного сообщения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.pin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Unpin(System.Int64,System.Nullable{System.UInt64})">
            <summary>
            Открепляет сообщение.
            </summary>
            <param name="peerId">
            Идентификатор назначения.
            Для пользователя:
            id  пользователя.
            Для групповой беседы:
            2000000000 + id беседы.
            Для сообщества:
            -id сообщества.
            целое число, обязательный параметр
            </param>
            <param name="groupId">
            Идентификатор сообщества (для сообщений сообщества с ключом доступа
            пользователя). положительное число
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.unpin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetImportantMessages(VkNet.Model.RequestParams.GetImportantMessagesParams)">
            <summary>
            Возвращает список важных сообщений пользователя.
            </summary>
            <param name="getImportantMessagesParams">
            Входные параметры запроса.
            </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getImportantMessages
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetRecentCalls(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию о недавних звонках.
            </summary>
            <param name="fields">
            Список дополнительных полей для пользователей и сообществ. список слов,
            разделенных через запятую
            </param>
            <param name="count">
            Максимальное число результатов, которые нужно получить. положительное число, по
            умолчанию 40, максимальное значение 500
            </param>
            <param name="startMessageId">
            Идентификатор сообщения, начиная с которого нужно возвращать звонки.
            положительное число
            </param>
            <param name="extended">
            1 — возвращать дополнительные поля для пользователей и сообществ. флаг, может
            принимать значения 1 или 0
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            count
            integerчисло результатов. items
            arrayбеседы. Массив объектов, каждый из которых содержит поля:
            call (object) — объект со следующими полями
            initiator_id (integer) — инициатор звонка.
            receiver_id (integer) — получатель звонка.
            state (string) — состояние.
            canceled_by_initiator — сброшен инициатором
            canceled_by_receiver — сброшен получателем
            reached — состоялся
            duration (integer) — длительность звонка в секундах.
            message_id  (integer) — индетификатор сообщения profiles
            arrayмассив объектов пользователей. groups
            arrayмассив объектов сообществ.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getRecentCalls
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.DeleteDialog(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Удаляет все личные сообщения в диалоге.
            </summary>
            <param name="userId">
            Идентификатор пользователя.
            Если требуется очистить историю беседы, используйте peer_id.
            </param>
            <param name="peerId">
            Идентификатор назначения.
            Для групповой беседы: 2000000000 + id беседы.
            Для сообщества: -id сообщества.
            </param>
            <param name="offset">
            Смещение, начиная с которого нужно удалить переписку (по умолчанию удаляются
            все сообщения,
            начиная с первого).
            </param>
            <param name="count">
            Как много сообщений нужно удалить. Обратите внимание что на метод наложено
            ограничение, за один вызов
            нельзя удалить больше 10000 сообщений, поэтому если сообщений в переписке
            больше - метод нужно вызывать несколько
            раз.
            </param>
            <returns> Признак удалось ли удалить сообщения. </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.deleteDialog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.MarkAsAnsweredDialog(System.Int64,System.Boolean)">
            <summary>
            Помечает диалог как отвеченный либо снимает отметку.
            </summary>
            <param name="peerId"> Идентификатор диалога </param>
            <param name="answered"> флаг, может принимать значения 1 или 0, по умолчанию 1 </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.markAsAnsweredDialog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.MarkAsImportantDialog(System.Int64,System.Boolean)">
            <summary>
            Помечает диалог как важный либо снимает отметку.
            </summary>
            <param name="peerId"> Идентификатор диалога </param>
            <param name="important">
            <c> true </c>, если сообщения необходимо пометить, как важные;
            <c> 0 </c>, если необходимо снять пометку.положительное число (Положительное
            число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/messages.markAsImportantDialog
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.SearchDialogs(System.String,VkNet.Enums.Filters.ProfileFields,System.Nullable{System.UInt32})">
            <summary>
            Возвращает список найденных диалогов текущего пользователя по введенной строке
            поиска.
            </summary>
            <param name="query"> Подстрока, по которой будет производиться поиск. </param>
            <param name="limit"> Количество пользователей которое нужно вернуть. </param>
            <param name="fields"> Поля профилей собеседников, которые необходимо вернуть. </param>
            <returns>
            В результате выполнения данного метода будет возвращён массив объектов
            профилей, бесед и email.
            </returns>
            <exception cref="T:System.ArgumentException">
            Query can not be null or
            empty.;query
            </exception>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.searchDialogs
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.Get(VkNet.Model.RequestParams.MessagesGetParams)">
            <summary>
            Возвращает список входящих либо исходящих личных сообщений текущего
            пользователя.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns> Список сообщений, удовлетворяющий условиям фильтрации. </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Messages
            Страница документации ВКонтакте http://vk.com/dev/messages.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetChatUsers(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Позволяет получить список пользователей мультидиалога по его id.
            </summary>
            <param name="chatIds">
            Идентификаторы бесед. список целых чисел, разделенных запятыми (Список целых
            чисел, разделенных
            запятыми).
            </param>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо вернуть.
            Доступные значения: nickname, screen_name, sex, bdate, city, country, timezone,
            photo_50, photo_100,
            photo_200_orig, has_mobile, contacts, education, online, counters, relation,
            last_seen, status,
            can_write_private_message, can_see_all_posts, can_post, universities список
            строк, разделенных через запятую
            (Список строк, разделенных через запятую).
            </param>
            <param name="nameCase">
            Падеж для склонения имени и фамилии пользователя. Возможные значения:
            именительный – nom,
            родительный – gen, дательный – dat, винительный – acc, творительный – ins,
            предложный – abl. По умолчанию nom.
            строка (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает список идентификаторов участников беседы.
            Если был задан параметр fields, возвращает список объектов пользователей с
            дополнительным полем invited_by,
            содержащим идентификатор пользователя, пригласившего в беседу.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/messages.getChatUsers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IMessagesCategory.GetDialogs(VkNet.Model.RequestParams.MessagesDialogsGetParams)">
            <summary>
            Возвращает список диалогов аккаунта
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns> В случае успеха возвращает список диалогов пользователя </returns>
        </member>
        <member name="T:VkNet.Abstractions.INewsFeedCategory">
            <summary>
            Методы для работы с новостной лентой пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.Get(VkNet.Model.RequestParams.NewsFeedGetParams)">
            <summary>
            Возвращает данные, необходимые для показа списка новостей для текущего
            пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetRecommended(VkNet.Model.RequestParams.NewsFeedGetRecommendedParams)">
            <summary>
            Получает список новостей, рекомендованных пользователю.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getRecommended
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetComments(VkNet.Model.RequestParams.NewsFeedGetCommentsParams)">
            <summary>
            Возвращает данные, необходимые для показа раздела комментариев в новостях
            пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetMentions(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список записей пользователей на своих стенах, в которых упоминается
            указанный пользователь.
            </summary>
            <param name="ownerId">
            Идентификатор группы или сообщества. по умолчанию идентификатор текущего
            пользователя
            </param>
            <param name="startTime">
            Время в формате unixtime начиная с которого следует получать упоминания о
            пользователе.
            </param>
            <param name="endTime">
            Время, в формате unixtime, до которого следует получать упоминания о
            пользователе.
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества новостей. По
            умолчанию 0.
            </param>
            <param name="count">
            Количество возвращаемых записей. Если параметр не задан, то считается, что он
            равен 20.
            Максимальное значение параметра 50.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getMentions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetBanned">
            <summary>
            Возвращает список пользователей и групп, которые текущий пользователь скрыл из
            ленты новостей.
            </summary>
            <returns> Возвращает результат выполнения метода. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetBannedEx(VkNet.Enums.Filters.UsersFields,VkNet.Enums.SafetyEnums.NameCase)">
            <summary>
            Возвращает список пользователей и групп, которые текущий пользователь скрыл из
            ленты новостей.
            </summary>
            <param name="fields">
            Список дополнительных полей профилей, которые необходимо
            вернуть.
            </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.AddBan(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Запрещает показывать новости от заданных пользователей и групп в ленте новостей
            текущего пользователя.
            </summary>
            <param name="userIds">
            Перечисленные через запятую идентификаторы друзей пользователя, новости от
            которых необходимо
            скрыть из ленты новостей текущего пользователя.
            </param>
            <param name="groupIds">
            Перечисленные через запятую идентификаторы групп пользователя, новости от
            которых необходимо
            скрыть из ленты новостей текущего пользователя.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.addBan
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.DeleteBan(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Разрешает показывать новости от заданных пользователей и групп в ленте новостей
            текущего пользователя.
            </summary>
            <param name="userIds">
            Идентификаторы пользователей, новости от которых
            необходимо вернуть в ленту.
            </param>
            <param name="groupIds">
            Идентификаторы сообществ, новости от которых необходимо
            вернуть в ленту.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.deleteBan
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.IgnoreItem(VkNet.Enums.SafetyEnums.NewsObjectTypes,System.Int64,System.Int64)">
            <summary>
            Позволяет скрыть объект из ленты новостей.
            </summary>
            <param name="type"> Тип объекта. </param>
            <param name="ownerId">
            Идентификатор владельца объекта (пользователь или
            сообщество).
            </param>
            <param name="itemId"> Идентификатор объекта. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.ignoreItem
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.UnignoreItem(VkNet.Enums.SafetyEnums.NewsObjectTypes,System.Int64,System.Int64)">
            <summary>
            Позволяет вернуть ранее скрытый объект в ленту новостей.
            </summary>
            <returns> Возвращает результат выполнения метода. </returns>
            <param name="type"> Тип объекта. </param>
            <param name="ownerId">
            Идентификатор владельца объекта (пользователь или
            сообщество).
            </param>
            <param name="itemId"> Идентификатор объекта. </param>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.unignoreItem
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.Search(VkNet.Model.RequestParams.NewsFeedSearchParams)">
            <summary>
            Возвращает результаты поиска по статусам. Новости возвращаются в порядке от
            более новых к более старым.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetLists(System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает пользовательские списки новостей.
            </summary>
            <param name="listIds"> Идентификаторы списков. </param>
            <param name="extended">
            <c> true </c> — вернуть дополнительную информацию о списке (значения source_ids
            и no_reposts).
            </param>
            <returns>
            Метод возвращает список объектов пользовательских списков.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getLists
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.SaveList(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Метод позволяет создавать или редактировать пользовательские списки для
            просмотра новостей.
            </summary>
            <param name="title"> Название списка. </param>
            <param name="sourceIds">
            Идентификаторы пользователей и сообществ, которые должны быть включены в
            список. Идентификаторы
            сообществ нужно указывать со знаком «минус».
            </param>
            <param name="listId">
            Числовой идентификатор списка (если не передан, будет
            назначен автоматически).
            </param>
            <param name="noReposts">
            Нужно ли отображать копии постов в списке (
            <c> true </c> — не нужно).
            </param>
            <returns>
            После успешного выполнения возвращает Идентификатор списка.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.saveList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.DeleteList(System.Int64)">
            <summary>
            Метод позволяет удалить пользовательский список новостей
            </summary>
            <param name="listId"> Числовой идентификатор списка . </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.deleteList
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.Unsubscribe(VkNet.Enums.SafetyEnums.CommentObjectType,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Отписывает текущего пользователя от комментариев к заданному объекту.
            </summary>
            <param name="type">
            Тип объекта, от комментариев к которому необходимо
            отписаться.
            </param>
            <param name="ownerId"> Идентификатор владельца объекта. </param>
            <param name="itemId"> Идентификатор объекта. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.unsubscribe
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INewsFeedCategory.GetSuggestedSources(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},VkNet.Enums.Filters.UsersFields)">
            <summary>
            Возвращает сообщества и пользователей, на которые текущему пользователю
            рекомендуется подписаться.
            </summary>
            <param name="offset">
            Отступ, необходимый для выборки определенного подмножества сообществ или
            пользователей.
            положительное число (Положительное число).
            </param>
            <param name="count">
            Количество сообществ или пользователей, которое необходимо вернуть.
            положительное число,
            максимальное значение 1000, по умолчанию 20 (Положительное число, максимальное
            значение 1000, по умолчанию 20).
            </param>
            <param name="shuffle">
            Перемешивать ли возвращаемый список. флаг, может принимать значения 1 или 0
            (Флаг, может
            принимать значения 1 или 0).
            </param>
            <param name="fields">
            Список дополнительных полей, которые необходимо вернуть. См. возможные поля для
            пользователей и
            сообществ. список слов, разделенных через запятую (Список слов, разделенных
            через запятую).
            </param>
            <returns>
            Список объектов пользователей и групп.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/newsfeed.getSuggestedSources
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.INotesCategory">
            <summary>
            Notes Методы для работы с заметками.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.Add(VkNet.Model.RequestParams.Notes.NotesAddParams)">
            <summary>
            Создает новую заметку у текущего пользователя
            </summary>
            <param name="notesAddParams">
            Входные параметры запроса
            </param>
            <returns>После успешного выполнения возвращает идентификатор созданной заметки (nid).</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.CreateComment(VkNet.Model.RequestParams.Notes.NotesCreateCommentParams)">
             <summary>
             Добавляет новый комментарий к заметке.
             </summary>
             <param name="createCommentParams">Входные параметры запроса</param>
             <returns>
             После успешного выполнения возвращает идентификатор созданного комментария (cid).
            </returns>
             <remarks>
             Страница документации ВКонтакте http://vk.com/dev/notifications.createComment
             </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.Delete(System.Int64)">
            <summary>
            Удаляет заметку текущего пользователя.
            </summary>
            <param name="noteId">идентификатор заметки.</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.DeleteComment(VkNet.Model.RequestParams.Notes.NotesDeleteCommentParams)">
            <summary>
            Удаляет комментарий к заметке.
            </summary>
            <param name="deleteCommentParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.Edit(VkNet.Model.RequestParams.Notes.NotesEditParams)">
            <summary>
            Редактирует заметку текущего пользователя.
            </summary>
            <param name="editParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.EditComment(VkNet.Model.RequestParams.Notes.NotesEditCommentParams)">
            <summary>
            Редактирует указанный комментарий у заметки.
            </summary>
            <param name="editCommentParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true.</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.Get(VkNet.Model.RequestParams.Notes.NotesGetParams)">
            <summary>
            Возвращает список заметок, созданных пользователем.
            </summary>
            <param name="notesGetParams">Входные параметры запроса</param>
            <returns>возвращает список объектов заметок</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.GetById(VkNet.Model.RequestParams.Notes.NotesGetByIdParams)">
            <summary>
            Возвращает заметку по её id.
            </summary>
            <param name="getByIdParams">Входные параметры запроса</param>
            <returns>Возвращает заметку</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.GetComments(VkNet.Model.RequestParams.Notes.NotesGetCommentParams)">
            <summary>
            Возвращает список комментариев к заметке.
            </summary>
            <param name="getCommentParams">Входные параметры запроса</param>
            <returns>Возвращает массив объектов comment</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotesCategory.RestoreComment(VkNet.Model.RequestParams.Notes.NotesRestoreCommentParams)">
            <summary>
            Восстанавливает удалённый комментарий.
            </summary>
            <param name="restoreCommentParams">Входные параметры запроса</param>
            <returns>После успешного выполнения возвращает true</returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.restoreComment
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.INotificationsCategory">
            <summary>
            Notifications
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.INotificationsCategory.Get(System.Nullable{System.UInt64},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает список оповещений об ответах других пользователей на записи текущего
            пользователя.
            </summary>
            <param name="count">
            Указывает, какое максимальное число оповещений следует возвращать.
            положительное число, по умолчанию 30,
            максимальное значение 100
            </param>
            <param name="startFrom">
            Строковый идентификатор оповещения, полученного последним в предыдущем вызове
            (см. описание поля next_from в
            результате). строка, доступен начиная с версии 5.27
            </param>
            <param name="filters">
            Перечисленные через запятую типы оповещений, которые необходимо получить.
            Возможные значения:
            wall — записи на стене пользователя;
            mentions — упоминания в записях на стене, в комментариях или в обсуждениях;
            comments — комментарии к записям на стене, фотографиям и видеозаписям;
            likes — отметки «Мне нравится»;
            reposts — скопированные у текущего пользователя записи на стене, фотографии и
            видеозаписи;
            followers — новые подписчики;
            friends — принятые заявки в друзья.
            Если параметр не задан, то будут получены все возможные типы оповещений. список
            слов, разделенных через запятую
            </param>
            <param name="startTime">
            Время в формате Unixtime, начиная с которого следует получить оповещения для
            текущего пользователя. Если параметр
            не задан, то он считается равным значению времени, которое было сутки назад.
            целое число
            </param>
            <param name="endTime">
            Время в формате Unixtime, до которого следует получить оповещения для текущего
            пользователя. Если параметр не
            задан, то он считается равным текущему времени. целое число
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля:
            items
            arrayмассив оповещений для текущего пользователя. profiles
            arrayинформация о пользователях, которые находятся в списке оповещений. groups
            arrayинформация о сообществах, которые находятся в списке оповещений.
            last_viewed
            integerвремя последнего просмотра пользователем раздела оповещений в формате
            Unixtime.
            Описание поля items Поле items содержит массив объектов, каждый из которых
            соответствует одному оповещению. Каждый
            из объектов содержит поля: type
            stringтип оповещения. Подробнее см. ниже. date
            integerвремя появления ответа в формате Unixtime. parent
            object (отсутствует, если type= follow, mention или wall)информация о
            материале, к которому появился ответ (запись
            на стене, комментарий, фотографию, видеозапись или обсуждение). Подробнее см. в
            описании поля type ниже. feedback
            [object,array]объект (или массив объектов, если type равно follow, like_* или
            copy_*), описывающий поступивший
            ответ. Оповещения о новых подписчиках, пометках «Мне нравится» и скопированных
            записях могут быть сгруппированы в
            виде массива. reply
            objectобъект, описывающий комментарий текущего пользователя, отправленный в
            ответ на данное оповещение.
            Отсутствует, если пользователь ещё не давал ответа.
            Описание поля type Поле type описывает тип оповещения. От данного типа зависит
            наличие и содержание полей parent и
            feedback. В данный момент поддерживаются следующие типы оповещений:
            Значение type Тип поля parentТип поля feedbackОписание follow-user[]У
            пользователя появился один или несколько
            новых подписчиков. friend_accepted-user[]Заявка в друзья, отправленная
            пользователем, была принята.
            mention-postБыла создана запись на чужой стене, содержащая упоминание
            пользователя. mention_commentspostcommentБыл
            оставлен комментарий, содержащий упоминание пользователя. wall-postБыла
            добавлена запись на стене пользователя.
            wall_publish-postБыла опубликована новость, предложенная пользователем в
            публичной странице.
            comment_postpostcommentБыл добавлен новый комментарий к записи, созданной
            пользователем.
            comment_photophotocommentБыл добавлен новый комментарий к фотографии
            пользователя. comment_videovideocommentБыл
            добавлен новый комментарий к видеозаписи пользователя.
            reply_commentcommentcommentБыл добавлен новый ответ на
            комментарий пользователя. reply_comment_photocommentcommentБыл добавлен новый
            ответ на комментарий пользователя к
            фотографии. reply_comment_videocommentcommentБыл добавлен новый ответ на
            комментарий пользователя к видеозаписи.
            reply_comment_marketcommentcommentБыл добавлен новый ответ на комментарий
            пользователя к товару.
            reply_topictopiccommentБыл добавлен новый ответ пользователю в обсуждении.
            like_postpostuser[]У записи пользователя
            появилась одна или несколько новых отметок «Мне нравится».
            like_commentcommentuser[]У комментария пользователя
            появилась одна или несколько новых отметок «Мне нравится».
            like_photophotouser[]У фотографии пользователя появилась
            одна или несколько новых отметок «Мне нравится». like_videovideouser[]У
            видеозаписи пользователя появилась одна или
            несколько новых отметок «Мне нравится». like_comment_photocommentuser[]У
            комментария пользователя к фотографии
            появилась одна или несколько новых отметок «Мне нравится».
            like_comment_videocommentuser[]У комментария
            пользователя к видеозаписи появилась одна или несколько новых отметок «Мне
            нравится».
            like_comment_topiccommentuser[]У комментария пользователя в обсуждении
            появилась одна или несколько новых отметок
            «Мне нравится». copy_postpostcopy[]Один или несколько пользователей скопировали
            запись пользователя
            copy_photophotocopy[]Один или несколько пользователей скопировали фотографию
            пользователя.
            copy_videovideocopy[]Один или несколько пользователей скопировали видеозапись
            пользователя.
            mention_comment_photophotocommentПод фотографией был оставлен комментарий,
            содержащий упоминание пользователя.
            mention_comment_videovideocommentПод видео был оставлен комментарий, содержащий
            упоминание пользователя.
            Описание поля parent (post) Содержит информацию о записи на стене:
            id — идентификатор записи;
            to_id — идентификатор владельца записи;
            from_id — идентификатор пользователя, создавшего запись;
            date — время публикации записи в формате unixtime;
            text — текст записи;
            attachments — содержит массив объектов, которые присоединены к текущей записи
            (фотографии, ссылки и т.п.). Более
            подробная информация представлена на странице Описание поля attachments.
            geo — находится в записях со стен, в которых имеется информация о
            местоположении, содержит поля:
            place_id — идентификатор места;
            title — название места;
            type — тип места;
            country_id — идентификатор страны;
            city_id — идентификатор города;
            address — строка с указанием адреса места в городе;
            showmap — данный параметр указывается, если местоположение является
            прикреплённой картой.
            copy_owner_id — если запись является копией записи с чужой стены, то в поле
            содержится идентификатор владельца
            стены у которого была скопирована запись;
            copy_post_id — если запись является копией записи с чужой стены, то в поле
            содержится идентификатор скопированной
            записи на стене ее владельца
            Описание поля parent (comment) Содержит информацию о комментарии:
            id — идентификатор комментария;
            owner_id — идентификатор автора комментария;
            date — время публикации комментария в формате unixtime;
            text — текст комментария;
            post — запись, к которой оставлен комментарий (для типов reply_comment и
            like_comment);
            photo — фотография, к которой оставлен комментарий (для типов
            reply_comment_photo и like_comment_photo);
            video — видеозапись, к которой оставлен комментарий (для типов
            reply_comment_video и like_comment_video);
            topic — обсуждение, в котором оставлен комментарий (для типа
            like_comment_topic).
            Описание поля parent (photo) Содержит информацию о фотографии:
            id — идентификатор фотографии;
            owner_id — идентификатор владельца фотографии;
            aid — идентификатор альбома фотографии;
            src — ссылка на изображение в разрешении 130 пикселей по большей стороне;
            src_big — ccылка на изображение в разрешении 604 пикселя по большей стороне;
            src_small — ссылка на изображение в разрешении 75 пикселей по большей стороне;
            text — текст описания фотографии;
            created — дата загрузки фотографии в формате unixtime.
            Описание поля parent (video) Содержит информацию о видеозаписи:
            id — идентификатор видеозаписи;
            owner_id — идентификатор владельца видеозаписи;
            title — название видеозаписи;
            description — описание видеозаписи;
            duration — продолжительность видеозаписи в секундах;
            link — ссылка на видео;
            image — ссылка на изображение в разрешении 320 пикселей в ширину;
            image_medium — ссылка на изображение в разрешении 160 пикселей в ширину;
            date — дата добавления видеозаписи в формате unixtime;
            views — количество просмотров;
            player — ссылка на встраиваемый i_frame-видеоплеер.
            Описание поля parent (topic) Содержит информацию о теме в обсуждениях
            сообщества:
            id — идентификатор темы;
            owner_id — идентификатор сообщества, содержащего тему в обсуждениях (со знаком
            "минус");
            title — заголовок темы;
            created — дата создания темы в формате unixtime;
            created_by — идентификатор пользователя, создавшего тему;
            updated — дата последнего сообщения в формате unixtime;
            updated_by — идентификатор пользователя, оставившего последнее сообщение;
            is_closed — 1, если тема является закрытой (в ней нельзя оставлять сообщения);
            is_fixed — 1, если тема является прилепленной (находится в начале списка тем);
            comments — число сообщений в теме.
            Описание поля feedback Cодержит информацию об оповещении:
            id (отсутствует, если type равно follow или like_*) — идентификатор
            записи-ответа;
            to_id — идентификатор владельца стены, на которой размещена запись;
            from_id — идентификатор автора ответа;
            text (отсутствует, если type равно follow, like_* или copy_*) — текст ответа;
            likes — находится в записях со стен и содержит информацию о числе людей,
            которым понравилась данная запись,
            содержит поля:
            count — число пользователей, которым понравилась запись,
            user_likes — наличие отметки «Мне нравится» от текущего пользователя
            (1 — есть, 0 — нет),
            can_like — информация о том, может ли текущий пользователь поставить отметку
            «Мне нравится»
            (1 — может, 0 — не может),
            can_publish — информация о том, может ли текущий пользователь сделать репост
            записи
            (1 — может, 0 — не может);
            В случае, если ответ является записью на стене (тип post в таблице выше), в
            объекте feedback также содержатся
            следующие поля:
            attachments — содержит массив объектов, которые присоединены к текущей записи
            (фотографии, ссылки и т.п.). Более
            подробная информация представлена на странице Описание поля attachments.
            geo — находится в записях со стен, в которых имеется информация о
            местоположении, содержит поля:
            place_id — идентификатор места;
            title — название места;
            type — тип места;
            country_id — идентификатор страны;
            city_id — идентификатор города;
            address — строка с указанием адреса места в городе;
            showmap — данный параметр указывается, если местоположение является
            прикреплённой картой.
            Описание поля reply Cодержит информацию об ответе пользователя на оповещение:
            id — идентификатор комментария;
            date — время публикации комментария в формате unixtime;
            text — текст комментария.
            Описание поля profiles Поле profiles содержит массив объектов user с
            информацией о данных пользователей, которые
            присутствуют в новостях. Каждый из объектов содержит следующие поля:
            uid — идентификатор пользователя;
            first_name — имя пользователя;
            last_name — фамилия пользователя;
            photo — адрес фотографии пользователя размером 50x50px;
            photo_medium_rec — адрес фотографии пользователя размером 100x100px;
            screen_name — короткий адрес страницы пользователя (например, andrew или
            id6492).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.INotificationsCategory.MarkAsViewed">
            <summary>
            Сбрасывает счетчик непросмотренных оповещений об ответах других пользователей
            на записи текущего пользователя.
            </summary>
            <returns>
            Если у пользователя присутствовали непросмотренные ответы, возвращает 1 в
            случае успешного завершения. В противном
            случае возвращает 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/notifications.markAsViewed
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IOrdersCategory">
            <inheritdoc />
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.CancelSubscription(System.UInt64,System.UInt64,System.Nullable{System.Boolean})">
            <summary>
            Отменяет подписку.
            </summary>
            <param name = "userId">
            Идентификатор пользователя. положительное число, обязательный параметр
            </param>
            <param name = "subscriptionId">
            Идентификатор подписки. положительное число, обязательный параметр
            </param>
            <param name = "pendingCancel">
            1 — отключить подписку по истечении текущего оплаченного периода;
            0 — отключить подписку сразу. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает 1. При отмене подписки на адрес обратного вызова будет отправлено платёжное уведомление с типом subscription_status_change.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.cancelSubscription
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.ChangeState(System.UInt64,VkNet.Enums.SafetyEnums.OrderStateAction,System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Изменяет состояние заказа.
            </summary>
            <param name = "orderId">
            Идентификатор заказа. положительное число, обязательный параметр
            </param>
            <param name = "action">
            Действие, которое нужно произвести с заказом.
            Возможные действия:
            cancel — отменить неподтверждённый заказ.
            charge — подтвердить неподтверждённый заказ. Применяется только если не удалось обработать уведомление order_change_state.
            refund — отменить подтверждённый заказ.
            строка, обязательный параметр
            </param>
            <param name = "appOrderId">
            Внутренний идентификатор заказа в приложении. положительное число
            </param>
            <param name = "testMode">
            Если этот параметр равен 1, изменяется состояние заказа тестового режима. По умолчанию 0. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            После успешного выполнения возвращает новый статус заказа.
            Статусы заказа
            chargeable — неподтверждённый заказ. В это состояние заказы попадают в случае, если магазин не обрабатывает уведомления.
            declined — отменённый заказ на этапе получения информации о товаре, например, была получена ошибка 20, "Товара не существует". В это состояние заказ может попасть из состояния chargeable.
            cancelled — отменённый заказ. В это состояние заказ может попасть из состояния chargeable.
            charged — оплаченный заказ. В это состояние заказ может попасть из состояния chargeable, либо сразу после оплаты, если приложение обрабатывает уведомления.
            refunded — отменённый после оплаты заказ, голоса возвращены пользователю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.changeState
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.Get(System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список заказов.
            </summary>
            <param name = "offset">
            Смещение относительно самого нового найденного заказа для выборки определенного подмножества. По умолчанию 0. положительное число, по умолчанию 0
            </param>
            <param name = "count">
            Количество возвращаемых заказов. положительное число, максимальное значение 1000, по умолчанию 100
            </param>
            <param name = "testMode">
            Если этот параметр равен 1, возвращается список заказов тестового режима. По умолчанию 0. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            После успешного выполнения возвращает массив найденных заказов, отсортированный по дате в обратном порядке (самый новый в начале).
            Статусы заказа
            chargeable — неподтверждённый заказ. В это состояние заказы попадают в случае, если магазин не обрабатывает уведомления.
            declined — отменённый заказ на этапе получения информации о товаре, например, была получена ошибка 20, "Товара не существует". В это состояние заказ может попасть из состояния chargeable.
            cancelled — отменённый заказ. В это состояние заказ может попасть из состояния chargeable.
            charged — оплаченный заказ. В это состояние заказ может попасть из состояния chargeable, либо сразу после оплаты, если приложение обрабатывает уведомления.
            refunded — отменённый после оплаты заказ, голоса возвращены пользователю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.GetAmount(System.UInt64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает стоимость голосов в валюте пользователя.
            </summary>
            <param name = "userId">
            Идентификатор пользователя положительное число, обязательный параметр
            </param>
            <param name = "votes">
            Список голосов. Например: 1,7,77 список слов, разделенных через запятую, обязательный параметр, количество элементов должно составлять не более 100
            </param>
            <returns>
            Возвращает валюту пользователя и массив результатов для каждого значения из votes.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getAmount
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.GetById(System.Collections.Generic.IEnumerable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает информацию об отдельном заказе.
            </summary>
            <param name = "orderIds">
            Идентификаторы заказов (при запросе информации о нескольких заказах). список положительных чисел, разделенных запятыми
            </param>
            <param name = "testMode">
            Если этот параметр равен 1, возвращаются заказы тестового режима. По умолчанию 0. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            Возвращается массив найденных заказов, отсортированный по дате в обратном порядке (самый новый в начале).
            Статусы заказа
            chargeable — неподтверждённый заказ. В это состояние заказы попадают в случае, если магазин не обрабатывает уведомления.
            declined — отменённый заказ на этапе получения информации о товаре, например, была получена ошибка 20, "Товара не существует". В это состояние заказ может попасть из состояния chargeable.
            cancelled — отменённый заказ. В это состояние заказ может попасть из состояния chargeable.
            charged — оплаченный заказ. В это состояние заказ может попасть из состояния chargeable, либо сразу после оплаты, если приложение обрабатывает уведомления.
            refunded — отменённый после оплаты заказ, голоса возвращены пользователю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.GetUserSubscriptionById(System.UInt64,System.UInt64)">
            <summary>
            Получает информацию о подписке по её идентификатору.
            </summary>
            <param name = "userId">
            Идентификатор пользователя. положительное число, обязательный параметр
            </param>
            <param name = "subscriptionId">
            Идентификатор подписки. положительное число, обязательный параметр
            </param>
            <returns>
            Возвращает объект, описывающий подписку. Содержит следующие поля:
            id (integer) — идентификатор подписки.
            item_id (string) — идентификатор товара в приложении.
            status (string) — статус подписки. Возможные значения:
            chargeable — неподтвержденная подписка;
            active — подписка активна;
            cancelled — подписка отменена.
            price (integer) — стоимость подписки.
            period (integer) — период подписки.
            create_time (integer) — дата создания в Unixtime.
            update_time (integer) — дата обновления в Unixtime.
            period_start_time (integer) — дата начала периода в Unixtime.
            next_bill_time (integer) — дата следующего платежа в Unixtime (если status = active).
            trial_expire_time (integer) — дата истечения триал-периода (если есть).
            pending_cancel (boolean, [true]) — true, если подписка ожидает отмены.
            cancel_reason (string) — причина отмены (если есть). Возможные значения:
            user_decision — по инициативе пользователя;
            app_decision — по инициативе приложения;
            payment_fail — из-за проблемы с платежом;
            unknown — причина неизвестна.
            test_mode (boolean, [true]) — true, если используется тестовый режим.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getUserSubscriptionById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.GetUserSubscriptions(System.UInt64)">
            <summary>
            Получает список активных подписок пользователя.
            </summary>
            <param name = "userId">
            Идентификатор пользователя, подписки которого необходимо получить. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в поле count и массив объектов, описывающих подписку, в поле items. Каждый объект массива items содержит следующие поля:
            id (integer) — идентификатор подписки.
            item_id (string) — идентификатор товара в приложении.
            status (string) — статус подписки. Возможные значения:
            active — подписка активна.
            price (integer) — стоимость подписки.
            period (integer) — период подписки.
            create_time (integer) — дата создания в Unixtime.
            update_time (integer) — дата обновления в Unixtime.
            period_start_time (integer) — дата начала периода в Unixtime.
            next_bill_time (integer) — дата следующего платежа в Unixtime (если status = active).
            trial_expire_time (integer) — дата истечения триал-периода (если есть).
            pending_cancel (boolean, [true]) — true, если подписка ожидает отмены.
            cancel_reason (string) — причина отмены (если есть). Возможные значения:
            user_decision — по инициативе пользователя;
            app_decision — по инициативе приложения;
            payment_fail — из-за проблемы с платежом;
            unknown — причина неизвестна.
            test_mode (boolean, [true]) — true, если используется тестовый режим.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.getUserSubscriptions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IOrdersCategory.UpdateSubscription(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Обновляет цену подписки для пользователя.
            </summary>
            <param name = "userId">
            Идентификатор пользователя. положительное число, обязательный параметр
            </param>
            <param name = "subscriptionId">
            Идентификатор подписки. Подписка должна быть активна. положительное число, обязательный параметр
            </param>
            <param name = "price">
            Новая стоимость подписки (должна быть ниже, чем текущая). положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/orders.updateSubscription
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPagesCategory">
            <summary>
            Методы для работы с wiki.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.Get(VkNet.Model.RequestParams.PagesGetParams)">
            <summary>
            Возвращает информацию о вики-странице..
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            Возвращает информацию о вики-странице в виде объекта page.
            Если был задан параметр need_source равный 1, дополнительно будет возвращено
            поле source.
            Если был задан параметр need_html равный 1, дополнительно будет возвращено поле
            html..
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/pages.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.Save(System.String,System.Int64,System.Int64,System.String,System.Nullable{System.Int64})">
            <summary>
            Сохраняет текст вики-страницы.
            </summary>
            <param name="text"> Новый текст страницы в вики-формате. </param>
            <param name="pageId"> Идентификатор вики-страницы. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="userId"> Идентификатор пользователя, создавшего вики-страницу. </param>
            <param name="title"> Название вики-страницы. </param>
            <returns>
            В случае успеха возвращает id созданной страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.SaveAccess(System.Int64,System.Int64,System.Nullable{System.Int64},VkNet.Enums.AccessPages,VkNet.Enums.AccessPages)">
            <summary>
            Сохраняет новые настройки доступа на чтение и редактирование вики-страницы.
            </summary>
            <param name="pageId"> Идентификатор вики-страницы. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="userId"> Идентификатор пользователя, создавшего вики-страницу. </param>
            <param name="view"> Значение настройки доступа на чтение. </param>
            <param name="edit"> Значение настройки доступа на редактирование. </param>
            <returns>
            В случае успеха возвращает id страницы, доступ к которой был отредактирован.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.saveAccess
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.GetHistory(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает список всех старых версий вики-страницы.
            </summary>
            <param name="pageId"> Идентификатор вики-страницы. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="userId"> Идентификатор пользователя, создавшего вики-страницу. </param>
            <returns>
            Возвращает массив объектов page_version, имеющих следующую структуру.
            id — идентификатор версии страницы;
            length длина версии страницы в байтах;
            edited — дата редактирования страницы;
            editor_id — идентификатор редактора;
            editor_name — имя редактора.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.getHistory
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.GetTitles(System.Int64)">
            <summary>
            Возвращает список вики-страниц в группе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <returns>
            Возвращает массив объектов вики-страниц.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.getTitles
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.GetVersion(System.Int64,System.Int64,System.Boolean,System.Nullable{System.Int64})">
            <summary>
            Возвращает текст одной из старых версий страницы.
            </summary>
            <param name="versionId"> Идентификатор версии. </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит
            вики-страница.
            </param>
            <param name="needHtml">
            Определяет, требуется ли в ответе html-представление
            вики-страницы.
            </param>
            <param name="userId"> Идентификатор пользователя, который создал страницу. </param>
            <returns>
            Возвращает объект вики-страницы.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.getVersion
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.ParseWiki(System.String,System.UInt64)">
            <summary>
            Возвращает html-представление вики-разметки.
            </summary>
            <param name="text"> Текст в вики-формате. </param>
            <param name="groupId">
            Идентификатор группы, в контексте которой
            интерпретируется данная страница.
            </param>
            <returns>
            В случае успеха возвращает экранированный html, соответствующий вики-разметке.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.parseWiki
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPagesCategory.ClearCache(System.Uri)">
            <summary>
            Позволяет очистить кеш отдельных внешних страниц, которые могут быть
            прикреплены к записям ВКонтакте.
            После очистки кеша при последующем прикреплении ссылки к записи, данные о
            странице будут обновлены.
            Внешние страницы – страницы которые прикрепляются к записям вместе с ссылкой и
            доступные по кнопке "Предпросмотр".
            </summary>
            <param name="url"> URL. </param>
            <returns>
            При удачной очистке кеша – метод возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/pages.clearCache
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPhotoCategory">
            <summary>
            Методы для работы с фотографиями.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.CreateAlbum(VkNet.Model.RequestParams.PhotoCreateAlbumParams)">
            <summary>
            Создает пустой альбом для фотографий.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает объект PhotoAlbum
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.createAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.EditAlbum(VkNet.Model.RequestParams.PhotoEditAlbumParams)">
            <summary>
            Редактирует данные альбома для фотографий пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.editAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetAlbums(VkNet.Model.RequestParams.PhotoGetAlbumsParams,System.Boolean)">
            <summary>
            Возвращает список альбомов пользователя или сообщества.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Возвращает список объектов PhotoAlbum
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Get(VkNet.Model.RequestParams.PhotoGetParams,System.Boolean)">
            <summary>
            Возвращает список фотографий в альбоме.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetAlbumsCount(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает количество доступных альбомов пользователя или сообщества.
            </summary>
            <param name="userId">
            Идентификатор пользователя, количество альбомов которого необходимо получить.
            целое число, по
            умолчанию идентификатор текущего пользователя (Целое число, по умолчанию
            идентификатор текущего пользователя).
            </param>
            <param name="groupId">
            Идентификатор сообщества, количество альбомов которого необходимо получить.
            целое число (Целое
            число).
            </param>
            <returns>
            После успешного выполнения возвращает количество альбомов с учетом настроек
            приватности.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAlbumsCount
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Возвращает информацию о фотографиях по их идентификаторам.
            </summary>
            <param name="photos">
            Перечисленные через запятую идентификаторы, которые представляют собой идущие
            через знак подчеркивания id
            пользователей, разместивших фотографии, и id самих фотографий. Чтобы получить
            информацию о фотографии в альбоме
            группы, вместо id пользователя следует указать -id группы.
            Пример значения photos: 1_129207899,6492_135055734,
            -20629724_271945303
            Некоторые фотографии, идентификаторы которых могут быть получены через API,
            закрыты приватностью, и не будут
            получены. В этом случае следует использовать ключ доступа фотографии
            (access_key) в её идентификаторе. Пример
            значения photos: 1_129207899_220df2876123d3542f,
            6492_135055734_e0a9bcc31144f67fbd
            Поле access_key будет возвращено вместе с остальными данными фотографии в
            методах, которые возвращают фотографии,
            закрытые приватностью но доступные в данном контексте. Например данное поле
            имеют фотографии, возвращаемые методом
            newsfeed.get. список строк, разделенных через запятую, обязательный параметр
            (Список строк, разделенных через
            запятую, обязательный параметр).
            </param>
            <param name="extended">
            1 — будут возвращены дополнительные поля likes, comments, tags, can_comment,
            can_repost. Поля
            comments и tags содержат только количество объектов. По умолчанию данные поля
            не возвращается. флаг, может
            принимать значения 1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="photoSizes">
            Возвращать ли доступные размеры фотографии в специальном формате. флаг, может
            принимать
            значения 1 или 0 (Флаг, может принимать значения 1 или 0).
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает массив объектов photo.
            Если к фотографии прикреплено местоположение, также возвращаются поля lat и
            long, содержащие географические
            координаты отметки.
            Если был задан параметр extended=1, возвращаются дополнительные поля:
            likes — количество отметок Мне нравится и информация о том, поставил ли лайк
            текущий пользователь;
            comments — количество комментариев к фотографии;
            tags — количество отметок на фотографии;
            can_comment — может ли текущий пользователь комментировать фото (1 — может, 0 —
            не может);
            can_repost — может ли текущий пользователь сделать репост фотографии (1 —
            может, 0 — не может).
            Если был задан параметр photo_sizes, вместо полей width и height возвращаются
            размеры копий фотографии в
            специальном формате.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetUploadServer(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографий.
            </summary>
            <param name="albumId"> Идентификатор альбома. целое число (Целое число). </param>
            <param name="groupId">
            Идентификатор сообщества, которому принадлежит альбом (если необходимо
            загрузить фотографию в
            альбом сообщества). целое число (Целое число).
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetOwnerPhotoUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки главной фотографии на страницу
            пользователя или сообщества.
            </summary>
            <param name="ownerId">
            Идентификатор сообщества или текущего пользователя. Обратите внимание,
            идентификатор сообщества в
            параметре owner_id необходимо указывать со знаком "-" — например, owner_id=-1
            соответствует идентификатору
            сообщества ВКонтакте API (club1)  целое число, по умолчанию идентификатор
            текущего пользователя (Целое число, по
            умолчанию идентификатор текущего пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getOwnerPhotoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetChatUploadServer(System.UInt64,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Позволяет получить адрес для загрузки фотографий мультидиалогов.
            </summary>
            <param name="chatId">
            Идентификатор беседы, для которой нужно загрузить фотографию. положительное
            число, обязательный
            параметр (Положительное число, обязательный параметр).
            </param>
            <param name="cropX">
            Координата x для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropY">
            Координата y для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropWidth">
            Ширина фотографии после обрезки в px. положительное число, минимальное значение
            200
            (Положительное число, минимальное значение 200).
            </param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getChatUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.SaveOwnerPhoto(System.String,System.Nullable{System.Int64},System.String)">
            <summary>
            Позволяет сохранить главную фотографию пользователя или сообщества.
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер.
            </param>
            <param name="captchaSid"> Идентификатор капчи </param>
            <param name="captchaKey"> текст, который ввел пользователь </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий поля photo_hash и
            photo_src (при работе через VK.api метод
            вернёт поля photo_src, photo_src_big, photo_src_small). Параметр photo_hash
            необходим для подтверждения
            пользователем изменения его фотографии через вызов метода saveProfilePhoto
            Javascript API. Поле photo_src содержит
            путь к загруженной фотографии.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveOwnerPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.SaveWallPhoto(System.String,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом
            photos.getWallUploadServer.
            </summary>
            <param name="userId">
            Идентификатор пользователя, на стену которого нужно
            сохранить фотографию
            </param>
            <param name="groupId">
            Идентификатор сообщества, на стену которого нужно
            сохранить фотографию
            </param>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер
            </param>
            <param name="caption"> Описание загружаемой фотографии </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveWallPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetWallUploadServer(System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографии на стену пользователя или
            сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, на стену которого нужно загрузить фото (без знака
            «минус»). целое число
            (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает объект с полями upload_url, album_id,
            user_id.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getWallUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetMessagesUploadServer(System.Int64)">
            <summary>
            Возвращает адрес сервера для загрузки фотографии в личное сообщение
            пользователю.
            </summary>
            <param name="peerId">
            Идентификатор назначения (для загрузки фотографии в
            сообщениях сообществ).
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getMessagesUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.SaveMessagesPhoto(System.String)">
            <summary>
            Сохраняет фотографию после успешной загрузки на URI, полученный методом
            GetMessagesUploadServer
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер
            </param>
            <returns>
            После успешного выполнения возвращает массив с загруженной фотографией,
            возвращённый объект имеет поля id,
            pid, aid, owner_id, src, src_big, src_small, created. В случае наличия
            фотографий в высоком разрешении также будут
            возвращены адреса с названиями src_xbig и src_xxbig.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveMessagesPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetOwnerCoverPhotoUploadServer(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки обложки сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, для которого необходимо загрузить обложку.
            положительное число,
            обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="cropX">
            Координата X верхнего левого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <param name="cropY">
            Координата Y верхнего левого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <param name="cropX2">
            Координата X нижнего правого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <param name="cropY2">
            Координата Y нижнего правого угла для обрезки изображения. Положительное число
            (Положительное
            число).
            </param>
            <returns> После успешного выполнения возвращает объект UploadServerInfo </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getOwnerCoverPhotoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.SaveOwnerCoverPhoto(System.String)">
            <summary>
            Сохраняет фотографию после успешной загрузки на URI, полученный методом
            GetOwnerCoverPhotoUploadServer
            </summary>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии
            на сервер
            </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveOwnerCoverPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Report(System.Int64,System.UInt64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на фотографию.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            целое число,
            обязательный параметр (Целое число, обязательный параметр).
            </param>
            <param name="photoId">
            Идентификатор фотографии. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы:
            0 — спам;
            1 — детская порнография;
            2 — экстремизм;
            3 — насилие;
            4 — пропаганда наркотиков;
            5 — материал для взрослых;
            6 — оскорбление.
            положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.report
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.ReportComment(System.Int64,System.UInt64,VkNet.Enums.ReportReason)">
            <summary>
            Позволяет пожаловаться на комментарий к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор владельца фотографии к которой оставлен комментарий. целое число,
            обязательный
            параметр (Целое число, обязательный параметр).
            </param>
            <param name="commentId">
            Идентификатор комментария. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="reason">
            Причина жалобы:
            0 — спам;
            1 — детская порнография;
            2 — экстремизм;
            3 — насилие;
            4 — пропаганда наркотиков;
            5 — материал для взрослых;
            6 — оскорбление.
            положительное число (Положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.reportComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Search(VkNet.Model.RequestParams.PhotoSearchParams,System.Boolean)">
            <summary>
            Осуществляет поиск изображений по местоположению или описанию.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов фотографий.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Save(VkNet.Model.RequestParams.PhotoSaveParams)">
            <summary>
            Сохраняет фотографии после успешной загрузки.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.save
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Copy(System.Int64,System.UInt64,System.String)">
            <summary>
            Позволяет скопировать фотографию в альбом "Сохраненные фотографии".
            </summary>
            <param name="ownerId">
            Идентификатор владельца фотографии целое число, обязательный параметр (Целое
            число, обязательный
            параметр).
            </param>
            <param name="photoId">
            Индентификатор фотографии положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <param name="accessKey">
            Специальный код доступа для приватных фотографий
            строка (Строка).
            </param>
            <returns>
            Возвращает идентификатор созданной фотографии.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.copy
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Edit(VkNet.Model.RequestParams.PhotoEditParams)">
            <summary>
            Изменяет описание у выбранной фотографии.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Move(System.Int64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Переносит фотографию из одного альбома в другой.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="targetAlbumId">
            Идентификатор альбома, в который нужно переместить фотографию. целое число,
            обязательный
            параметр (Целое число, обязательный параметр).
            </param>
            <param name="photoId">
            Идентификатор фотографии, которую нужно перенести. целое число, обязательный
            параметр (Целое
            число, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.move
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.MakeCover(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Делает фотографию обложкой альбома.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. Фотография должна находиться в альбоме album_id.
            целое число,
            обязательный параметр (Целое число, обязательный параметр).
            </param>
            <param name="albumId"> Идентификатор альбома. целое число (Целое число). </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.makeCover
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.ReorderAlbums(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Меняет порядок альбома в списке альбомов пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит альбом.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="albumId">
            Идентификатор альбома. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <param name="before">
            Идентификатор альбома, перед которым следует поместить альбом. целое число
            (Целое число).
            </param>
            <param name="after">
            Идентификатор альбома, после которого следует поместить альбом. целое число
            (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.reorderAlbums
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.ReorderPhotos(System.UInt64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Меняет порядок фотографии в списке фотографий альбома пользователя.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="before">
            Идентификатор фотографии, перед которой следует поместить фотографию. Если
            параметр не указан,
            фотография будет помещена последней. целое число (Целое число).
            </param>
            <param name="after">
            Идентификатор фотографии, после которой следует поместить фотографию. Если
            параметр не указан,
            фотография будет помещена первой. целое число (Целое число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.reorderPhotos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetAll(VkNet.Model.RequestParams.PhotoGetAllParams)">
            <summary>
            Возвращает все фотографии пользователя или сообщества в антихронологическом
            порядке.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            <remarks>
            Если был задан параметр extended — будет возвращено поле likes:
            user_likes: 1 — текущему пользователю нравится данная фотография, 0 - не
            указано.
            count — количество пользователей, которым нравится текущая фотография.
            Если был задан параметр photo_sizes=1, вместо полей width и height возвращаются
            размеры копий фотографии в
            специальном формате.
            </remarks>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAll
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetUserPhotos(VkNet.Model.RequestParams.PhotoGetUserPhotosParams)">
            <summary>
            Возвращает список фотографий, на которых отмечен пользователь.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов photo.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getUserPhotos
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.DeleteAlbum(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Удаляет указанный альбом для фотографий у текущего пользователя.
            </summary>
            <param name="albumId">
            Идентификатор альбома. целое число, положительное число, обязательный параметр
            (Целое число,
            положительное число, обязательный параметр).
            </param>
            <param name="groupId">
            Идентификатор сообщества, в котором размещен альбом. целое число, положительное
            число (Целое
            число, положительное число).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.deleteAlbum
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Delete(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаление фотографии на сайте.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.Restore(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленную фотографию.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. положительное число, обязательный параметр
            (Положительное число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.restore
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.ConfirmTag(System.UInt64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Подтверждает отметку на фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. обязательный параметр
            (Обязательный параметр).
            </param>
            <param name="tagId">
            Идентификатор отметки на фотографии. целое число, обязательный параметр (Целое
            число, обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.confirmTag
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetComments(VkNet.Model.RequestParams.PhotoGetCommentsParams)">
            <summary>
            Возвращает список комментариев к фотографии.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Comment
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetAllComments(VkNet.Model.RequestParams.PhotoGetAllCommentsParams)">
            <summary>
            Возвращает отсортированный в антихронологическом порядке список всех
            комментариев к конкретному альбому или ко всем
            альбомам пользователя.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов Comment
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getAllComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.CreateComment(VkNet.Model.RequestParams.PhotoCreateCommentParams)">
            <summary>
            Создает новый комментарий к фотографии.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного комментария.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.createComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.DeleteComment(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаляет комментарий к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор комментария. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c> (0, если комментарий не
            найден).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.deleteComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.RestoreComment(System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Восстанавливает удаленный комментарий к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="commentId">
            Идентификатор удаленного комментария. целое число, обязательный параметр (Целое
            число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c> (0, если комментарий с
            таким идентификатором не является
            удаленным).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.restoreComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.EditComment(System.UInt64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <summary>
            Изменяет текст комментария к фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)
            </param>
            <param name="commentId"> Идентификатор комментария </param>
            <param name="message">
            Новый текст комментария (является обязательным, если не задан параметр
            attachments)
            </param>
            <param name="attachments">
            Новый список объектов, приложенных к комментарию и разделённых символом ",".
            Поле attachments представляется в
            формате: &lt;type&gt;&lt;owner_id&gt;_&lt;media_id&gt;,&lt;type&gt;&lt;owner_id
            &gt;_&lt;media_id&gt; &lt;type&gt; —
            тип медиа-вложения:
            photo — фотография
            video — видеозапись
            audio — аудиозапись
            doc — документ
            &lt;owner_id&gt; — идентификатор владельца медиа-вложения
            &lt;media_id&gt; — идентификатор медиа-вложения.
            <example>
            Например:
            photo100172_166443618,photo66748_265827614
            </example>
            Параметр является обязательным, если не задан параметр message. список строк,
            разделенных через запятую
            </param>
            <returns> После успешного выполнения возвращает true. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.editComment
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetTags(System.UInt64,System.Nullable{System.Int64},System.String)">
            <summary>
            Возвращает список отметок на фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="accessKey">
            Строковой ключ доступа, который може быть получен при получении объекта
            фотографии. строка
            (Строка).
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов tag, каждый из которых
            содержит следующие поля:
            user_id — идентификатор пользователя, которому соответствует отметка;
            id — идентификатор отметки;
            placer_id — идентификатор пользователя, сделавшего отметку;
            tagged_name — название отметки;
            date — дата добавления отметки в формате unixtime;
            x, y, x2, y2 — координаты прямоугольной области, на которой сделана отметка
            (верхний левый угол и нижний правый
            угол) в процентах;
            viewed — статус отметки (1 — подтвержденная, 0 — неподтвержденная).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getTags
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.PutTag(VkNet.Model.RequestParams.PhotoPutTagParams)">
            <summary>
            Добавляет отметку на фотографию.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной отметки (tag id).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.putTag
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.RemoveTag(System.UInt64,System.UInt64,System.Nullable{System.Int64})">
            <summary>
            Удаляет отметку с фотографии.
            </summary>
            <param name="ownerId">
            Идентификатор пользователя или сообщества, которому принадлежит фотография.
            Обратите внимание,
            идентификатор сообщества в параметре owner_id необходимо указывать со знаком
            "-" — например, owner_id=-1
            соответствует идентификатору сообщества ВКонтакте API (club1)  целое число, по
            умолчанию идентификатор текущего
            пользователя (Целое число, по умолчанию идентификатор текущего пользователя).
            </param>
            <param name="photoId">
            Идентификатор фотографии. целое число, обязательный параметр (Целое число,
            обязательный
            параметр).
            </param>
            <param name="tagId">
            Идентификатор отметки. целое число, обязательный параметр (Целое число,
            обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.removeTag
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetNewTags(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Возвращает список фотографий, на которых есть непросмотренные отметки.
            </summary>
            <param name="offset">
            Смещение, необходимое для получения определённого подмножества фотографий.
            целое число (Целое
            число).
            </param>
            <param name="count">
            Количество фотографий, которые необходимо вернуть. положительное число,
            максимальное значение 100,
            по умолчанию 20 (Положительное число, максимальное значение 100, по умолчанию
            20).
            </param>
            <returns>
            После успешного выполнения возвращает список объектов Photo
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getNewTags
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetMarketUploadServer(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Возвращает адрес сервера для загрузки фотографии товаров сообщества.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, для которого необходимо загрузить фотографию товара.
            положительное
            число, обязательный параметр (Положительное число, обязательный параметр).
            </param>
            <param name="mainPhoto">
            Является ли фотография обложкой товара  (1 — фотография для обложки, 0 —
            дополнительная
            фотография) флаг, может принимать значения 1 или 0 (Флаг, может принимать
            значения 1 или 0).
            </param>
            <param name="cropX">
            Координата x для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropY">
            Координата y для обрезки фотографии. положительное число
            (Положительное число).
            </param>
            <param name="cropWidth">
            Ширина фотографии после обрезки в px. положительное число, минимальное значение
            200
            (Положительное число, минимальное значение 200).
            </param>
            <returns>
            После успешного выполнения возвращает объект с единственным полем upload_url.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.getMarketUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.GetMarketAlbumUploadServer(System.Int64)">
            <summary>
            Возвращает адрес сервера для загрузки фотографии подборки товаров в сообществе.
            </summary>
            <param name="groupId">
            Идентификатор сообщества, для которого необходимо загрузить фотографию подборки
            товаров. целое
            число (Целое число).
            </param>
            <returns>
            .
            </returns>
            <remarks>
            Страница документации ВКонтакте
            http://vk.com/dev/photos.getMarketAlbumUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.SaveMarketPhoto(System.Int64,System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом
            photos.getMarketUploadServer.
            </summary>
            <param name="groupId">
            Идентификатор группы, для которой нужно загрузить фотографию. положительное
            число (положительное
            число).
            </param>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии на сервер. строка,
            обязательный параметр
            (строка, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveMarketPhoto
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPhotoCategory.SaveMarketAlbumPhoto(System.Int64,System.String)">
            <summary>
            Сохраняет фотографии после успешной загрузки на URI, полученный методом
            photos.getMarketAlbumUploadServer.
            </summary>
            <param name="groupId">
            Идентификатор группы, для которой нужно загрузить фотографию. положительное
            число, обязательный
            параметр (положительное число, обязательный параметр).
            </param>
            <param name="response">
            Параметр, возвращаемый в результате загрузки фотографии на сервер. строка,
            обязательный параметр
            (строка, обязательный параметр).
            </param>
            <returns>
            После успешного выполнения возвращает массив, содержащий объект с загруженной
            фотографией.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/photos.saveMarketAlbumPhoto
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPlacesCategory">
            <summary>
            Places Методы для работы с местами.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategory.Add(VkNet.Model.RequestParams.PlacesAddParams)">
            <summary>
            Добавляет новое место в базу географических мест.
            </summary>
            <param name="placesAddParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданного места (pid).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.add
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategory.Checkin(VkNet.Model.RequestParams.PlacesCheckinParams)">
            <summary>
            Отмечает пользователя в указанном месте.
            </summary>
            <param name="placesCheckinParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает идентификатор созданной отметки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.checkin
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategory.GetById(System.Collections.Generic.IEnumerable{System.UInt64})">
            <summary>
            Возвращает информацию о местах по их идентификаторам.
            </summary>
            <param name="places">
            Перечисленные через запятую идентификаторы мест список положительных чисел,
            разделенных запятыми, обязательный
            параметр
            </param>
            <returns>
            После успешного выполнения возвращает массив объектов place, каждый из которых
            имеет следующие поля:
            id — идентификатор места;
            title — название места;
            latitude — географическая широта, заданная в градусах (от -90 до 90);
            longitude — географическая долгота, заданная в градусах (от -180 до 180);
            created — дата добавления места в формате unixtime.
            Также, при наличии соответствующей информации, в объект могут включаться поля
            checkins, updated, type, country,
            city, address.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategory.GetCheckins(VkNet.Model.RequestParams.PlacesGetCheckinsParams)">
            <summary>
            Возвращает список отметок пользователей в местах согласно заданным параметрам.
            </summary>
            <param name="placesGetCheckinsParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает количество отметок и массив объектов
            chekin, каждый из которых имеет
            следующие поля:
            id — идентификатор отметки;
            user_id — идентификатор отметившегося пользователя;
            date — дата добавления отметки в формате unixtime;
            latitude — географическая широта, заданная в градусах (от -90 до 90);
            longitude — географическая долгота, заданная в градусах (от -180 до 180);
            place_id — идентификатор места;
            text — текст сопроводительного сообщения;
            distance — расстояние от места до заданной точки.
            Если в запросе был задан параметр need_places, то в объекте могут дополнительно
            содержаться следующие поля:
            place_title — наименование места;
            place_country — идентификатор страны;
            place_city — идентификатор города;
            place_address — адрес;
            place_type — тип места;
            place_icon.
            Если не заданы параметры latitude и longitude или параметр place, то будет
            возвращена лента обновлений отметок
            друзей. При указании параметра timestamp будут возвращены только те отметки из
            ленты обновлений, которые были
            созданы после указанного значения timestamp. Если timestamp не указан, то
            отметки из ленты будут возвращены с
            учетом параметров offset и count (если они заданы).
            Если заданы параметры latitude и longitude, то будут возвращены все отметки,
            сделанные за последние 24 часа,
            координаты которых находятся недалеко от Вас. Если задан параметр friends_only,
            то будут возвращены только
            последние ближайшие отметки Ваших друзей.
            Если задан параметр place, то будут возвращены последние 20 отметок, сделанные
            в месте с идентификатором, указанном
            в параметре place.
            Если задан параметр uid, то будут возвращены последние 20 отметок, сделанные
            пользователем с идентификатором,
            указанном в параметре uid.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.getCheckins
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategory.GetTypes">
            <summary>
            Возвращает список всех возможных типов мест.
            </summary>
            <returns>
            Возвращает массив всех возможных типов мест, каждый из объектов которого
            содержит поля tid, title и icon.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.getTypes
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPlacesCategory.Search(VkNet.Model.RequestParams.PlacesSearchParams)">
            <summary>
            Возвращает список мест, найденных по заданным условиям поиска.
            </summary>
            <param name="placesSearchParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает общее количество найденных мест и массив
            объектов place, каждый из которых
            имеет следующие поля:
            id — идентификатор места;
            title — название места;
            latitude — географическая широта, заданная в градусах (от -90 до 90);
            longitude — географическая долгота, заданная в градусах (от -180 до 180);
            created — дата добавления места;
            type — тип места;
            icon — иконка (url изображения);
            checkins — количество чекинов;
            updated — дата последнего чекина;
            type — идентификатор типа места;
            country — идентификатор страны;
            city — идентификатор города;
            address — адрес;
            distance — расстояние от исходной точки.
            Если место прикреплено к сообществу, дополнительно возвращаются поля group_id и
            group_photo.
            Если не задан параметр radius, то по умолчанию он будет иметь значение 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/places.search
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IPollsCategory">
            <summary>
            Методы этого класса позволяют производить действия с опросами.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategory.GetById(VkNet.Model.RequestParams.PollsGetByIdParams)">
            <summary>
            Возвращает детальную информацию об опросе по его идентификатору.
            </summary>
            <param name="params"> Параметры </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.GetById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategory.Edit(VkNet.Model.RequestParams.PollsEditParams)">
            <summary>
            Позволяет редактировать созданные опросы.
            </summary>
            <param name="params"> Параметры </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.Edit
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategory.AddVote(VkNet.Model.RequestParams.PollsAddVoteParams)">
            <summary>
            Отдает голос текущего пользователя за выбранный вариант ответа в указанном
            опросе.
            </summary>
            <param name="params"> Параметры </param>
            <returns>
            1 — если голос текущего пользователя был отдан за выбранный вариант ответа;
            0 — если текущий пользователь уже голосовал в указанном опросе
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.addVote
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategory.DeleteVote(VkNet.Model.RequestParams.PollsDeleteVoteParams)">
            <summary>
            Снимает голос текущего пользователя с выбранного варианта ответа в указанном
            опросе.
            </summary>
            <param name="params"> Параметры </param>
            <returns>
            1 — если голос текущего пользователя был снят с выбранного варианта ответа
            0 — если текущий пользователь еще не голосовал в указанном опросе или указан не
            выбранный им вариант ответа
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.DeleteVote
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategory.GetVoters(VkNet.Model.RequestParams.PollsGetVotersParams)">
            <summary>
            Получает список идентификаторов пользователей, которые выбрали определенные
            варианты ответа в опросе.
            </summary>
            <param name="params"> Параметры </param>
            <returns> </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.GetVoters
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IPollsCategory.Create(VkNet.Model.RequestParams.Polls.PollsCreateParams)">
            <summary>
            Позволяет создавать опросы, которые впоследствии можно прикреплять к записям на
            странице пользователя или
            сообщества.
            </summary>
            <param name="params"> Параметры </param>
            <returns>
            В случае успешного создания опроса в качестве результата возвращается объект
            опроса.
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/polls.create
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ISearchCategory">
            <summary>
            Методы для работы с поиском.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.ISearchCategory.GetHints(VkNet.Model.RequestParams.SearchGetHintsParams)">
            <summary>
            Метод позволяет получить результаты быстрого поиска по произвольной подстроке
            </summary>
            <param name="params"> Параметры запроса </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте https://vk.com/dev/search.getHints
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.ISecureCategory">
            <inheritdoc />
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.AddAppEvent(System.UInt64,System.UInt64,System.Nullable{System.UInt64})">
            <summary>
            Добавляет информацию о достижениях пользователя в приложении.
            </summary>
            <param name = "userId">
            Идентификатор пользователя, для которого нужно записать данные. положительное число, по умолчанию идентификатор текущего пользователя, обязательный параметр
            </param>
            <param name = "activityId">
            Идентификатор достижения. Доступные значения:
            1 — достигнут новый уровень, работает аналогично secure.setUserLevel;
            2 — заработано новое число очков;
            положительное число, отличное от 1 и 2 — выполнена миссия с идентификатором activity_id.
            положительное число, обязательный параметр
            </param>
            <param name = "value">
            Номер уровня или заработанное количество очков (соответственно, для activity_id=1 и activity_id=2).
            Параметр игнорируется при значении activity_id, отличном от 1 и 2. положительное число, максимальное значение 10000
            </param>
            <returns>
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.addAppEvent
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.CheckToken(System.String,System.String)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.CheckTokenAsync(System.String,System.String)"/>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.GetAppBalance">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetAppBalanceAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.GetSmsHistory(System.Nullable{System.UInt64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.UInt64})">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetSmsHistoryAsync(System.Nullable{System.UInt64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.UInt64})"/>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.GetTransactionsHistory">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.GetTransactionsHistoryAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.GetUserLevel(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Возвращает ранее выставленный игровой уровень одного или нескольких пользователей в приложении.
            </summary>
            <param name = "userIds">
            Идентификаторы пользователей, информацию об уровнях которых требуется получить. список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <returns>
            Возвращает значения игровых уровней пользователей в приложении.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/secure.getUserLevel
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.SendNotification(System.String,System.Collections.Generic.IEnumerable{System.UInt64})">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.SendNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.UInt64})"/>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.SendSmsNotification(System.UInt64,System.String)">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.SendSmsNotificationAsync(System.UInt64,System.String)"/>
        </member>
        <member name="M:VkNet.Abstractions.ISecureCategory.SetCounter(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <inheritdoc cref="M:VkNet.Abstractions.Category.ISecureCategoryAsync.SetCounterAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Int64},System.Nullable{System.Boolean})"/>
        </member>
        <member name="T:VkNet.Abstractions.IStatsCategory">
            <summary>
            Методы для работы со статистикой.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStatsCategory.Get(VkNet.Model.StatsGetParams)">
            <summary>
            Возвращает статистику сообщества или приложения.
            </summary>
            <param name = "getParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект с данными статистики.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stats.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStatsCategory.TrackVisitor">
            <summary>
            Добавляет данные о текущем сеансе в статистику посещаемости приложения..
            </summary>
            <returns>
            В случае успешной обработки данных метод вернет <c> true </c>.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stats.trackVisitor
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStatsCategory.GetPostReach(System.Int64,System.Int64)">
            <summary>
            Возвращает статистику для записи на стене.
            </summary>
            <param name="ownerId">
            Идентификатор сообщества — владельца записи. Указывается
            со знаком «минус».
            </param>
            <param name="postId">
            Идентификатор записи. Обратите внимание — данные по статистике доступны только
            для 300
            последних(самых свежих) записей на стене сообщества.
            </param>
            <returns>
            Возвращает результат выполнения метода.
            </returns>
            <remarks>
            Необходимо входить в число руководителей этого сообщества.
            Страница документации ВКонтакте https://vk.com/dev/stats.getPostReach
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStatusCategory">
            <summary>
            Методы для работы со статусом пользователя или сообщества.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStatusCategory.Get(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Получает статус пользователя или сообщества.
            </summary>
            <param name="userId">
            Идентификатор пользователя или сообщества, информацию о статусе которого нужно
            получить.
            </param>
            <param name="groupId">
            Идентификатор сообщества, статус которого необходимо получить. положительное
            число (Положительное
            число).
            </param>
            <returns>
            В случае успеха возвращается статус пользователдя или сообщества.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Status
            Страница документации ВКонтакте http://vk.com/dev/status.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStatusCategory.Set(System.String,System.Nullable{System.Int64})">
            <summary>
            Устанавливает новый статус текущему пользователю.
            </summary>
            <param name="text">
            Текст статуса, который необходимо установить текущему пользователю. Если
            параметр
            равен пустой строке, то статус текущего пользователя будет очищен.
            </param>
            <param name="groupId">
            Идентификатор сообщества, в котором будет установлен статус. По умолчанию
            статус устанавливается
            текущему пользователю.
            </param>
            <returns>
            Возвращает true, если статус был успешно установлен, false в
            противном случае.
            </returns>
            <remarks>
            Для вызова этого метода Ваше приложение должно иметь права с битовой маской,
            содержащей Settings.Status
            Страница документации ВКонтакте http://vk.com/dev/status.set
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStorageCategory">
            <inheritdoc />
            <summary>
            Storage Методы для работы с переменными в приложении.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStorageCategory.Get(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает значение переменной, название которой передано в параметре key.
            </summary>
            <param name="keys">
            Список названий переменных, разделённых запятыми. Если указан этот параметр, то
            параметр key не учитывается. список
            слов, разделенных через запятую, количество элементов должно составлять не
            более 1000
            </param>
            <param name="userId">
            Id пользователя, переменная которого устанавливается, в случае если данные
            запрашиваются серверным методом.
            положительное число
            </param>
            <param name="global">
            Указывается 1, если необходимо работать с глобальными переменными, а не с
            переменными пользователя. флаг, может
            принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            Возвращает значение одной или нескольких переменных. Если переменная на сервере
            отсутствует, то будет возвращена
            пустая строка.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/storage.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStorageCategory.GetKeys(System.Nullable{System.UInt64},System.Nullable{System.Boolean},System.Nullable{System.UInt64},System.Nullable{System.UInt64})">
            <summary>
            Возвращает названия всех переменных.
            </summary>
            <param name="userId">
            Id пользователя, названия переменных которого получаются, в случае если данные
            запрашиваются серверным методом.
            положительное число
            </param>
            <param name="global">
            Указывается 1, если необходимо работать с глобальными переменными, а не с
            переменными пользователя. флаг, может
            принимать значения 1 или 0, по умолчанию 0
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного подмножества названий
            переменных. По умолчанию 0. положительное
            число, по умолчанию 0
            </param>
            <param name="count">
            Количество названий переменных, информацию о которых необходимо получить.
            положительное число, максимальное
            значение 1000, по умолчанию 100
            </param>
            <returns>
            Возвращает массив названий переменных.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/storage.getKeys
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStorageCategory.Set(System.String,System.String,System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Сохраняет значение переменной, название которой передано в параметре key.
            </summary>
            <param name="key">
            Название переменной. Может содержать символы латинского алфавита, цифры, знак
            тире, нижнее подчёркивание [a-zA-Z_
            &#092;-0-9]. строка, максимальная длина 100, обязательный параметр
            </param>
            <param name="value">
            Значение переменной, сохраняются только первые 4096 байта. строка
            </param>
            <param name="userId">
            Id пользователя, переменная которого устанавливается, в случае если данные
            запрашиваются серверным методом.
            положительное число
            </param>
            <param name="global">
            Указывается 1, если необходимо работать с глобальными переменными, а не с
            переменными пользователя. флаг, может
            принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            Возвращает 1 в случае удачного сохранения переменной.
            Для удаления переменной необходимо передать пустое значение в параметре value.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/storage.set
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStoriesCategory">
            <inheritdoc />
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.BanOwner(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Позволяет скрыть из ленты новостей истории от выбранных источников.
            </summary>
            <param name = "ownersIds">
            Список идентификаторов источников. список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.banOwner
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.Delete(System.Int64,System.UInt64)">
            <summary>
            Удаляет историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.delete
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.Get(System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает истории, доступные для текущего пользователя.
            </summary>
            <param name = "ownerId">
            Идентификатор пользователя, истории которого необходимо получить. целое число
            </param>
            <param name = "extended">
            1 — возвращать в ответе дополнительную информацию о профилях пользователей. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число подборок в поле count и массив подборок историй  в поле items. Каждая подборка — массив историй от одного владельца.
            Если был задан параметр extended=1, дополнительно возвращает массив объектов пользователей в поле profiles (array) и сообществ в поле groups (array).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetBanned(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает список источников историй, скрытых из ленты текущего пользователя.
            </summary>
            <param name = "fields">
            Дополнительные поля пользователей и сообществ, которые необходимо вернуть. список слов, разделенных через запятую
            </param>
            <param name = "extended">
            1 — возвращать расширенную информацию о пользователях и сообществах. флаг, может принимать значения 1 или 0
            </param>
            <returns>
            После успешного выполнения возвращает общее количество скрытых источников в поле count (integer) и их идентификаторы в массиве items. Если extended = 1, items содержит два поля:
            profiles (array) — массив объектов, описывающих пользователей;
            groups (array) — массив объектов, описывающих сообщества.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getBanned
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetById(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает информацию об истории по её идентификатору.
            </summary>
            <param name = "stories">
            Перечисленные через запятую идентификаторы, которые представляют собой идущие через знак подчеркивания идентификаторы владельцев историй и идентификаторы самих историй.
            Пример значения stories:
            93388_21539,93388_20904 список слов, разделенных через запятую, обязательный параметр
            </param>
            <param name = "fields">
            Дополнительные поля профилей и сообществ, которые необходимо вернуть в ответе. список слов, разделенных через запятую
            </param>
            <param name = "extended">
            1 — возвращать в ответе дополнительную информацию о пользователях. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число историй в поле count и массив объектов историй  в поле items.
            Если был задан параметр extended = 1, дополнительно возвращает массив объектов  пользователей в поле profiles и объектов сообществ в поле groups.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getById
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetPhotoUploadServer(VkNet.Model.RequestParams.Stories.GetPhotoUploadServerParams)">
            <summary>
            Позволяет получить адрес для загрузки истории с фотографией.
            </summary>
            <param name = "getPhotoUploadServerParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            upload_url (string) — адрес сервера для загрузки файла;
            user_ids (array) — идентификаторы пользователей, которые могут видеть историю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getPhotoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetReplies(System.Int64,System.UInt64,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Позволяет получить ответы на историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <param name = "accessKey">
            Ключ доступа для приватного объекта. строка
            </param>
            <param name = "fields">
            Дополнительные поля профилей и сообществ, которые необходимо вернуть в ответе. список слов, разделенных через запятую
            </param>
            <param name = "extended">
            1 — возвращать дополнительную информацию о профилях и сообществах. флаг, может принимать значения 1 или 0, по умолчанию
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число подборок в поле count и массив подборок историй  в поле items. Каждая подборка — массив историй от одного владельца.
            Если был задан параметр extended=1, дополнительно возвращает массив объектов пользователей в поле profiles (array) и сообществ в поле groups (array).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getReplies
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetStats(System.Int64,System.UInt64)">
            <summary>
            Возвращает статистику истории.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <returns>
            Возвращает объект, который содержит следующие поля:
            views (object) — просмотры. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            replies  (object) — ответы на историю. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            answer (object) — число
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            shares  (object) — расшаривания истории. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            subscribers (object) — новые подписчики. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            bans  (object) — скрытия истории. Содержит поля:
            state (string) — доступность значения (on — доступно, off — недоступно);
            count (integer) — значение счётчика;
            open_link (object) — переходы по ссылке. Содержит поля:
            state (string) — доступность значения (on — доступно, hidden — недоступно);
            count (integer) — значение счётчика.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetVideoUploadServer(VkNet.Model.RequestParams.Stories.GetVideoUploadServerParams)">
            <summary>
            Позволяет получить адрес для загрузки видеозаписи в историю.
            </summary>
            <param name = "getVideoUploadServerParams">
            Входные параметры запроса.
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий следующие поля:
            upload_url (string) — адрес сервера для загрузки файла;
            user_ids (array) — идентификаторы пользователей, которые могут видеть историю.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getVideoUploadServer
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.GetViewers(System.Int64,System.UInt64,System.Nullable{System.UInt64},System.Nullable{System.UInt64},System.Nullable{System.Boolean})">
            <summary>
            Возвращает список пользователей, просмотревших историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории. целое число, по умолчанию идентификатор текущего пользователя, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории. положительное число, обязательный параметр
            </param>
            <param name = "count">
            Максимальное число результатов в ответе. положительное число, по умолчанию 100
            </param>
            <param name = "offset">
            Сдвиг для получения определённого подмножества результатов. положительное число, по умолчанию 0
            </param>
            <param name = "extended">
            1 — возвращать в ответе расширенную информацию о пользователях. флаг, может принимать значения 1 или 0, по умолчанию 0
            </param>
            <returns>
            После успешного выполнения возвращает объект, содержащий число результатов в поле count и идентификаторы пользователей в поле items (array). Если extended = 1, поле items (array) содержит массив объектов пользователей.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.getViewers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.HideAllReplies(System.Int64)">
            <summary>
            Скрывает все ответы автора за последние сутки на истории текущего пользователя.
            </summary>
            <param name = "ownerId">
            Идентификатор пользователя, ответы от которого нужно скрыть. целое число, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.hideAllReplies
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.HideReply(System.Int64,System.UInt64,System.String)">
            <summary>
            Скрывает ответ на историю.
            </summary>
            <param name = "ownerId">
            Идентификатор владельца истории (ответной). целое число, обязательный параметр
            </param>
            <param name = "storyId">
            Идентификатор истории (ответной). положительное число, обязательный параметр
            </param>
            <param name = "accessKey">
            Ключ доступа к приватному объекту. строка
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.hideReply
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStoriesCategory.UnbanOwner(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Позволяет вернуть пользователя или сообщество в список отображаемых историй в ленте.
            </summary>
            <param name = "ownersIds">
            Список идентификаторов владельцев историй, разделённых запятой. список целых чисел, разделенных запятыми, обязательный параметр
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/stories.unbanOwner
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IStreamingCategory">
            <summary>
            Список методов секции Streaming
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategory.GetServerUrl">
            <summary>
            Позволяет получить данные для подключения к Streaming API.
            </summary>
            <returns>
            Возвращает объект, который содержит следующие поля:
            endpoint (string) — хост для подключения к серверу;
            key (string) — ключ доступа. Ключ бессрочный и прекращает действовать только
            после получения нового ключа.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.getServerUrl
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategory.GetSettings">
            <summary>
            Позволяет получить значение порога для Streaming API.
            </summary>
            <returns>
            Возвращает объект с единственным полем monthly_limit (string), которое содержит
            значение tier_1-tier_6 или
            unlimited и соответствует установленному порогу для приложения.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.getSettings
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategory.GetStats(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Позволяет получить статистику для подготовленных и доставленных событий
            Streaming API.
            </summary>
            <param name="type">
            Тип статистики. Возможные значения:
            received — события, полученные приложением;
            prepared — события, сгенерированные со стороны ВКонтакте.
            строка
            </param>
            <param name="interval">
            Интервалы статистики. Возможные значения:
            5m — пять минут. Максимальный период — 3 дня между start_time и end_time;
            1h — один час. Максимальный период — 7 дней между start_time и end_time;
            24h — сутки. Максимальный период — 31 день между start_time и end_time.
            строка, по умолчанию 5m
            </param>
            <param name="startTime">
            Время начала отсчёта в Unixtime. По умолчанию: end_time минус сутки.
            положительное число
            </param>
            <param name="endTime">
            Время окончания отсчёта в Unixtime. По умолчанию: текущее время. положительное
            число
            </param>
            <returns>
            Возвращает массив объектов, каждый из которых содержит поля:
            event_type (string) — тип событий. Возможные значения:
            post — записи на стене;
            comment — комментарии;
            share — репосты.
            stats (array) — значения статистики. Массив объектов, каждый из которых
            содержит оля:
            timestamp (integer) — время, соответствующее значению;
            value (integer) — значение.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.getStats
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IStreamingCategory.SetSettings(VkNet.Enums.SafetyEnums.MonthlyLimit)">
            <summary>
            Позволяет задать значение порога для Streaming API.
            </summary>
            <param name="monthlyTier">
            Значение порога в месяц. Возможные значения:
            </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/streaming.setSettings
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IUsersCategory">
            <summary>
            Методы для работы с информацией о пользователях.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.Search(VkNet.Model.RequestParams.UserSearchParams)">
            <summary>
            Возвращает список пользователей в соответствии с заданным критерием поиска.
            </summary>
            <param name="params"> Параметры запроса. </param>
            <returns>
            После успешного выполнения возвращает список объектов пользователей, найденных
            в соответствии с заданными
            критериями.
            </returns>
            <exception cref="T:System.ArgumentException"> Query can not be <c> null </c> or empty. </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.search
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.IsAppUser(System.Nullable{System.Int64})">
            <summary>
            Возвращает информацию о том, установил ли пользователь приложение.
            </summary>
            <param name="userId">
            Идентификатор пользователя. целое число, по умолчанию идентификатор текущего
            пользователя (Целое
            число, по умолчанию идентификатор текущего пользователя).
            </param>
            <returns>
            После успешного выполнения возвращает 1 в случае, если пользователь установил у
            себя данное приложение, иначе 0.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.isAppUser
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.Get(System.Collections.Generic.IEnumerable{System.Int64},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase,System.Boolean)">
            <summary>
            Возвращает расширенную информацию о пользователях. Метод не требует авторизацию
            </summary>
            <param name="userIds">
            Идентификаторы пользователей, о которых необходимо
            получить информацию.
            </param>
            <param name="fields"> Поля профилей, которые необходимо возвратить. </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns> Список объектов с запрошенной информацией о пользователях. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.Get(System.Collections.Generic.IEnumerable{System.String},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase,System.Boolean)">
            <summary>
            Возвращает расширенную информацию о пользователях.
            </summary>
            <param name="screenNames">
            Короткие имена пользователей, о которых необходимо
            получить информацию.
            </param>
            <param name="fields"> Поля профилей, которые необходимо возвратить. </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns> Список объектов с запрошенной информацией о пользователях. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.GetSubscriptions(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.Filters.GroupsFields,System.Boolean)">
            <summary>
            Возвращает список идентификаторов пользователей и групп, которые входят в
            список подписок пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, подписки которого необходимо
            получить
            </param>
            <param name="count"> Количество подписок, которые необходимо вернуть </param>
            <param name="offset">
            Смещение необходимое для выборки определенного
            подмножества подписок
            </param>
            <param name="fields">
            Список дополнительных полей для объектов user и group, которые необходимо
            вернуть.
            </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            Пока возвращается только список групп.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.getSubscriptions
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.GetFollowers(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Int32},VkNet.Enums.Filters.ProfileFields,VkNet.Enums.SafetyEnums.NameCase,System.Boolean)">
            <summary>
            Возвращает список идентификаторов пользователей, которые являются подписчиками
            пользователя.
            </summary>
            <param name="userId"> Идентификатор пользователя </param>
            <param name="count">
            Количество подписчиков, информацию о которых нужно
            получить
            </param>
            <param name="offset">
            Смещение, необходимое для выборки определенного
            подмножества подписчиков
            </param>
            <param name="fields"> Список дополнительных полей, которые необходимо вернуть </param>
            <param name="nameCase"> Падеж для склонения имени и фамилии пользователя </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns> Список подписчиков </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.getFollowers
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.Report(System.Int64,VkNet.Enums.SafetyEnums.ReportType,System.String)">
            <summary>
            Позволяет пожаловаться на пользователя.
            </summary>
            <param name="userId">
            Идентификатор пользователя, на которого осуществляется
            жалоба
            </param>
            <param name="type"> Тип жалобы </param>
            <param name="comment"> Комментарий к жалобе на пользователя </param>
            <returns> В случае успешной жалобы метод вернет true. </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.report
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUsersCategory.GetNearby(VkNet.Model.RequestParams.UsersGetNearbyParams)">
            <summary>
            Индексирует текущее местоположение пользователя и возвращает список
            пользователей, которые находятся вблизи.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <returns>
            После успешного выполнения возвращает список объектов user.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/users.getNearby
            </remarks>
        </member>
        <member name="T:VkNet.Abstractions.IUtilsCategory">
            <summary>
            Служебные методы.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.CheckLink(System.String,System.Boolean)">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на
            сайте ВКонтакте.
            </summary>
            <param name="url"> Внешняя ссылка, которую необходимо проверить. </param>
            <param name="skipAuthorization"> Без авторизации </param>
            <returns> Статус ссылки </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.checkLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.CheckLink(System.Uri,System.Boolean)">
            <summary>
            Возвращает информацию о том, является ли внешняя ссылка заблокированной на
            сайте ВКонтакте.
            </summary>
            <param name="url"> Внешняя ссылка, которую необходимо проверить. </param>
            <param name="skipAuthorization"> Без авторизации </param>
            <returns> Статус ссылки </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.checkLink
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.ResolveScreenName(System.String)">
            <summary>
            Определяет тип объекта (пользователь, сообщество, приложение) и его
            идентификатор по короткому имени ScreenName.
            </summary>
            <param name="screenName"> Короткое имя </param>
            <returns> Тип объекта </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.resolveScreenName
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.GetServerTime">
            <summary>
            Возвращает текущее время на сервере ВКонтакте в unixtime.
            </summary>
            <returns> Время на сервере ВКонтакте в unixtime </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.getServerTime
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.GetShortLink(System.Uri,System.Boolean)">
            <summary>
            Позволяет получить URL, сокращенный с помощью vk.cc.
            </summary>
            <returns> URL, сокращенный с помощью vk.cc </returns>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.DeleteFromLastShortened(System.String)">
            <summary>
            Удаляет сокращенную ссылку из списка пользователя.
            </summary>
            <param name="key"> сокращенная ссылка (часть URL после "vk.cc/"). </param>
            <returns>
            После успешного выполнения возвращает 1.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.deleteFromLastShortened
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.GetLastShortenedLinks(System.UInt64,System.UInt64)">
            <summary>
            Получает список сокращенных ссылок для текущего пользователя.
            </summary>
            <param name="count"> количество ссылок, которые необходимо получить. </param>
            <param name="offset"> сдвиг для получения определенного подмножества ссылок. </param>
            <returns>
            Возвращает количество ссылок в поле count (integer) и массив объектов items,
            описывающих ссылки.
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/utils.getLastShortenedLinks
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IUtilsCategory.GetLinkStats(VkNet.Model.RequestParams.LinkStatsParams)">
            <summary>
            Возвращает статистику переходов по сокращенной ссылке.
            </summary>
            <param name="params"> Параметры запроса </param>
            <returns> </returns>
        </member>
        <member name="T:VkNet.Abstractions.IVideoCategory">
            <inheritdoc cref="T:VkNet.Abstractions.IVideoCategoryAsync"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Get(VkNet.Model.RequestParams.VideoGetParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetAsync(VkNet.Model.RequestParams.VideoGetParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Edit(VkNet.Model.RequestParams.VideoEditParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.EditAsync(VkNet.Model.RequestParams.VideoEditParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Add(System.Int64,System.Int64,System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.AddAsync(System.Int64,System.Int64,System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Save(VkNet.Model.RequestParams.VideoSaveParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.SaveAsync(VkNet.Model.RequestParams.VideoSaveParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Delete(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.DeleteAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Restore(System.Int64,System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.RestoreAsync(System.Int64,System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Search(VkNet.Model.RequestParams.VideoSearchParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.SearchAsync(VkNet.Model.RequestParams.VideoSearchParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.GetAlbums(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetAlbumsAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.AddAlbum(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Privacy})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.AddAlbumAsync(System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Enums.SafetyEnums.Privacy})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.EditAlbum(System.Int64,System.String,System.Nullable{System.Int64},VkNet.Enums.SafetyEnums.Privacy)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.EditAlbumAsync(System.Int64,System.String,System.Nullable{System.Int64},VkNet.Enums.SafetyEnums.Privacy)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.DeleteAlbum(System.Int64,System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.DeleteAlbumAsync(System.Int64,System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.GetComments(VkNet.Model.RequestParams.VideoGetCommentsParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetCommentsAsync(VkNet.Model.RequestParams.VideoGetCommentsParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.CreateComment(VkNet.Model.RequestParams.VideoCreateCommentParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.CreateCommentAsync(VkNet.Model.RequestParams.VideoCreateCommentParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.DeleteComment(System.Int64,System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.DeleteCommentAsync(System.Int64,System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.RestoreComment(System.Int64,System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.RestoreCommentAsync(System.Int64,System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.EditComment(System.Int64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.EditCommentAsync(System.Int64,System.String,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{VkNet.Model.Attachments.MediaAttachment})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.Report(System.Int64,VkNet.Enums.ReportReason,System.Nullable{System.Int64},System.String,System.String)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.ReportAsync(System.Int64,VkNet.Enums.ReportReason,System.Nullable{System.Int64},System.String,System.String)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.ReportComment(System.Int64,System.Int64,VkNet.Enums.ReportReason)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.ReportCommentAsync(System.Int64,System.Int64,VkNet.Enums.ReportReason)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.GetAlbumById(System.Int64,System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetAlbumByIdAsync(System.Int64,System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.ReorderAlbums(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.ReorderAlbumsAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.ReorderVideos(VkNet.Model.RequestParams.VideoReorderVideosParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.ReorderVideosAsync(VkNet.Model.RequestParams.VideoReorderVideosParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.AddToAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.AddToAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.RemoveFromAlbum(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.RemoveFromAlbumAsync(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int64},System.Nullable{System.Int64})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.GetAlbumsByVideo(System.Nullable{System.Int64},System.Int64,System.Int64,System.Nullable{System.Boolean})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetAlbumsByVideoAsync(System.Nullable{System.Int64},System.Int64,System.Int64,System.Nullable{System.Boolean})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.GetCatalog(VkNet.Model.RequestParams.VideoGetCatalogParams)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetCatalogAsync(VkNet.Model.RequestParams.VideoGetCatalogParams)"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.GetCatalogSection(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.GetCatalogSectionAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean})"/>
        </member>
        <member name="M:VkNet.Abstractions.IVideoCategory.HideCatalogSection(System.Int64)">
            <inheritdoc cref="M:VkNet.Abstractions.IVideoCategoryAsync.HideCatalogSectionAsync(System.Int64)"/>
        </member>
        <member name="T:VkNet.Abstractions.IWallCategory">
            <summary>
            Методы для работы со стеной пользователя.
            </summary>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategory.Get(VkNet.Model.RequestParams.WallGetParams,System.Boolean)">
            <summary>
            Возвращает список записей со стены пользователя или сообщества.
            </summary>
            <param name="params"> Входные параметры. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            В случае успеха возвращается запрошенный список записей со стены.
            </returns>
            <exception cref="T:System.ArgumentException">
            OwnerID must be negative in case
            filter equal to Suggests;ownerId
            </exception>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.get
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategory.GetComments(VkNet.Model.RequestParams.WallGetCommentsParams,System.Boolean)">
            <summary>
            Возвращает список комментариев к записи на стене.
            </summary>
            <param name="params"> Входные параметры выборки. </param>
            <param name="skipAuthorization"> Если <c> true </c>, то пропустить авторизацию </param>
            <returns>
            После успешного выполнения возвращает список объектов комментариев.
            Если был задан параметр need_likes=1, у объектов комментариев возвращается
            дополнительное поле likes:
            count — число пользователей, которым понравился комментарий;
            user_likes — наличие отметки «Мне нравится» от текущего пользователя
            (1 — есть, 0 — нет);
            can_like — информация о том, может ли текущий пользователь поставить отметку
            «Мне нравится»
            (1 — может, 0 — не может).
            Если был передан параметр start_comment_id, будет также возвращено поле
            real_offset – итоговое смещение данного
            подмножества комментариев (оно может быть отрицательным, если был указан
            отрицательный offset).
            </returns>
            <remarks>
            Страница документации ВКонтакте http://vk.com/dev/wall.getComments
            </remarks>
        </member>
        <member name="M:VkNet.Abstractions.IWallCategory.GetById(System.Co