<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- (RU) Параметры кнопки / (EN) Parameters buttons  -->
    <Style
        x:Key="ButtonBaseBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!-- (RU) Стиль кнопки / (EN) Button style  -->
    <Style
        x:Key="ButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <Grid x:Name="PressedLayer" Visibility="Collapsed">
                                <Rectangle
                                    Height="3"
                                    VerticalAlignment="Top"
                                    Fill="#1F000000"
                                    RadiusX="4"
                                    RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="5" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border
                                    BorderBrush="#1F000000"
                                    BorderThickness="1,0"
                                    CornerRadius="4">
                                    <Border.Effect>
                                        <BlurEffect Radius="3" />
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Rectangle
                            x:Name="EnabledLayer"
                            Fill="#4CFFFFFF"
                            RadiusX="4"
                            RadiusY="4"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PressedLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- (RU) Стиль ToggleButton / (EN) Style ToggleButton  -->
    <Style
        x:Key="ToggleButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <Grid x:Name="CheckedLayer" Visibility="Collapsed">
                                <Rectangle
                                    Height="3"
                                    VerticalAlignment="Top"
                                    Fill="#1F000000"
                                    RadiusX="4"
                                    RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="5" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border
                                    BorderBrush="#1F000000"
                                    BorderThickness="1,0"
                                    CornerRadius="4">
                                    <Border.Effect>
                                        <BlurEffect Radius="3" />
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Rectangle
                            x:Name="EnabledLayer"
                            Fill="#4CFFFFFF"
                            RadiusX="4"
                            RadiusY="4"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckedLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- (RU) Стандартный стиль кнопки / (EN) Regular button Style  -->
    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Default1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Default1}" />
        <Setter Property="Foreground" Value="{DynamicResource Dr0bForeground-Default}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6" />
                <Setter Property="BorderBrush" Value="#adadad" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Синяя кнопка / (EN) Blue button  -->
    <Style
        x:Key="btn-blue"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Primary1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Primary1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9" />
                <Setter Property="BorderBrush" Value="#285e8e" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Зелёная кнопка / (EN) Green button  -->
    <Style
        x:Key="btn-green"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Success1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Success1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44" />
                <Setter Property="BorderBrush" Value="#398439" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Светло-голубая кнопка / (EN) Light blue button  -->
    <Style
        x:Key="btn-lightblue"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Info1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Info1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5" />
                <Setter Property="BorderBrush" Value="#269abc" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Оранжевая кнопка / (EN) Orange button  -->
    <Style
        x:Key="btn-orange"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Warning1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Warning1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f" />
                <Setter Property="BorderBrush" Value="#d58512" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Красная кнопка / (EN) Red button  -->
    <Style
        x:Key="btn-red"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Danger1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Danger1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c" />
                <Setter Property="BorderBrush" Value="#ac2925" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- (RU) Стандартный стиль ToggleButton / (EN) Regular style ToggleButton  -->
    <Style BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Default1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Default1}" />
        <Setter Property="Foreground" Value="{DynamicResource Dr0bForeground-Default}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6" />
                <Setter Property="BorderBrush" Value="#adadad" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Синий ToggleButton / (EN) Blue ToggleButton  -->
    <Style
        x:Key="tbtn-blue"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Primary1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Primary1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9" />
                <Setter Property="BorderBrush" Value="#285e8e" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Зелёный ToggleButton / (EN) Green ToggleButton  -->
    <Style
        x:Key="tbtn-green"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Success1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Success1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44" />
                <Setter Property="BorderBrush" Value="#398439" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Светло-голубой ToggleButton / (EN) Light blue ToggleButton  -->
    <Style
        x:Key="tbtn-lightblue"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Info1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Info1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5" />
                <Setter Property="BorderBrush" Value="#269abc" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Оранжевый ToggleButton / (EN) Orange ToggleButton  -->
    <Style
        x:Key="tbtn-orange"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Warning1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Warning1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f" />
                <Setter Property="BorderBrush" Value="#d58512" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- (RU) Красный ToggleButton / (EN) Red ToggleButton  -->
    <Style
        x:Key="tbtn-red"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Dr0bBackground-Danger1}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Dr0bBorderBrush-Danger1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c" />
                <Setter Property="BorderBrush" Value="#ac2925" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- (RU) Текст кнопка / (EN) Text button  -->
    <Style
        x:Key="TextButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#7E8FA5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="7,7" />
        <Setter Property="Margin" Value="0,10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            FontFamily="{TemplateBinding FontFamily}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF6BA1FF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-->
    <Style
        x:Key="Card"
        TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <!--TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-TEST-->
    
</ResourceDictionary>